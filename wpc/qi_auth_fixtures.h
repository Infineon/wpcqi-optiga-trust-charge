/**
* MIT License
*
* Copyright (c) 2020 Infineon Technologies AG
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE
*
*
* \file qi_auth_fixtures.h
*
* \brief   This file defines APIs, types and data structures for Crypto Wrapper.
* @{
*/
#ifndef _QI_AUTH_FIXTURES_H_
#define _QI_AUTH_FIXTURES_H_


static const uint8_t qi_auth_cr660_draft5_root_hash[] = {
		0xF0, 0x53, 0x50, 0x6D, 0xC5, 0x75, 0x99, 0x05, 0xF6, 0xA5, 0x4C, 0x98, 0x31, 0xA1, 0x5E, 0x03,
		0x74, 0x0E, 0xA7, 0xF7, 0x08, 0x67, 0x90, 0x52, 0xDD, 0xCA, 0x52, 0x85, 0x50, 0x26, 0xEE, 0x05
};

static const char qi_auth_cr660_draft5_root_cert[] = {
		"-----BEGIN CERTIFICATE-----\n"
		"MIIBCDCBr6ADAgECAgQSNFZ4MAoGCCqGSM49BAMCMBExDzANBgNVBAMMBldQQ0NB\n"
		"MTAgFw03MDAxMDEwMDAwMDBaGA85OTk5MTIzMTIzNTk1OVowETEPMA0GA1UEAwwG\n"
		"V1BDQ0ExMDkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDIgACRrJRlZ8BO4U4FE9i/6S3\n"
		"BhfKnrtB1kDwjqFhHvCTLYajEzARMA8GA1UdEwEB/wQFMAMBAf8wCgYIKoZIzj0E\n"
		"AwIDSAAwRQIhANQGTZMiejvGcvWwWXlqrS6IE02EndiXsK3zwuabQr3tAiBoeQ3p\n"
		"C1dykPFtZ4vPZVMR/x8DhKm3/3oj//b3R/1q8g==\n"
		"-----END CERTIFICATE-----"
};

static const uint8_t qi_auth_cr660_draft5_certificate[] =
{
		// Size of the chain
        0x02, 0x4f,
		// Root CA Hash
        0xf0, 0x53, 0x50, 0x6d, 0xc5, 0x75, 0x99, 0x05, 0xf6, 0xa5, 0x4c, 0x98, 0x31, 0xa1, 0x5e, 0x03,
        0x74, 0x0e, 0xa7, 0xf7, 0x08, 0x67, 0x90, 0x52, 0xdd, 0xca, 0x52, 0x85, 0x50, 0x26, 0xee, 0x05,
		/* Manufacturer CA
         *
-----BEGIN CERTIFICATE-----
MIIBHzCBx6ADAgECAgQSNKvNMAoGCCqGSM49BAMCMBExDzANBgNVBAMMBldQQ0NB
MTAgFw03MDAxMDEwMDAwMDBaGA85OTk5MTIzMTIzNTk1OVowEjEQMA4GA1UEAwwH
Q0FGRS0xQTA5MBMGByqGSM49AgEGCCqGSM49AwEHAyIAA6gHULXRmCEYqSk1TUqo
MzOvf5PwKZNl0+ngmZc4lpRdoyowKDASBgNVHRMBAf8ECDAGAQH/AgEAMBIGBWeB
fwEBAQH/BAYEBAAAAAAwCgYIKoZIzj0EAwIDRwAwRAIgM+OJcOFv19yHy1DJg7qO
b4U0cfei0KS88/LaBg7WYWQCIF0qVuVEZnLXzSZRHxqTlsEordJcAQQuXHxSsHZE
/Zr/
-----END CERTIFICATE-----
		 */
		0x30, 0x82, 0x01, 0x1f, 0x30, 0x81, 0xc7, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x04, 0x12, 0x34,
		0xab, 0xcd, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x11,
		0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x06, 0x57, 0x50, 0x43, 0x43, 0x41,
		0x31, 0x30, 0x20, 0x17, 0x0d, 0x37, 0x30, 0x30, 0x31, 0x30, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30,
		0x30, 0x5a, 0x18, 0x0f, 0x39, 0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39,
		0x35, 0x39, 0x5a, 0x30, 0x12, 0x31, 0x10, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x07,
		0x43, 0x41, 0x46, 0x45, 0x2d, 0x31, 0x41, 0x30, 0x39, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48,
		0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x22,
		0x00, 0x03, 0xa8, 0x07, 0x50, 0xb5, 0xd1, 0x98, 0x21, 0x18, 0xa9, 0x29, 0x35, 0x4d, 0x4a, 0xa8,
		0x33, 0x33, 0xaf, 0x7f, 0x93, 0xf0, 0x29, 0x93, 0x65, 0xd3, 0xe9, 0xe0, 0x99, 0x97, 0x38, 0x96,
		0x94, 0x5d, 0xa3, 0x2a, 0x30, 0x28, 0x30, 0x12, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff,
		0x04, 0x08, 0x30, 0x06, 0x01, 0x01, 0xff, 0x02, 0x01, 0x00, 0x30, 0x12, 0x06, 0x05, 0x67, 0x81,
		0x7f, 0x01, 0x01, 0x01, 0x01, 0xff, 0x04, 0x06, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x30, 0x0a,
		0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x47, 0x00, 0x30, 0x44, 0x02,
		0x20, 0x33, 0xe3, 0x89, 0x70, 0xe1, 0x6f, 0xd7, 0xdc, 0x87, 0xcb, 0x50, 0xc9, 0x83, 0xba, 0x8e,
		0x6f, 0x85, 0x34, 0x71, 0xf7, 0xa2, 0xd0, 0xa4, 0xbc, 0xf3, 0xf2, 0xda, 0x06, 0x0e, 0xd6, 0x61,
		0x64, 0x02, 0x20, 0x5d, 0x2a, 0x56, 0xe5, 0x44, 0x66, 0x72, 0xd7, 0xcd, 0x26, 0x51, 0x1f, 0x1a,
		0x93, 0x96, 0xc1, 0x28, 0xad, 0xd2, 0x5c, 0x01, 0x04, 0x2e, 0x5c, 0x7c, 0x52, 0xb0, 0x76, 0x44,
		0xfd, 0x9a, 0xff,
		/*
		 * Product Unit Certificate
-----BEGIN CERTIFICATE-----
MIIBCDCBsKADAgECAgQSNO8BMAoGCCqGSM49BAMCMBIxEDAOBgNVBAMMB0NBRkUt
MUEwIBcNNzAwMTAxMDAwMDAwWhgPOTk5OTEyMzEyMzU5NTlaMBExDzANBgNVBAMM
BjAwNjM4NjA5MBMGByqGSM49AgEGCCqGSM49AwEHAyIAAzupJ+tP7fr+GAA3HsLo
aUVwpQPeRkPgn2q7kw+uUpc+oxMwETAPBgVngX8BAgQGBAQAAAABMAoGCCqGSM49
BAMCA0cAMEQCIEKxacFj2rlTPKJLsEmxHqMUjjZaW5Rp055FJwyhZfUXAiA7rmN0
5pnWad8wxsUpSHJL6lqI/gSDZtng92ZPaX2a3w==
-----END CERTIFICATE-----
		 */
		0x30, 0x82, 0x01, 0x08, 0x30, 0x81, 0xb0, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x04, 0x12, 0x34,
		0xef, 0x01, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x12,
		0x31, 0x10, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x07, 0x43, 0x41, 0x46, 0x45, 0x2d,
		0x31, 0x41, 0x30, 0x20, 0x17, 0x0d, 0x37, 0x30, 0x30, 0x31, 0x30, 0x31, 0x30, 0x30, 0x30, 0x30,
		0x30, 0x30, 0x5a, 0x18, 0x0f, 0x39, 0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35,
		0x39, 0x35, 0x39, 0x5a, 0x30, 0x11, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c,
		0x06, 0x30, 0x30, 0x36, 0x33, 0x38, 0x36, 0x30, 0x39, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48,
		0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x22,
		0x00, 0x03, 0x3b, 0xa9, 0x27, 0xeb, 0x4f, 0xed, 0xfa, 0xfe, 0x18, 0x00, 0x37, 0x1e, 0xc2, 0xe8,
		0x69, 0x45, 0x70, 0xa5, 0x03, 0xde, 0x46, 0x43, 0xe0, 0x9f, 0x6a, 0xbb, 0x93, 0x0f, 0xae, 0x52,
		0x97, 0x3e, 0xa3, 0x13, 0x30, 0x11, 0x30, 0x0f, 0x06, 0x05, 0x67, 0x81, 0x7f, 0x01, 0x02, 0x04,
		0x06, 0x04, 0x04, 0x00, 0x00, 0x00, 0x01, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d,
		0x04, 0x03, 0x02, 0x03, 0x47, 0x00, 0x30, 0x44, 0x02, 0x20, 0x42, 0xb1, 0x69, 0xc1, 0x63, 0xda,
		0xb9, 0x53, 0x3c, 0xa2, 0x4b, 0xb0, 0x49, 0xb1, 0x1e, 0xa3, 0x14, 0x8e, 0x36, 0x5a, 0x5b, 0x94,
		0x69, 0xd3, 0x9e, 0x45, 0x27, 0x0c, 0xa1, 0x65, 0xf5, 0x17, 0x02, 0x20, 0x3b, 0xae, 0x63, 0x74,
		0xe6, 0x99, 0xd6, 0x69, 0xdf, 0x30, 0xc6, 0xc5, 0x29, 0x48, 0x72, 0x4b, 0xea, 0x5a, 0x88, 0xfe,
		0x04, 0x83, 0x66, 0xd9, 0xe0, 0xf7, 0x66, 0x4f, 0x69, 0x7d, 0x9a, 0xdf
};

//uint8_t qi_auth_cr660_draft5_challenge[] = {
//        0x1B, 0x00, 0xA5, 0x02, 0x3B, 0x84, 0xB4, 0x6C, 0xD7, 0x10, 0x2E, 0x6F, 0x51, 0x9A, 0xF7, 0x99,
//        0x37, 0x52
//};

//uint8_t qi_auth_cr660_draft5_challenge_auth[] = {
//        0x13, 0x11, 0x0C, 0x02, 0x17, 0xE6, 0x17, 0xF0, 0xB6, 0x44, 0x39, 0x28, 0x27, 0x8F, 0x96, 0x99,
//        0x9E, 0x69, 0xA2, 0x3A, 0x4F, 0x2C, 0x15, 0x2B, 0xDF, 0x6D, 0x6C, 0xDF, 0x66, 0xE5, 0xB8, 0x02,
//        0x82, 0xD4, 0xED, 0x21, 0x5F, 0x0D, 0xD6, 0xEF, 0x65, 0xFE, 0x25, 0x53, 0x4B, 0xA9, 0x3C, 0x21,
//        0x80, 0x4E, 0xB0, 0x14, 0xB4, 0x2E, 0xBB, 0x6D, 0x89, 0xFC, 0x69, 0x1F, 0x47, 0xE0, 0xC0, 0x16,
//        0xD6, 0x99, 0x33
//};

#endif
