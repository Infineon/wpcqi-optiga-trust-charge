   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,4
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "pal_os_datastore.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.pal_os_datastore_write,"ax",%progbits
  20              	 .align 1
  21              	 .global pal_os_datastore_write
  22              	 .thumb
  23              	 .thumb_func
  25              	pal_os_datastore_write:
  26              	.LFB0:
  27              	 .file 1 "C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700/pal_os_datastore.c"
   1:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** /**
   2:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** * \copyright
   3:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** * MIT License
   4:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** *
   5:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** * Copyright (c) 2020 Infineon Technologies AG
   6:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** *
   7:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** * Permission is hereby granted, free of charge, to any person obtaining a copy
   8:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** * of this software and associated documentation files (the "Software"), to deal
   9:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** * in the Software without restriction, including without limitation the rights
  10:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  11:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** * copies of the Software, and to permit persons to whom the Software is
  12:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** * furnished to do so, subject to the following conditions:
  13:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** *
  14:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** * The above copyright notice and this permission notice shall be included in all
  15:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** * copies or substantial portions of the Software.
  16:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** *
  17:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  19:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  20:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  21:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  22:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  23:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** * SOFTWARE
  24:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** *
  25:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** * \endcopyright
  26:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** *
  27:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** * \author Infineon Technologies AG
  28:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** *
  29:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** * \file pal_os_datastore.c
  30:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** *
  31:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** * \brief   This file implements the platform abstraction layer APIs for data store.
  32:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** *
  33:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** * \ingroup  grPAL
  34:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** *
  35:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** * @{
  36:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** */
  37:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** 
  38:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** #include "optiga/pal/pal_os_datastore.h"
  39:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** /// @cond hidden
  40:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** 
  41:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** /// Size of length field 
  42:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** #define LENGTH_SIZE                (0x02)
  43:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** /// Size of data store buffer to hold the shielded connection manage context information (2 bytes l
  44:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** #define MANAGE_CONTEXT_BUFFER_SIZE      (0x42)
  45:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** 
  46:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** //Internal buffer to store the shielded connection manage context information (length field + Data)
  47:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** uint8_t data_store_manage_context_buffer [LENGTH_SIZE + MANAGE_CONTEXT_BUFFER_SIZE];
  48:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** 
  49:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** //Internal buffer to store the optiga application context data during hibernate(length field + Data
  50:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** uint8_t data_store_app_context_buffer [LENGTH_SIZE + APP_CONTEXT_SIZE];
  51:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** 
  52:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** //Internal buffer to store the generated platform binding shared secret on Host (length field + sha
  53:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** uint8_t optiga_platform_binding_shared_secret [LENGTH_SIZE + OPTIGA_SHARED_SECRET_MAX_LENGTH] = 
  54:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** {
  55:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****     // Length of the shared secret, followed after the length information
  56:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****     0x00 ,0x40, 
  57:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****     // Shared secret. Buffer is defined to the maximum supported length [64 bytes]. 
  58:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****     // But the actual size used is to be specified in the length field.
  59:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****     0x01 ,0x02 ,0x03 ,0x04 ,0x05 ,0x06 ,0x07 ,0x08 ,0x09 ,0x0A ,0x0B ,0x0C ,0x0D ,0x0E ,0x0F ,0x10,
  60:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****     0x11 ,0x12 ,0x13 ,0x14 ,0x15 ,0x16 ,0x17 ,0x18 ,0x19 ,0x1A ,0x1B ,0x1C ,0x1D ,0x1E ,0x1F ,0x20,
  61:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****     0x21 ,0x22 ,0x23 ,0x24 ,0x25 ,0x26 ,0x27 ,0x28 ,0x29 ,0x2A ,0x2B ,0x2C ,0x2D ,0x2E ,0x2F ,0x30,
  62:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****     0x31 ,0x32 ,0x33 ,0x34 ,0x35 ,0x36 ,0x37 ,0x38 ,0x39 ,0x3A ,0x3B ,0x3C ,0x3D ,0x3E ,0x3F ,0x40
  63:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** };
  64:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** 
  65:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** 
  66:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** pal_status_t pal_os_datastore_write(uint16_t datastore_id,
  67:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****                                     const uint8_t * p_buffer,
  68:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****                                     uint16_t length)
  69:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** {
  28              	 .loc 1 69 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	.LVL0:
  70:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****     pal_status_t return_status = PAL_STATUS_FAILURE;
  71:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****     uint8_t offset = 0;
  72:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** 
  73:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****     switch(datastore_id)
  33              	 .loc 1 73 0
  34 0000 2228     	 cmp r0,#34
  69:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****     pal_status_t return_status = PAL_STATUS_FAILURE;
  35              	 .loc 1 69 0
  36 0002 10B5     	 push {r4,lr}
  37              	.LCFI0:
  38              	 .cfi_def_cfa_offset 8
  39              	 .cfi_offset 4,-8
  40              	 .cfi_offset 14,-4
  69:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****     pal_status_t return_status = PAL_STATUS_FAILURE;
  41              	 .loc 1 69 0
  42 0004 1346     	 mov r3,r2
  43              	 .loc 1 73 0
  44 0006 08D0     	 beq .L3
  45 0008 3328     	 cmp r0,#51
  46 000a 08D0     	 beq .L4
  47 000c 1128     	 cmp r0,#17
  48 000e 0FD1     	 bne .L7
  74:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****     {
  75:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****         case OPTIGA_PLATFORM_BINDING_SHARED_SECRET_ID:
  76:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****         {
  77:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             // !!!OPTIGA_LIB_PORTING_REQUIRED
  78:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             // This has to be enhanced by user only, in case of updating
  79:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             // the platform binding shared secret during the runtime into NVM.
  80:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             // In current implementation, platform binding shared secret is 
  81:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             // stored in RAM.
  82:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             if (length <= OPTIGA_SHARED_SECRET_MAX_LENGTH)
  49              	 .loc 1 82 0
  50 0010 402A     	 cmp r2,#64
  51 0012 0DD8     	 bhi .L7
  52              	.LVL1:
  83:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             {
  84:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****                 optiga_platform_binding_shared_secret[offset++] = (uint8_t)(length>>8);
  53              	 .loc 1 84 0
  54 0014 0748     	 ldr r0,.L12
  55              	.LVL2:
  56 0016 0024     	 movs r4,#0
  57 0018 03E0     	 b .L9
  58              	.LVL3:
  59              	.L3:
  85:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****                 optiga_platform_binding_shared_secret[offset++] = (uint8_t)(length);
  86:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****                 memcpy(&optiga_platform_binding_shared_secret[offset], p_buffer, length);
  87:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****                 return_status = PAL_STATUS_SUCCESS;
  88:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             }
  89:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             break;
  90:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****         }
  91:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****         case OPTIGA_COMMS_MANAGE_CONTEXT_ID:
  92:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****         {
  93:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             // !!!OPTIGA_LIB_PORTING_REQUIRED
  94:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             // This has to be enhanced by user only, in case of storing 
  95:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             // the manage context information in non-volatile memory 
  96:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             // to reuse for later during hard reset scenarios where the 
  97:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             // RAM gets flushed out.
  98:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             data_store_manage_context_buffer[offset++] = (uint8_t)(length>>8);
  60              	 .loc 1 98 0
  61 001a 0748     	 ldr r0,.L12+4
  62              	.LVL4:
  63 001c 00E0     	 b .L10
  64              	.LVL5:
  65              	.L4:
  99:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             data_store_manage_context_buffer[offset++] = (uint8_t)(length);
 100:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             memcpy(&data_store_manage_context_buffer[offset],p_buffer,length);
 101:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             return_status = PAL_STATUS_SUCCESS;
 102:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             break;
 103:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****         }
 104:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****         case OPTIGA_HIBERNATE_CONTEXT_ID:
 105:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****         {
 106:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             // !!!OPTIGA_LIB_PORTING_REQUIRED
 107:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             // This has to be enhanced by user only, in case of storing 
 108:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             // the application context information in non-volatile memory 
 109:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             // to reuse for later during hard reset scenarios where the 
 110:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             // RAM gets flushed out.
 111:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             data_store_app_context_buffer[offset++] = (uint8_t)(length>>8);
  66              	 .loc 1 111 0
  67 001e 0748     	 ldr r0,.L12+8
  68              	.LVL6:
  69              	.L10:
  70 0020 1C0A     	 lsrs r4,r3,#8
  71              	.L9:
  72 0022 0470     	 strb r4,[r0]
  73              	.LVL7:
 112:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             data_store_app_context_buffer[offset++] = (uint8_t)(length);
  74              	 .loc 1 112 0
  75 0024 4370     	 strb r3,[r0,#1]
 113:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             memcpy(&data_store_app_context_buffer[offset],p_buffer,length);
  76              	 .loc 1 113 0
  77 0026 0230     	 adds r0,r0,#2
  78 0028 FFF7FEFF 	 bl memcpy
  79              	.LVL8:
 114:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             return_status = PAL_STATUS_SUCCESS;
  80              	 .loc 1 114 0
  81 002c 0020     	 movs r0,#0
 115:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             break;
  82              	 .loc 1 115 0
  83 002e 10BD     	 pop {r4,pc}
  84              	.LVL9:
  85              	.L7:
  70:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****     uint8_t offset = 0;
  86              	 .loc 1 70 0
  87 0030 0120     	 movs r0,#1
  88              	.LVL10:
 116:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****         }
 117:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****         default:
 118:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****         {
 119:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             break;
 120:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****         }
 121:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****     }
 122:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****     return return_status;
 123:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** }
  89              	 .loc 1 123 0
  90 0032 10BD     	 pop {r4,pc}
  91              	.L13:
  92              	 .align 2
  93              	.L12:
  94 0034 00000000 	 .word .LANCHOR0
  95 0038 00000000 	 .word data_store_manage_context_buffer
  96 003c 00000000 	 .word data_store_app_context_buffer
  97              	 .cfi_endproc
  98              	.LFE0:
 100              	 .section .text.pal_os_datastore_read,"ax",%progbits
 101              	 .align 1
 102              	 .global pal_os_datastore_read
 103              	 .thumb
 104              	 .thumb_func
 106              	pal_os_datastore_read:
 107              	.LFB1:
 124:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** 
 125:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** 
 126:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** pal_status_t pal_os_datastore_read(uint16_t datastore_id, 
 127:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****                                    uint8_t * p_buffer, 
 128:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****                                    uint16_t * p_buffer_length)
 129:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** {
 108              	 .loc 1 129 0
 109              	 .cfi_startproc
 110              	 
 111              	 
 112              	.LVL11:
 113 0000 38B5     	 push {r3,r4,r5,lr}
 114              	.LCFI1:
 115              	 .cfi_def_cfa_offset 16
 116              	 .cfi_offset 3,-16
 117              	 .cfi_offset 4,-12
 118              	 .cfi_offset 5,-8
 119              	 .cfi_offset 14,-4
 120              	 .loc 1 129 0
 121 0002 0346     	 mov r3,r0
 130:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****     pal_status_t return_status = PAL_STATUS_FAILURE;
 131:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****     uint16_t data_length;
 132:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****     uint8_t offset = 0;
 133:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** 
 134:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****     switch(datastore_id)
 122              	 .loc 1 134 0
 123 0004 222B     	 cmp r3,#34
 129:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****     pal_status_t return_status = PAL_STATUS_FAILURE;
 124              	 .loc 1 129 0
 125 0006 0846     	 mov r0,r1
 126              	.LVL12:
 127 0008 1546     	 mov r5,r2
 128              	 .loc 1 134 0
 129 000a 0BD0     	 beq .L16
 130 000c 332B     	 cmp r3,#51
 131 000e 0BD0     	 beq .L17
 132 0010 112B     	 cmp r3,#17
 133 0012 15D1     	 bne .L21
 134              	.LVL13:
 135:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****     {
 136:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****         case OPTIGA_PLATFORM_BINDING_SHARED_SECRET_ID:
 137:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****         {
 138:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             // !!!OPTIGA_LIB_PORTING_REQUIRED
 139:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             // This has to be enhanced by user only,
 140:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             // if the platform binding shared secret is stored in non-volatile 
 141:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             // memory with a specific location and not as a context segment 
 142:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             // else updating the share secret content is good enough.
 143:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** 
 144:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             data_length = (uint16_t) (optiga_platform_binding_shared_secret[offset++] << 8);
 135              	 .loc 1 144 0
 136 0014 0C49     	 ldr r1,.L24
 137              	.LVL14:
 138 0016 0C78     	 ldrb r4,[r1]
 139              	.LVL15:
 145:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             data_length |= (uint16_t)(optiga_platform_binding_shared_secret[offset++]);
 140              	 .loc 1 145 0
 141 0018 4B78     	 ldrb r3,[r1,#1]
 142 001a 43EA0424 	 orr r4,r3,r4,lsl#8
 143              	.LVL16:
 146:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             if (data_length <= OPTIGA_SHARED_SECRET_MAX_LENGTH)
 144              	 .loc 1 146 0
 145 001e 402C     	 cmp r4,#64
 146 0020 10D8     	 bhi .L20
 147 0022 06E0     	 b .L22
 148              	.LVL17:
 149              	.L16:
 147:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             {
 148:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****                 memcpy(p_buffer,&optiga_platform_binding_shared_secret[offset], data_length);
 149:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****                 *p_buffer_length = data_length;
 150:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****                 return_status = PAL_STATUS_SUCCESS;
 151:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             }
 152:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             break;
 153:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****         }
 154:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****         case OPTIGA_COMMS_MANAGE_CONTEXT_ID:
 155:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****         {
 156:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             // !!!OPTIGA_LIB_PORTING_REQUIRED
 157:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             // This has to be enhanced by user only,
 158:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             // if manage context information is stored in NVM during the hibernate, 
 159:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             // else this is not required to be enhanced.
 160:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             data_length = (uint16_t) (data_store_manage_context_buffer[offset++] << 8);
 150              	 .loc 1 160 0
 151 0024 0949     	 ldr r1,.L24+4
 152 0026 00E0     	 b .L23
 153              	.LVL18:
 154              	.L17:
 161:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             data_length |= (uint16_t)(data_store_manage_context_buffer[offset++]);
 162:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             memcpy(p_buffer, &data_store_manage_context_buffer[offset], data_length);
 163:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             *p_buffer_length = data_length;
 164:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             return_status = PAL_STATUS_SUCCESS;
 165:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             break;
 166:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****         }
 167:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****         case OPTIGA_HIBERNATE_CONTEXT_ID:
 168:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****         {
 169:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             // !!!OPTIGA_LIB_PORTING_REQUIRED
 170:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             // This has to be enhanced by user only,
 171:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             // if application context information is stored in NVM during the hibernate, 
 172:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             // else this is not required to be enhanced.
 173:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             data_length = (uint16_t) (data_store_app_context_buffer[offset++] << 8);
 155              	 .loc 1 173 0
 156 0028 0949     	 ldr r1,.L24+8
 157              	.L23:
 158 002a 0C78     	 ldrb r4,[r1]
 159              	.LVL19:
 174:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             data_length |= (uint16_t)(data_store_app_context_buffer[offset++]);
 160              	 .loc 1 174 0
 161 002c 4B78     	 ldrb r3,[r1,#1]
 162 002e 43EA0424 	 orr r4,r3,r4,lsl#8
 163              	.LVL20:
 164              	.L22:
 175:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             memcpy(p_buffer, &data_store_app_context_buffer[offset], data_length);
 165              	 .loc 1 175 0
 166 0032 0231     	 adds r1,r1,#2
 167 0034 2246     	 mov r2,r4
 168              	.LVL21:
 169 0036 FFF7FEFF 	 bl memcpy
 170              	.LVL22:
 176:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             *p_buffer_length = data_length;
 171              	 .loc 1 176 0
 172 003a 2C80     	 strh r4,[r5]
 173              	.LVL23:
 177:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             return_status = PAL_STATUS_SUCCESS;
 174              	 .loc 1 177 0
 175 003c 0020     	 movs r0,#0
 178:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             break;
 176              	 .loc 1 178 0
 177 003e 38BD     	 pop {r3,r4,r5,pc}
 178              	.LVL24:
 179              	.L21:
 179:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****         }
 180:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****         default:
 181:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****         {
 182:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             *p_buffer_length = 0;
 180              	 .loc 1 182 0
 181 0040 0023     	 movs r3,#0
 182 0042 1380     	 strh r3,[r2]
 183              	.LVL25:
 184              	.L20:
 130:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****     uint16_t data_length;
 185              	 .loc 1 130 0
 186 0044 0120     	 movs r0,#1
 187              	.LVL26:
 183:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****             break;
 184:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****         }
 185:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****     }
 186:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** 
 187:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c ****     return return_status;
 188:C:/Users/Yushev/git/optiga-trust-qi/pal/xmc4700\pal_os_datastore.c **** }
 188              	 .loc 1 188 0
 189 0046 38BD     	 pop {r3,r4,r5,pc}
 190              	.L25:
 191              	 .align 2
 192              	.L24:
 193 0048 00000000 	 .word .LANCHOR0
 194 004c 00000000 	 .word data_store_manage_context_buffer
 195 0050 00000000 	 .word data_store_app_context_buffer
 196              	 .cfi_endproc
 197              	.LFE1:
 199              	 .global optiga_platform_binding_shared_secret
 200              	 .comm data_store_app_context_buffer,10,1
 201              	 .comm data_store_manage_context_buffer,68,1
 202              	 .section .data.optiga_platform_binding_shared_secret,"aw",%progbits
 203              	 .set .LANCHOR0,.+0
 206              	optiga_platform_binding_shared_secret:
 207 0000 00       	 .byte 0
 208 0001 40       	 .byte 64
 209 0002 01       	 .byte 1
 210 0003 02       	 .byte 2
 211 0004 03       	 .byte 3
 212 0005 04       	 .byte 4
 213 0006 05       	 .byte 5
 214 0007 06       	 .byte 6
 215 0008 07       	 .byte 7
 216 0009 08       	 .byte 8
 217 000a 09       	 .byte 9
 218 000b 0A       	 .byte 10
 219 000c 0B       	 .byte 11
 220 000d 0C       	 .byte 12
 221 000e 0D       	 .byte 13
 222 000f 0E       	 .byte 14
 223 0010 0F       	 .byte 15
 224 0011 10       	 .byte 16
 225 0012 11       	 .byte 17
 226 0013 12       	 .byte 18
 227 0014 13       	 .byte 19
 228 0015 14       	 .byte 20
 229 0016 15       	 .byte 21
 230 0017 16       	 .byte 22
 231 0018 17       	 .byte 23
 232 0019 18       	 .byte 24
 233 001a 19       	 .byte 25
 234 001b 1A       	 .byte 26
 235 001c 1B       	 .byte 27
 236 001d 1C       	 .byte 28
 237 001e 1D       	 .byte 29
 238 001f 1E       	 .byte 30
 239 0020 1F       	 .byte 31
 240 0021 20       	 .byte 32
 241 0022 21       	 .byte 33
 242 0023 22       	 .byte 34
 243 0024 23       	 .byte 35
 244 0025 24       	 .byte 36
 245 0026 25       	 .byte 37
 246 0027 26       	 .byte 38
 247 0028 27       	 .byte 39
 248 0029 28       	 .byte 40
 249 002a 29       	 .byte 41
 250 002b 2A       	 .byte 42
 251 002c 2B       	 .byte 43
 252 002d 2C       	 .byte 44
 253 002e 2D       	 .byte 45
 254 002f 2E       	 .byte 46
 255 0030 2F       	 .byte 47
 256 0031 30       	 .byte 48
 257 0032 31       	 .byte 49
 258 0033 32       	 .byte 50
 259 0034 33       	 .byte 51
 260 0035 34       	 .byte 52
 261 0036 35       	 .byte 53
 262 0037 36       	 .byte 54
 263 0038 37       	 .byte 55
 264 0039 38       	 .byte 56
 265 003a 39       	 .byte 57
 266 003b 3A       	 .byte 58
 267 003c 3B       	 .byte 59
 268 003d 3C       	 .byte 60
 269 003e 3D       	 .byte 61
 270 003f 3E       	 .byte 62
 271 0040 3F       	 .byte 63
 272 0041 40       	 .byte 64
 273              	 .text
 274              	.Letext0:
 275              	 .file 2 "c:\\users\\yushev\\dave_4-4-2_32bit_2018-02-23\\dave-ide-4.4.2-32bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 276              	 .file 3 "c:\\users\\yushev\\dave_4-4-2_32bit_2018-02-23\\dave-ide-4.4.2-32bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 277              	 .file 4 "C:/Users/Yushev/git/optiga-trust-qi/optiga/include/optiga/pal/pal.h"
DEFINED SYMBOLS
                            *ABS*:00000000 pal_os_datastore.c
    {standard input}:20     .text.pal_os_datastore_write:00000000 $t
    {standard input}:25     .text.pal_os_datastore_write:00000000 pal_os_datastore_write
    {standard input}:94     .text.pal_os_datastore_write:00000034 $d
                            *COM*:00000044 data_store_manage_context_buffer
                            *COM*:0000000a data_store_app_context_buffer
    {standard input}:101    .text.pal_os_datastore_read:00000000 $t
    {standard input}:106    .text.pal_os_datastore_read:00000000 pal_os_datastore_read
    {standard input}:193    .text.pal_os_datastore_read:00000048 $d
    {standard input}:206    .data.optiga_platform_binding_shared_secret:00000000 optiga_platform_binding_shared_secret
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memcpy
