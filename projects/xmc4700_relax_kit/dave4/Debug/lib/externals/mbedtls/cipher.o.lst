   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,4
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "cipher.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.mbedtls_cipher_list,"ax",%progbits
  20              	 .align 1
  21              	 .global mbedtls_cipher_list
  22              	 .thumb
  23              	 .thumb_func
  25              	mbedtls_cipher_list:
  26              	.LFB7:
  27              	 .file 1 "C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library/cipher.c"
   1:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** /**
   2:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  * \file cipher.c
   3:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  *
   4:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  * \brief Generic cipher wrapper for mbed TLS
   5:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  *
   6:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  * \author Adriaan de Jong <dejong@fox-it.com>
   7:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  *
   8:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  *  Copyright (C) 2006-2015, ARM Limited, All Rights Reserved
   9:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  *  SPDX-License-Identifier: Apache-2.0
  10:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  *
  11:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  *  Licensed under the Apache License, Version 2.0 (the "License"); you may
  12:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  *  not use this file except in compliance with the License.
  13:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  *  You may obtain a copy of the License at
  14:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  *
  15:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  *  http://www.apache.org/licenses/LICENSE-2.0
  16:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  *
  17:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  *  Unless required by applicable law or agreed to in writing, software
  18:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  *  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  19:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  *  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  20:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  *  See the License for the specific language governing permissions and
  21:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  *  limitations under the License.
  22:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  *
  23:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  *  This file is part of mbed TLS (https://tls.mbed.org)
  24:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  */
  25:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
  26:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if !defined(MBEDTLS_CONFIG_FILE)
  27:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #include "mbedtls/config.h"
  28:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #else
  29:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #include MBEDTLS_CONFIG_FILE
  30:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif
  31:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
  32:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_C)
  33:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
  34:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #include "mbedtls/cipher.h"
  35:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #include "mbedtls/cipher_internal.h"
  36:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #include "mbedtls/platform_util.h"
  37:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
  38:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #include <stdlib.h>
  39:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #include <string.h>
  40:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
  41:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CHACHAPOLY_C)
  42:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #include "mbedtls/chachapoly.h"
  43:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif
  44:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
  45:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_GCM_C)
  46:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #include "mbedtls/gcm.h"
  47:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif
  48:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
  49:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CCM_C)
  50:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #include "mbedtls/ccm.h"
  51:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif
  52:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
  53:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CHACHA20_C)
  54:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #include "mbedtls/chacha20.h"
  55:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif
  56:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
  57:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CMAC_C)
  58:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #include "mbedtls/cmac.h"
  59:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif
  60:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
  61:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_PLATFORM_C)
  62:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #include "mbedtls/platform.h"
  63:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #else
  64:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #define mbedtls_calloc calloc
  65:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #define mbedtls_free   free
  66:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif
  67:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
  68:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #define CIPHER_VALIDATE_RET( cond )    \
  69:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     MBEDTLS_INTERNAL_VALIDATE_RET( cond, MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA )
  70:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #define CIPHER_VALIDATE( cond )        \
  71:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     MBEDTLS_INTERNAL_VALIDATE( cond )
  72:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
  73:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_GCM_C) || defined(MBEDTLS_CHACHAPOLY_C)
  74:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** /* Compare the contents of two buffers in constant time.
  75:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  * Returns 0 if the contents are bitwise identical, otherwise returns
  76:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  * a non-zero value.
  77:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  * This is currently only used by GCM and ChaCha20+Poly1305.
  78:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  */
  79:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** static int mbedtls_constant_time_memcmp( const void *v1, const void *v2, size_t len )
  80:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** {
  81:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     const unsigned char *p1 = (const unsigned char*) v1;
  82:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     const unsigned char *p2 = (const unsigned char*) v2;
  83:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     size_t i;
  84:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     unsigned char diff;
  85:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
  86:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     for( diff = 0, i = 0; i < len; i++ )
  87:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         diff |= p1[i] ^ p2[i];
  88:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
  89:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     return( (int)diff );
  90:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
  91:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif /* MBEDTLS_GCM_C || MBEDTLS_CHACHAPOLY_C */
  92:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
  93:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** static int supported_init = 0;
  94:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
  95:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** const int *mbedtls_cipher_list( void )
  96:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** {
  28              	 .loc 1 96 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  97:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     const mbedtls_cipher_definition_t *def;
  98:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     int *type;
  99:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 100:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( ! supported_init )
  32              	 .loc 1 100 0
  33 0000 084A     	 ldr r2,.L8
  34 0002 1368     	 ldr r3,[r2]
  96:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     const mbedtls_cipher_definition_t *def;
  35              	 .loc 1 96 0
  36 0004 10B5     	 push {r4,lr}
  37              	.LCFI0:
  38              	 .cfi_def_cfa_offset 8
  39              	 .cfi_offset 4,-8
  40              	 .cfi_offset 14,-4
  41              	 .loc 1 100 0
  42 0006 5BB9     	 cbnz r3,.L3
  43              	.L2:
 101:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 102:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         def = mbedtls_cipher_definitions;
 103:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         type = mbedtls_cipher_supported;
 104:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 105:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         while( def->type != 0 )
  44              	 .loc 1 105 0
  45 0008 0749     	 ldr r1,.L8+4
  46 000a 0848     	 ldr r0,.L8+8
  47 000c 11F81310 	 ldrb r1,[r1,r3,lsl#1]
  48 0010 1C18     	 adds r4,r3,r0
  49              	.LVL0:
  50 0012 11B1     	 cbz r1,.L7
  51              	.LVL1:
 106:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             *type++ = (*def++).type;
  52              	 .loc 1 106 0
  53 0014 1950     	 str r1,[r3,r0]
  54 0016 0433     	 adds r3,r3,#4
  55              	.LVL2:
  56 0018 F6E7     	 b .L2
  57              	.LVL3:
  58              	.L7:
 107:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 108:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         *type = 0;
 109:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 110:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         supported_init = 1;
  59              	 .loc 1 110 0
  60 001a 0123     	 movs r3,#1
  61              	.LVL4:
 108:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
  62              	 .loc 1 108 0
  63 001c 2160     	 str r1,[r4]
  64              	 .loc 1 110 0
  65 001e 1360     	 str r3,[r2]
  66              	.LVL5:
  67              	.L3:
 111:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 112:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 113:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     return( mbedtls_cipher_supported );
 114:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
  68              	 .loc 1 114 0
  69 0020 0248     	 ldr r0,.L8+8
  70 0022 10BD     	 pop {r4,pc}
  71              	.L9:
  72              	 .align 2
  73              	.L8:
  74 0024 00000000 	 .word .LANCHOR0
  75 0028 00000000 	 .word mbedtls_cipher_definitions
  76 002c 00000000 	 .word mbedtls_cipher_supported
  77              	 .cfi_endproc
  78              	.LFE7:
  80              	 .section .text.mbedtls_cipher_info_from_type,"ax",%progbits
  81              	 .align 1
  82              	 .global mbedtls_cipher_info_from_type
  83              	 .thumb
  84              	 .thumb_func
  86              	mbedtls_cipher_info_from_type:
  87              	.LFB8:
 115:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 116:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** const mbedtls_cipher_info_t *mbedtls_cipher_info_from_type( const mbedtls_cipher_type_t cipher_type
 117:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** {
  88              	 .loc 1 117 0
  89              	 .cfi_startproc
  90              	 
  91              	 
  92              	 
  93              	.LVL6:
  94 0000 054B     	 ldr r3,.L14
  95              	.LVL7:
  96              	.L11:
 118:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     const mbedtls_cipher_definition_t *def;
 119:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 120:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     for( def = mbedtls_cipher_definitions; def->info != NULL; def++ )
  97              	 .loc 1 120 0 discriminator 1
  98 0002 53F8042C 	 ldr r2,[r3,#-4]
  99 0006 22B1     	 cbz r2,.L12
 100 0008 0833     	 adds r3,r3,#8
 101              	.LVL8:
 121:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if( def->type == cipher_type )
 102              	 .loc 1 121 0
 103 000a 13F8101C 	 ldrb r1,[r3,#-16]
 104 000e 8142     	 cmp r1,r0
 105 0010 F7D1     	 bne .L11
 106              	.LVL9:
 107              	.L12:
 122:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             return( def->info );
 123:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 124:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     return( NULL );
 125:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
 108              	 .loc 1 125 0
 109 0012 1046     	 mov r0,r2
 110              	.LVL10:
 111 0014 7047     	 bx lr
 112              	.L15:
 113 0016 00BF     	 .align 2
 114              	.L14:
 115 0018 08000000 	 .word mbedtls_cipher_definitions+8
 116              	 .cfi_endproc
 117              	.LFE8:
 119              	 .section .text.mbedtls_cipher_info_from_string,"ax",%progbits
 120              	 .align 1
 121              	 .global mbedtls_cipher_info_from_string
 122              	 .thumb
 123              	 .thumb_func
 125              	mbedtls_cipher_info_from_string:
 126              	.LFB9:
 126:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 127:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** const mbedtls_cipher_info_t *mbedtls_cipher_info_from_string( const char *cipher_name )
 128:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** {
 127              	 .loc 1 128 0
 128              	 .cfi_startproc
 129              	 
 130              	 
 131              	.LVL11:
 132 0000 70B5     	 push {r4,r5,r6,lr}
 133              	.LCFI1:
 134              	 .cfi_def_cfa_offset 16
 135              	 .cfi_offset 4,-16
 136              	 .cfi_offset 5,-12
 137              	 .cfi_offset 6,-8
 138              	 .cfi_offset 14,-4
 129:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     const mbedtls_cipher_definition_t *def;
 130:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 131:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( NULL == cipher_name )
 139              	 .loc 1 131 0
 140 0002 0546     	 mov r5,r0
 141 0004 48B1     	 cbz r0,.L20
 142 0006 064E     	 ldr r6,.L24
 143              	.LVL12:
 144              	.L18:
 132:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( NULL );
 133:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 134:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     for( def = mbedtls_cipher_definitions; def->info != NULL; def++ )
 145              	 .loc 1 134 0 discriminator 1
 146 0008 7468     	 ldr r4,[r6,#4]
 147 000a 3CB1     	 cbz r4,.L17
 135:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if( !  strcmp( def->info->name, cipher_name ) )
 148              	 .loc 1 135 0
 149 000c A068     	 ldr r0,[r4,#8]
 150 000e 2946     	 mov r1,r5
 151 0010 FFF7FEFF 	 bl strcmp
 152              	.LVL13:
 153 0014 10B1     	 cbz r0,.L17
 134:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if( !  strcmp( def->info->name, cipher_name ) )
 154              	 .loc 1 134 0 discriminator 2
 155 0016 0836     	 adds r6,r6,#8
 156              	.LVL14:
 157 0018 F6E7     	 b .L18
 158              	.LVL15:
 159              	.L20:
 132:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( NULL );
 160              	 .loc 1 132 0
 161 001a 0446     	 mov r4,r0
 162              	.LVL16:
 163              	.L17:
 136:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             return( def->info );
 137:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 138:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     return( NULL );
 139:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
 164              	 .loc 1 139 0
 165 001c 2046     	 mov r0,r4
 166 001e 70BD     	 pop {r4,r5,r6,pc}
 167              	.LVL17:
 168              	.L25:
 169              	 .align 2
 170              	.L24:
 171 0020 00000000 	 .word mbedtls_cipher_definitions
 172              	 .cfi_endproc
 173              	.LFE9:
 175              	 .section .text.mbedtls_cipher_info_from_values,"ax",%progbits
 176              	 .align 1
 177              	 .global mbedtls_cipher_info_from_values
 178              	 .thumb
 179              	 .thumb_func
 181              	mbedtls_cipher_info_from_values:
 182              	.LFB10:
 140:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 141:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** const mbedtls_cipher_info_t *mbedtls_cipher_info_from_values( const mbedtls_cipher_id_t cipher_id,
 142:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                               int key_bitlen,
 143:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                               const mbedtls_cipher_mode_t mode )
 144:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** {
 183              	 .loc 1 144 0
 184              	 .cfi_startproc
 185              	 
 186              	 
 187              	.LVL18:
 188 0000 30B5     	 push {r4,r5,lr}
 189              	.LCFI2:
 190              	 .cfi_def_cfa_offset 12
 191              	 .cfi_offset 4,-12
 192              	 .cfi_offset 5,-8
 193              	 .cfi_offset 14,-4
 145:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     const mbedtls_cipher_definition_t *def;
 146:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 147:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     for( def = mbedtls_cipher_definitions; def->info != NULL; def++ )
 194              	 .loc 1 147 0
 195 0002 084C     	 ldr r4,.L31
 196              	.LVL19:
 197              	.L27:
 198              	 .loc 1 147 0 is_stmt 0 discriminator 1
 199 0004 6368     	 ldr r3,[r4,#4]
 200 0006 5BB1     	 cbz r3,.L29
 148:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if( def->info->base->cipher == cipher_id &&
 201              	 .loc 1 148 0 is_stmt 1
 202 0008 9D69     	 ldr r5,[r3,#24]
 203 000a 2D78     	 ldrb r5,[r5]
 204 000c 8542     	 cmp r5,r0
 205 000e 05D1     	 bne .L28
 206              	 .loc 1 148 0 is_stmt 0 discriminator 1
 207 0010 5D68     	 ldr r5,[r3,#4]
 208 0012 8D42     	 cmp r5,r1
 209 0014 02D1     	 bne .L28
 149:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             def->info->key_bitlen == (unsigned) key_bitlen &&
 210              	 .loc 1 149 0 is_stmt 1
 211 0016 5D78     	 ldrb r5,[r3,#1]
 212 0018 9542     	 cmp r5,r2
 213 001a 01D0     	 beq .L29
 214              	.L28:
 147:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if( def->info->base->cipher == cipher_id &&
 215              	 .loc 1 147 0 discriminator 2
 216 001c 0834     	 adds r4,r4,#8
 217              	.LVL20:
 218 001e F1E7     	 b .L27
 219              	.L29:
 150:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             def->info->mode == mode )
 151:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             return( def->info );
 152:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 153:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     return( NULL );
 154:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
 220              	 .loc 1 154 0
 221 0020 1846     	 mov r0,r3
 222              	.LVL21:
 223 0022 30BD     	 pop {r4,r5,pc}
 224              	.LVL22:
 225              	.L32:
 226              	 .align 2
 227              	.L31:
 228 0024 00000000 	 .word mbedtls_cipher_definitions
 229              	 .cfi_endproc
 230              	.LFE10:
 232              	 .section .text.mbedtls_cipher_init,"ax",%progbits
 233              	 .align 1
 234              	 .global mbedtls_cipher_init
 235              	 .thumb
 236              	 .thumb_func
 238              	mbedtls_cipher_init:
 239              	.LFB11:
 155:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 156:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** void mbedtls_cipher_init( mbedtls_cipher_context_t *ctx )
 157:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** {
 240              	 .loc 1 157 0
 241              	 .cfi_startproc
 242              	 
 243              	 
 244              	 
 245              	.LVL23:
 158:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE( ctx != NULL );
 159:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     memset( ctx, 0, sizeof( mbedtls_cipher_context_t ) );
 246              	 .loc 1 159 0
 247 0000 0021     	 movs r1,#0
 248 0002 3822     	 movs r2,#56
 249 0004 FFF7FEBF 	 b memset
 250              	.LVL24:
 251              	 .cfi_endproc
 252              	.LFE11:
 254              	 .section .text.mbedtls_cipher_free,"ax",%progbits
 255              	 .align 1
 256              	 .global mbedtls_cipher_free
 257              	 .thumb
 258              	 .thumb_func
 260              	mbedtls_cipher_free:
 261              	.LFB12:
 160:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
 161:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 162:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** void mbedtls_cipher_free( mbedtls_cipher_context_t *ctx )
 163:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** {
 262              	 .loc 1 163 0
 263              	 .cfi_startproc
 264              	 
 265              	 
 266              	.LVL25:
 267 0000 10B5     	 push {r4,lr}
 268              	.LCFI3:
 269              	 .cfi_def_cfa_offset 8
 270              	 .cfi_offset 4,-8
 271              	 .cfi_offset 14,-4
 164:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( ctx == NULL )
 272              	 .loc 1 164 0
 273 0002 0446     	 mov r4,r0
 274 0004 58B1     	 cbz r0,.L34
 165:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return;
 166:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 167:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CMAC_C)
 168:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( ctx->cmac_ctx )
 169:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 170:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****        mbedtls_platform_zeroize( ctx->cmac_ctx,
 171:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                  sizeof( mbedtls_cmac_context_t ) );
 172:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****        mbedtls_free( ctx->cmac_ctx );
 173:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 174:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif
 175:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 176:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( ctx->cipher_ctx )
 275              	 .loc 1 176 0
 276 0006 406B     	 ldr r0,[r0,#52]
 277              	.LVL26:
 278 0008 18B1     	 cbz r0,.L36
 177:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         ctx->cipher_info->base->ctx_free_func( ctx->cipher_ctx );
 279              	 .loc 1 177 0
 280 000a 2368     	 ldr r3,[r4]
 281 000c 9B69     	 ldr r3,[r3,#24]
 282 000e 5B69     	 ldr r3,[r3,#20]
 283 0010 9847     	 blx r3
 284              	.LVL27:
 285              	.L36:
 178:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 179:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     mbedtls_platform_zeroize( ctx, sizeof(mbedtls_cipher_context_t) );
 286              	 .loc 1 179 0
 287 0012 2046     	 mov r0,r4
 288 0014 3821     	 movs r1,#56
 180:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
 289              	 .loc 1 180 0
 290 0016 BDE81040 	 pop {r4,lr}
 291              	.LCFI4:
 292              	 .cfi_remember_state
 293              	 .cfi_restore 14
 294              	 .cfi_restore 4
 295              	 .cfi_def_cfa_offset 0
 296              	.LVL28:
 179:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
 297              	 .loc 1 179 0
 298 001a FFF7FEBF 	 b mbedtls_platform_zeroize
 299              	.LVL29:
 300              	.L34:
 301              	.LCFI5:
 302              	 .cfi_restore_state
 303 001e 10BD     	 pop {r4,pc}
 304              	 .cfi_endproc
 305              	.LFE12:
 307              	 .section .text.mbedtls_cipher_setup,"ax",%progbits
 308              	 .align 1
 309              	 .global mbedtls_cipher_setup
 310              	 .thumb
 311              	 .thumb_func
 313              	mbedtls_cipher_setup:
 314              	.LFB13:
 181:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 182:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** int mbedtls_cipher_setup( mbedtls_cipher_context_t *ctx, const mbedtls_cipher_info_t *cipher_info )
 183:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** {
 315              	 .loc 1 183 0
 316              	 .cfi_startproc
 317              	 
 318              	 
 319              	.LVL30:
 320 0000 38B5     	 push {r3,r4,r5,lr}
 321              	.LCFI6:
 322              	 .cfi_def_cfa_offset 16
 323              	 .cfi_offset 3,-16
 324              	 .cfi_offset 4,-12
 325              	 .cfi_offset 5,-8
 326              	 .cfi_offset 14,-4
 327              	 .loc 1 183 0
 328 0002 0546     	 mov r5,r0
 184:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( ctx != NULL );
 185:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( cipher_info == NULL )
 329              	 .loc 1 185 0
 330 0004 0C46     	 mov r4,r1
 331 0006 59B1     	 cbz r1,.L42
 186:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 187:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 188:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     memset( ctx, 0, sizeof( mbedtls_cipher_context_t ) );
 332              	 .loc 1 188 0
 333 0008 0021     	 movs r1,#0
 334              	.LVL31:
 335 000a 3822     	 movs r2,#56
 336 000c FFF7FEFF 	 bl memset
 337              	.LVL32:
 189:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 190:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( NULL == ( ctx->cipher_ctx = cipher_info->base->ctx_alloc_func() ) )
 338              	 .loc 1 190 0
 339 0010 A369     	 ldr r3,[r4,#24]
 340 0012 1B69     	 ldr r3,[r3,#16]
 341 0014 9847     	 blx r3
 342              	.LVL33:
 343 0016 6863     	 str r0,[r5,#52]
 344 0018 20B1     	 cbz r0,.L43
 191:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_ALLOC_FAILED );
 192:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 193:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     ctx->cipher_info = cipher_info;
 345              	 .loc 1 193 0
 346 001a 2C60     	 str r4,[r5]
 194:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 195:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_MODE_WITH_PADDING)
 196:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     /*
 197:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****      * Ignore possible errors caused by a cipher mode that doesn't use padding
 198:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****      */
 199:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_PADDING_PKCS7)
 200:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     (void) mbedtls_cipher_set_padding_mode( ctx, MBEDTLS_PADDING_PKCS7 );
 201:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #else
 202:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     (void) mbedtls_cipher_set_padding_mode( ctx, MBEDTLS_PADDING_NONE );
 203:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif
 204:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CIPHER_MODE_WITH_PADDING */
 205:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 206:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     return( 0 );
 347              	 .loc 1 206 0
 348 001c 0020     	 movs r0,#0
 349 001e 38BD     	 pop {r3,r4,r5,pc}
 350              	.LVL34:
 351              	.L42:
 186:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 352              	 .loc 1 186 0
 353 0020 0148     	 ldr r0,.L44
 354              	.LVL35:
 355 0022 38BD     	 pop {r3,r4,r5,pc}
 356              	.LVL36:
 357              	.L43:
 191:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_ALLOC_FAILED );
 358              	 .loc 1 191 0
 359 0024 0148     	 ldr r0,.L44+4
 207:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
 360              	 .loc 1 207 0
 361 0026 38BD     	 pop {r3,r4,r5,pc}
 362              	.LVL37:
 363              	.L45:
 364              	 .align 2
 365              	.L44:
 366 0028 009FFFFF 	 .word -24832
 367 002c 809EFFFF 	 .word -24960
 368              	 .cfi_endproc
 369              	.LFE13:
 371              	 .section .text.mbedtls_cipher_setkey,"ax",%progbits
 372              	 .align 1
 373              	 .global mbedtls_cipher_setkey
 374              	 .thumb
 375              	 .thumb_func
 377              	mbedtls_cipher_setkey:
 378              	.LFB14:
 208:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 209:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** int mbedtls_cipher_setkey( mbedtls_cipher_context_t *ctx,
 210:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                            const unsigned char *key,
 211:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                            int key_bitlen,
 212:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                            const mbedtls_operation_t operation )
 213:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** {
 379              	 .loc 1 213 0
 380              	 .cfi_startproc
 381              	 
 382              	 
 383              	.LVL38:
 384 0000 30B5     	 push {r4,r5,lr}
 385              	.LCFI7:
 386              	 .cfi_def_cfa_offset 12
 387              	 .cfi_offset 4,-12
 388              	 .cfi_offset 5,-8
 389              	 .cfi_offset 14,-4
 214:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( ctx != NULL );
 215:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( key != NULL );
 216:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( operation == MBEDTLS_ENCRYPT ||
 217:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                          operation == MBEDTLS_DECRYPT );
 218:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( ctx->cipher_info == NULL )
 390              	 .loc 1 218 0
 391 0002 0468     	 ldr r4,[r0]
 392 0004 BCB1     	 cbz r4,.L48
 219:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 220:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 221:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( ( ctx->cipher_info->flags & MBEDTLS_CIPHER_VARIABLE_KEY_LEN ) == 0 &&
 393              	 .loc 1 221 0
 394 0006 2569     	 ldr r5,[r4,#16]
 395 0008 AD07     	 lsls r5,r5,#30
 396 000a 02D4     	 bmi .L49
 397              	 .loc 1 221 0 is_stmt 0 discriminator 1
 398 000c 6568     	 ldr r5,[r4,#4]
 399 000e 9542     	 cmp r5,r2
 400 0010 11D1     	 bne .L48
 401              	.L49:
 222:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         (int) ctx->cipher_info->key_bitlen != key_bitlen )
 223:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 224:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 225:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 226:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 227:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     ctx->key_bitlen = key_bitlen;
 228:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     ctx->operation = operation;
 229:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 230:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     /*
 231:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****      * For OFB, CFB and CTR mode always use the encryption key schedule
 232:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****      */
 233:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( MBEDTLS_ENCRYPT == operation ||
 402              	 .loc 1 233 0 is_stmt 1
 403 0012 012B     	 cmp r3,#1
 227:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     ctx->operation = operation;
 404              	 .loc 1 227 0
 405 0014 4260     	 str r2,[r0,#4]
 228:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 406              	 .loc 1 228 0
 407 0016 0372     	 strb r3,[r0,#8]
 408              	 .loc 1 233 0
 409 0018 03D0     	 beq .L51
 410              	 .loc 1 233 0 is_stmt 0 discriminator 1
 411 001a 6578     	 ldrb r5,[r4,#1]
 412 001c 033D     	 subs r5,r5,#3
 413 001e 022D     	 cmp r5,#2
 414 0020 02D8     	 bhi .L52
 415              	.L51:
 234:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         MBEDTLS_MODE_CFB == ctx->cipher_info->mode ||
 235:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         MBEDTLS_MODE_OFB == ctx->cipher_info->mode ||
 236:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         MBEDTLS_MODE_CTR == ctx->cipher_info->mode )
 237:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 238:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( ctx->cipher_info->base->setkey_enc_func( ctx->cipher_ctx, key,
 416              	 .loc 1 238 0 is_stmt 1
 417 0022 A369     	 ldr r3,[r4,#24]
 418              	.LVL39:
 419 0024 9B68     	 ldr r3,[r3,#8]
 420 0026 02E0     	 b .L56
 421              	.LVL40:
 422              	.L52:
 239:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                                          ctx->key_bitlen ) );
 240:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 241:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 242:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( MBEDTLS_DECRYPT == operation )
 423              	 .loc 1 242 0
 424 0028 2BB9     	 cbnz r3,.L48
 243:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( ctx->cipher_info->base->setkey_dec_func( ctx->cipher_ctx, key,
 425              	 .loc 1 243 0
 426 002a A369     	 ldr r3,[r4,#24]
 427              	.LVL41:
 428 002c DB68     	 ldr r3,[r3,#12]
 429              	.L56:
 430 002e 406B     	 ldr r0,[r0,#52]
 431              	.LVL42:
 244:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                                          ctx->key_bitlen ) );
 245:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 246:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 247:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
 432              	 .loc 1 247 0
 433 0030 BDE83040 	 pop {r4,r5,lr}
 434              	.LCFI8:
 435              	 .cfi_remember_state
 436              	 .cfi_restore 14
 437              	 .cfi_restore 5
 438              	 .cfi_restore 4
 439              	 .cfi_def_cfa_offset 0
 243:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( ctx->cipher_info->base->setkey_dec_func( ctx->cipher_ctx, key,
 440              	 .loc 1 243 0
 441 0034 1847     	 bx r3
 442              	.LVL43:
 443              	.L48:
 444              	.LCFI9:
 445              	 .cfi_restore_state
 446              	 .loc 1 247 0
 447 0036 0148     	 ldr r0,.L57
 448              	.LVL44:
 449 0038 30BD     	 pop {r4,r5,pc}
 450              	.L58:
 451 003a 00BF     	 .align 2
 452              	.L57:
 453 003c 009FFFFF 	 .word -24832
 454              	 .cfi_endproc
 455              	.LFE14:
 457              	 .section .text.mbedtls_cipher_set_iv,"ax",%progbits
 458              	 .align 1
 459              	 .global mbedtls_cipher_set_iv
 460              	 .thumb
 461              	 .thumb_func
 463              	mbedtls_cipher_set_iv:
 464              	.LFB15:
 248:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 249:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** int mbedtls_cipher_set_iv( mbedtls_cipher_context_t *ctx,
 250:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                            const unsigned char *iv,
 251:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                            size_t iv_len )
 252:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** {
 465              	 .loc 1 252 0
 466              	 .cfi_startproc
 467              	 
 468              	 
 469              	.LVL45:
 470 0000 38B5     	 push {r3,r4,r5,lr}
 471              	.LCFI10:
 472              	 .cfi_def_cfa_offset 16
 473              	 .cfi_offset 3,-16
 474              	 .cfi_offset 4,-12
 475              	 .cfi_offset 5,-8
 476              	 .cfi_offset 14,-4
 253:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     size_t actual_iv_size;
 254:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 255:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( ctx != NULL );
 256:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( iv_len == 0 || iv != NULL );
 257:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( ctx->cipher_info == NULL )
 477              	 .loc 1 257 0
 478 0002 0368     	 ldr r3,[r0]
 252:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     size_t actual_iv_size;
 479              	 .loc 1 252 0
 480 0004 0546     	 mov r5,r0
 481              	 .loc 1 257 0
 482 0006 A3B1     	 cbz r3,.L65
 258:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 259:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 260:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     /* avoid buffer overflow in ctx->iv */
 261:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( iv_len > MBEDTLS_MAX_IV_LENGTH )
 483              	 .loc 1 261 0
 484 0008 102A     	 cmp r2,#16
 485 000a 10D8     	 bhi .L63
 262:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_FEATURE_UNAVAILABLE );
 263:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 264:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( ( ctx->cipher_info->flags & MBEDTLS_CIPHER_VARIABLE_IV_LEN ) != 0 )
 486              	 .loc 1 264 0
 487 000c 1869     	 ldr r0,[r3,#16]
 488              	.LVL46:
 489 000e C007     	 lsls r0,r0,#31
 490 0010 03D4     	 bmi .L64
 265:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         actual_iv_size = iv_len;
 266:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     else
 267:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 268:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         actual_iv_size = ctx->cipher_info->iv_size;
 491              	 .loc 1 268 0
 492 0012 DC68     	 ldr r4,[r3,#12]
 493              	.LVL47:
 269:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 270:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         /* avoid reading past the end of input buffer */
 271:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if( actual_iv_size > iv_len )
 494              	 .loc 1 271 0
 495 0014 9442     	 cmp r4,r2
 496 0016 01D9     	 bls .L61
 497 0018 0BE0     	 b .L65
 498              	.LVL48:
 499              	.L64:
 500 001a 1446     	 mov r4,r2
 501              	.L61:
 502              	.LVL49:
 272:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 273:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 274:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 275:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CHACHA20_C)
 276:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if ( ctx->cipher_info->type == MBEDTLS_CIPHER_CHACHA20 )
 277:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 278:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if ( 0 != mbedtls_chacha20_starts( (mbedtls_chacha20_context*)ctx->cipher_ctx,
 279:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                            iv,
 280:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                            0U ) ) /* Initial counter value */
 281:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         {
 282:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 283:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         }
 284:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 285:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif
 286:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 287:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if ( actual_iv_size != 0 )
 503              	 .loc 1 287 0
 504 001c 2CB1     	 cbz r4,.L67
 288:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 289:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         memcpy( ctx->iv, iv, actual_iv_size );
 505              	 .loc 1 289 0
 506 001e 05F12000 	 add r0,r5,#32
 507 0022 2246     	 mov r2,r4
 508              	.LVL50:
 509 0024 FFF7FEFF 	 bl memcpy
 510              	.LVL51:
 290:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         ctx->iv_size = actual_iv_size;
 511              	 .loc 1 290 0
 512 0028 2C63     	 str r4,[r5,#48]
 513              	.L67:
 291:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 292:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 293:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     return( 0 );
 514              	 .loc 1 293 0
 515 002a 0020     	 movs r0,#0
 516 002c 38BD     	 pop {r3,r4,r5,pc}
 517              	.LVL52:
 518              	.L63:
 262:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 519              	 .loc 1 262 0
 520 002e 0248     	 ldr r0,.L68
 521              	.LVL53:
 522 0030 38BD     	 pop {r3,r4,r5,pc}
 523              	.LVL54:
 524              	.L65:
 258:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 525              	 .loc 1 258 0
 526 0032 0248     	 ldr r0,.L68+4
 527 0034 38BD     	 pop {r3,r4,r5,pc}
 528              	.LVL55:
 529              	.L69:
 530 0036 00BF     	 .align 2
 531              	.L68:
 532 0038 809FFFFF 	 .word -24704
 533 003c 009FFFFF 	 .word -24832
 534              	 .cfi_endproc
 535              	.LFE15:
 537              	 .section .text.mbedtls_cipher_reset,"ax",%progbits
 538              	 .align 1
 539              	 .global mbedtls_cipher_reset
 540              	 .thumb
 541              	 .thumb_func
 543              	mbedtls_cipher_reset:
 544              	.LFB16:
 294:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
 295:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 296:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** int mbedtls_cipher_reset( mbedtls_cipher_context_t *ctx )
 297:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** {
 545              	 .loc 1 297 0
 546              	 .cfi_startproc
 547              	 
 548              	 
 549              	 
 550              	.LVL56:
 298:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( ctx != NULL );
 299:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( ctx->cipher_info == NULL )
 551              	 .loc 1 299 0
 552 0000 0368     	 ldr r3,[r0]
 553 0002 1BB1     	 cbz r3,.L72
 300:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 301:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 302:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     ctx->unprocessed_len = 0;
 554              	 .loc 1 302 0
 555 0004 0023     	 movs r3,#0
 556 0006 C361     	 str r3,[r0,#28]
 303:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 304:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     return( 0 );
 557              	 .loc 1 304 0
 558 0008 1846     	 mov r0,r3
 559              	.LVL57:
 560 000a 7047     	 bx lr
 561              	.LVL58:
 562              	.L72:
 300:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 563              	 .loc 1 300 0
 564 000c 0048     	 ldr r0,.L73
 565              	.LVL59:
 305:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
 566              	 .loc 1 305 0
 567 000e 7047     	 bx lr
 568              	.L74:
 569              	 .align 2
 570              	.L73:
 571 0010 009FFFFF 	 .word -24832
 572              	 .cfi_endproc
 573              	.LFE16:
 575              	 .section .text.mbedtls_cipher_update,"ax",%progbits
 576              	 .align 1
 577              	 .global mbedtls_cipher_update
 578              	 .thumb
 579              	 .thumb_func
 581              	mbedtls_cipher_update:
 582              	.LFB17:
 306:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 307:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_GCM_C) || defined(MBEDTLS_CHACHAPOLY_C)
 308:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** int mbedtls_cipher_update_ad( mbedtls_cipher_context_t *ctx,
 309:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                       const unsigned char *ad, size_t ad_len )
 310:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** {
 311:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( ctx != NULL );
 312:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( ad_len == 0 || ad != NULL );
 313:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( ctx->cipher_info == NULL )
 314:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 315:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 316:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_GCM_C)
 317:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( MBEDTLS_MODE_GCM == ctx->cipher_info->mode )
 318:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 319:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( mbedtls_gcm_starts( (mbedtls_gcm_context *) ctx->cipher_ctx, ctx->operation,
 320:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                     ctx->iv, ctx->iv_size, ad, ad_len ) );
 321:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 322:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif
 323:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 324:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CHACHAPOLY_C)
 325:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if (MBEDTLS_CIPHER_CHACHA20_POLY1305 == ctx->cipher_info->type )
 326:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 327:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         int result;
 328:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         mbedtls_chachapoly_mode_t mode;
 329:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 330:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         mode = ( ctx->operation == MBEDTLS_ENCRYPT )
 331:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                 ? MBEDTLS_CHACHAPOLY_ENCRYPT
 332:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                 : MBEDTLS_CHACHAPOLY_DECRYPT;
 333:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 334:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         result = mbedtls_chachapoly_starts( (mbedtls_chachapoly_context*) ctx->cipher_ctx,
 335:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                                         ctx->iv,
 336:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                                         mode );
 337:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if ( result != 0 )
 338:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             return( result );
 339:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 340:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( mbedtls_chachapoly_update_aad( (mbedtls_chachapoly_context*) ctx->cipher_ctx,
 341:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                                ad, ad_len ) );
 342:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 343:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif
 344:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 345:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     return( 0 );
 346:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
 347:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif /* MBEDTLS_GCM_C || MBEDTLS_CHACHAPOLY_C */
 348:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 349:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** int mbedtls_cipher_update( mbedtls_cipher_context_t *ctx, const unsigned char *input,
 350:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                    size_t ilen, unsigned char *output, size_t *olen )
 351:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** {
 583              	 .loc 1 351 0
 584              	 .cfi_startproc
 585              	 
 586              	 
 587              	.LVL60:
 588 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 589              	.LCFI11:
 590              	 .cfi_def_cfa_offset 20
 591              	 .cfi_offset 4,-20
 592              	 .cfi_offset 5,-16
 593              	 .cfi_offset 6,-12
 594              	 .cfi_offset 7,-8
 595              	 .cfi_offset 14,-4
 596              	 .loc 1 351 0
 597 0002 0446     	 mov r4,r0
 352:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     int ret;
 353:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     size_t block_size;
 354:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 355:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( ctx != NULL );
 356:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( ilen == 0 || input != NULL );
 357:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( output != NULL );
 358:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( olen != NULL );
 359:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( ctx->cipher_info == NULL )
 598              	 .loc 1 359 0
 599 0004 0068     	 ldr r0,[r0]
 600              	.LVL61:
 351:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     int ret;
 601              	 .loc 1 351 0
 602 0006 059E     	 ldr r6,[sp,#20]
 603 0008 0D46     	 mov r5,r1
 604              	 .loc 1 359 0
 605 000a 08B9     	 cbnz r0,.L76
 606              	.LVL62:
 607              	.L79:
 360:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 608              	 .loc 1 360 0
 609 000c 1448     	 ldr r0,.L83
 610 000e F0BD     	 pop {r4,r5,r6,r7,pc}
 611              	.LVL63:
 612              	.L76:
 361:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 362:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     *olen = 0;
 363:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     block_size = mbedtls_cipher_get_block_size( ctx );
 364:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 365:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( ctx->cipher_info->mode == MBEDTLS_MODE_ECB )
 613              	 .loc 1 365 0
 614 0010 90F801E0 	 ldrb lr,[r0,#1]
 362:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     block_size = mbedtls_cipher_get_block_size( ctx );
 615              	 .loc 1 362 0
 616 0014 0021     	 movs r1,#0
 617              	.LVL64:
 618 0016 3160     	 str r1,[r6]
 619              	.LVL65:
 620              	 .loc 1 365 0
 621 0018 BEF1010F 	 cmp lr,#1
 622              	.LBB6:
 623              	.LBB7:
 624              	 .file 2 "C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls/cipher.h"
   1:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** /**
   2:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \file cipher.h
   3:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *
   4:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \brief This file contains an abstraction interface for use with the cipher
   5:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * primitives provided by the library. It provides a common interface to all of
   6:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * the available cipher operations.
   7:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *
   8:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \author Adriaan de Jong <dejong@fox-it.com>
   9:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  */
  10:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** /*
  11:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *  Copyright (C) 2006-2018, Arm Limited (or its affiliates), All Rights Reserved
  12:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *  SPDX-License-Identifier: Apache-2.0
  13:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *
  14:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *  Licensed under the Apache License, Version 2.0 (the "License"); you may
  15:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *  not use this file except in compliance with the License.
  16:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *  You may obtain a copy of the License at
  17:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *
  18:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *  http://www.apache.org/licenses/LICENSE-2.0
  19:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *
  20:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *  Unless required by applicable law or agreed to in writing, software
  21:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  22:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  23:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *  See the License for the specific language governing permissions and
  24:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *  limitations under the License.
  25:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *
  26:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *  This file is part of Mbed TLS (https://tls.mbed.org)
  27:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  */
  28:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
  29:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #ifndef MBEDTLS_CIPHER_H
  30:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #define MBEDTLS_CIPHER_H
  31:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
  32:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #if !defined(MBEDTLS_CONFIG_FILE)
  33:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #include "config.h"
  34:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #else
  35:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #include MBEDTLS_CONFIG_FILE
  36:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #endif
  37:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
  38:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #include <stddef.h>
  39:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #include "mbedtls/platform_util.h"
  40:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
  41:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #if defined(MBEDTLS_GCM_C) || defined(MBEDTLS_CCM_C) || defined(MBEDTLS_CHACHAPOLY_C)
  42:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #define MBEDTLS_CIPHER_MODE_AEAD
  43:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #endif
  44:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
  45:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #if defined(MBEDTLS_CIPHER_MODE_CBC)
  46:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #define MBEDTLS_CIPHER_MODE_WITH_PADDING
  47:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #endif
  48:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
  49:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #if defined(MBEDTLS_ARC4_C) || defined(MBEDTLS_CIPHER_NULL_CIPHER) || \
  50:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     defined(MBEDTLS_CHACHA20_C)
  51:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #define MBEDTLS_CIPHER_MODE_STREAM
  52:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #endif
  53:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
  54:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #if ( defined(__ARMCC_VERSION) || defined(_MSC_VER) ) && \
  55:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     !defined(inline) && !defined(__cplusplus)
  56:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #define inline __inline
  57:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #endif
  58:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
  59:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #define MBEDTLS_ERR_CIPHER_FEATURE_UNAVAILABLE  -0x6080  /**< The selected feature is not available
  60:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #define MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA       -0x6100  /**< Bad input parameters. */
  61:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #define MBEDTLS_ERR_CIPHER_ALLOC_FAILED         -0x6180  /**< Failed to allocate memory. */
  62:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #define MBEDTLS_ERR_CIPHER_INVALID_PADDING      -0x6200  /**< Input data contains invalid padding a
  63:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #define MBEDTLS_ERR_CIPHER_FULL_BLOCK_EXPECTED  -0x6280  /**< Decryption of block requires a full b
  64:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #define MBEDTLS_ERR_CIPHER_AUTH_FAILED          -0x6300  /**< Authentication failed (for AEAD modes
  65:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #define MBEDTLS_ERR_CIPHER_INVALID_CONTEXT      -0x6380  /**< The context is invalid. For example, 
  66:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
  67:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** /* MBEDTLS_ERR_CIPHER_HW_ACCEL_FAILED is deprecated and should not be used. */
  68:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #define MBEDTLS_ERR_CIPHER_HW_ACCEL_FAILED      -0x6400  /**< Cipher hardware accelerator failed. *
  69:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
  70:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #define MBEDTLS_CIPHER_VARIABLE_IV_LEN     0x01    /**< Cipher accepts IVs of variable length. */
  71:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #define MBEDTLS_CIPHER_VARIABLE_KEY_LEN    0x02    /**< Cipher accepts keys of variable length. */
  72:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
  73:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #ifdef __cplusplus
  74:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** extern "C" {
  75:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #endif
  76:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
  77:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** /**
  78:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \brief     Supported cipher types.
  79:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *
  80:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \warning   RC4 and DES are considered weak ciphers and their use
  81:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *            constitutes a security risk. Arm recommends considering stronger
  82:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *            ciphers instead.
  83:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  */
  84:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** typedef enum {
  85:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ID_NONE = 0,  /**< Placeholder to mark the end of cipher ID lists. */
  86:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ID_NULL,      /**< The identity cipher, treated as a stream cipher. */
  87:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ID_AES,       /**< The AES cipher. */
  88:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ID_DES,       /**< The DES cipher. */
  89:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ID_3DES,      /**< The Triple DES cipher. */
  90:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ID_CAMELLIA,  /**< The Camellia cipher. */
  91:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ID_BLOWFISH,  /**< The Blowfish cipher. */
  92:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ID_ARC4,      /**< The RC4 cipher. */
  93:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ID_ARIA,      /**< The Aria cipher. */
  94:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ID_CHACHA20,  /**< The ChaCha20 cipher. */
  95:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** } mbedtls_cipher_id_t;
  96:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
  97:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** /**
  98:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \brief     Supported {cipher type, cipher mode} pairs.
  99:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *
 100:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \warning   RC4 and DES are considered weak ciphers and their use
 101:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *            constitutes a security risk. Arm recommends considering stronger
 102:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *            ciphers instead.
 103:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  */
 104:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** typedef enum {
 105:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_NONE = 0,             /**< Placeholder to mark the end of cipher-pair lists. */
 106:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_NULL,                 /**< The identity stream cipher. */
 107:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_128_ECB,          /**< AES cipher with 128-bit ECB mode. */
 108:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_192_ECB,          /**< AES cipher with 192-bit ECB mode. */
 109:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_256_ECB,          /**< AES cipher with 256-bit ECB mode. */
 110:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_128_CBC,          /**< AES cipher with 128-bit CBC mode. */
 111:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_192_CBC,          /**< AES cipher with 192-bit CBC mode. */
 112:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_256_CBC,          /**< AES cipher with 256-bit CBC mode. */
 113:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_128_CFB128,       /**< AES cipher with 128-bit CFB128 mode. */
 114:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_192_CFB128,       /**< AES cipher with 192-bit CFB128 mode. */
 115:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_256_CFB128,       /**< AES cipher with 256-bit CFB128 mode. */
 116:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_128_CTR,          /**< AES cipher with 128-bit CTR mode. */
 117:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_192_CTR,          /**< AES cipher with 192-bit CTR mode. */
 118:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_256_CTR,          /**< AES cipher with 256-bit CTR mode. */
 119:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_128_GCM,          /**< AES cipher with 128-bit GCM mode. */
 120:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_192_GCM,          /**< AES cipher with 192-bit GCM mode. */
 121:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_256_GCM,          /**< AES cipher with 256-bit GCM mode. */
 122:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_128_ECB,     /**< Camellia cipher with 128-bit ECB mode. */
 123:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_192_ECB,     /**< Camellia cipher with 192-bit ECB mode. */
 124:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_256_ECB,     /**< Camellia cipher with 256-bit ECB mode. */
 125:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_128_CBC,     /**< Camellia cipher with 128-bit CBC mode. */
 126:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_192_CBC,     /**< Camellia cipher with 192-bit CBC mode. */
 127:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_256_CBC,     /**< Camellia cipher with 256-bit CBC mode. */
 128:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_128_CFB128,  /**< Camellia cipher with 128-bit CFB128 mode. */
 129:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_192_CFB128,  /**< Camellia cipher with 192-bit CFB128 mode. */
 130:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_256_CFB128,  /**< Camellia cipher with 256-bit CFB128 mode. */
 131:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_128_CTR,     /**< Camellia cipher with 128-bit CTR mode. */
 132:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_192_CTR,     /**< Camellia cipher with 192-bit CTR mode. */
 133:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_256_CTR,     /**< Camellia cipher with 256-bit CTR mode. */
 134:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_128_GCM,     /**< Camellia cipher with 128-bit GCM mode. */
 135:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_192_GCM,     /**< Camellia cipher with 192-bit GCM mode. */
 136:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_256_GCM,     /**< Camellia cipher with 256-bit GCM mode. */
 137:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_DES_ECB,              /**< DES cipher with ECB mode. */
 138:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_DES_CBC,              /**< DES cipher with CBC mode. */
 139:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_DES_EDE_ECB,          /**< DES cipher with EDE ECB mode. */
 140:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_DES_EDE_CBC,          /**< DES cipher with EDE CBC mode. */
 141:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_DES_EDE3_ECB,         /**< DES cipher with EDE3 ECB mode. */
 142:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_DES_EDE3_CBC,         /**< DES cipher with EDE3 CBC mode. */
 143:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_BLOWFISH_ECB,         /**< Blowfish cipher with ECB mode. */
 144:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_BLOWFISH_CBC,         /**< Blowfish cipher with CBC mode. */
 145:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_BLOWFISH_CFB64,       /**< Blowfish cipher with CFB64 mode. */
 146:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_BLOWFISH_CTR,         /**< Blowfish cipher with CTR mode. */
 147:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARC4_128,             /**< RC4 cipher with 128-bit mode. */
 148:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_128_CCM,          /**< AES cipher with 128-bit CCM mode. */
 149:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_192_CCM,          /**< AES cipher with 192-bit CCM mode. */
 150:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_256_CCM,          /**< AES cipher with 256-bit CCM mode. */
 151:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_128_CCM,     /**< Camellia cipher with 128-bit CCM mode. */
 152:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_192_CCM,     /**< Camellia cipher with 192-bit CCM mode. */
 153:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_256_CCM,     /**< Camellia cipher with 256-bit CCM mode. */
 154:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_128_ECB,         /**< Aria cipher with 128-bit key and ECB mode. */
 155:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_192_ECB,         /**< Aria cipher with 192-bit key and ECB mode. */
 156:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_256_ECB,         /**< Aria cipher with 256-bit key and ECB mode. */
 157:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_128_CBC,         /**< Aria cipher with 128-bit key and CBC mode. */
 158:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_192_CBC,         /**< Aria cipher with 192-bit key and CBC mode. */
 159:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_256_CBC,         /**< Aria cipher with 256-bit key and CBC mode. */
 160:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_128_CFB128,      /**< Aria cipher with 128-bit key and CFB-128 mode. */
 161:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_192_CFB128,      /**< Aria cipher with 192-bit key and CFB-128 mode. */
 162:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_256_CFB128,      /**< Aria cipher with 256-bit key and CFB-128 mode. */
 163:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_128_CTR,         /**< Aria cipher with 128-bit key and CTR mode. */
 164:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_192_CTR,         /**< Aria cipher with 192-bit key and CTR mode. */
 165:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_256_CTR,         /**< Aria cipher with 256-bit key and CTR mode. */
 166:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_128_GCM,         /**< Aria cipher with 128-bit key and GCM mode. */
 167:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_192_GCM,         /**< Aria cipher with 192-bit key and GCM mode. */
 168:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_256_GCM,         /**< Aria cipher with 256-bit key and GCM mode. */
 169:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_128_CCM,         /**< Aria cipher with 128-bit key and CCM mode. */
 170:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_192_CCM,         /**< Aria cipher with 192-bit key and CCM mode. */
 171:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_256_CCM,         /**< Aria cipher with 256-bit key and CCM mode. */
 172:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_128_OFB,          /**< AES 128-bit cipher in OFB mode. */
 173:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_192_OFB,          /**< AES 192-bit cipher in OFB mode. */
 174:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_256_OFB,          /**< AES 256-bit cipher in OFB mode. */
 175:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_128_XTS,          /**< AES 128-bit cipher in XTS block mode. */
 176:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_256_XTS,          /**< AES 256-bit cipher in XTS block mode. */
 177:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CHACHA20,             /**< ChaCha20 stream cipher. */
 178:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CHACHA20_POLY1305,    /**< ChaCha20-Poly1305 AEAD cipher. */
 179:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** } mbedtls_cipher_type_t;
 180:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 181:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** /** Supported cipher modes. */
 182:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** typedef enum {
 183:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_MODE_NONE = 0,               /**< None. */
 184:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_MODE_ECB,                    /**< The ECB cipher mode. */
 185:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_MODE_CBC,                    /**< The CBC cipher mode. */
 186:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_MODE_CFB,                    /**< The CFB cipher mode. */
 187:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_MODE_OFB,                    /**< The OFB cipher mode. */
 188:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_MODE_CTR,                    /**< The CTR cipher mode. */
 189:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_MODE_GCM,                    /**< The GCM cipher mode. */
 190:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_MODE_STREAM,                 /**< The stream cipher mode. */
 191:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_MODE_CCM,                    /**< The CCM cipher mode. */
 192:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_MODE_XTS,                    /**< The XTS cipher mode. */
 193:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_MODE_CHACHAPOLY,             /**< The ChaCha-Poly cipher mode. */
 194:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** } mbedtls_cipher_mode_t;
 195:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 196:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** /** Supported cipher padding types. */
 197:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** typedef enum {
 198:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_PADDING_PKCS7 = 0,     /**< PKCS7 padding (default).        */
 199:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_PADDING_ONE_AND_ZEROS, /**< ISO/IEC 7816-4 padding.         */
 200:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_PADDING_ZEROS_AND_LEN, /**< ANSI X.923 padding.             */
 201:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_PADDING_ZEROS,         /**< Zero padding (not reversible). */
 202:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_PADDING_NONE,          /**< Never pad (full blocks only).   */
 203:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** } mbedtls_cipher_padding_t;
 204:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 205:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** /** Type of operation. */
 206:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** typedef enum {
 207:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_OPERATION_NONE = -1,
 208:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_DECRYPT = 0,
 209:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_ENCRYPT,
 210:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** } mbedtls_operation_t;
 211:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 212:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** enum {
 213:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     /** Undefined key length. */
 214:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_KEY_LENGTH_NONE = 0,
 215:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     /** Key length, in bits (including parity), for DES keys. */
 216:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_KEY_LENGTH_DES  = 64,
 217:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     /** Key length in bits, including parity, for DES in two-key EDE. */
 218:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_KEY_LENGTH_DES_EDE = 128,
 219:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     /** Key length in bits, including parity, for DES in three-key EDE. */
 220:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_KEY_LENGTH_DES_EDE3 = 192,
 221:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** };
 222:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 223:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** /** Maximum length of any IV, in Bytes. */
 224:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #define MBEDTLS_MAX_IV_LENGTH      16
 225:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** /** Maximum block size of any cipher, in Bytes. */
 226:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #define MBEDTLS_MAX_BLOCK_LENGTH   16
 227:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 228:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** /**
 229:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * Base cipher information (opaque struct).
 230:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  */
 231:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** typedef struct mbedtls_cipher_base_t mbedtls_cipher_base_t;
 232:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 233:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** /**
 234:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * CMAC context (opaque struct).
 235:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  */
 236:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** typedef struct mbedtls_cmac_context_t mbedtls_cmac_context_t;
 237:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 238:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** /**
 239:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * Cipher information. Allows calling cipher functions
 240:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * in a generic way.
 241:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  */
 242:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** typedef struct mbedtls_cipher_info_t
 243:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** {
 244:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     /** Full cipher identifier. For example,
 245:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****      * MBEDTLS_CIPHER_AES_256_CBC.
 246:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****      */
 247:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     mbedtls_cipher_type_t type;
 248:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 249:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     /** The cipher mode. For example, MBEDTLS_MODE_CBC. */
 250:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     mbedtls_cipher_mode_t mode;
 251:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 252:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     /** The cipher key length, in bits. This is the
 253:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****      * default length for variable sized ciphers.
 254:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****      * Includes parity bits for ciphers like DES.
 255:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****      */
 256:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     unsigned int key_bitlen;
 257:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 258:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     /** Name of the cipher. */
 259:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     const char * name;
 260:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 261:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     /** IV or nonce size, in Bytes.
 262:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****      * For ciphers that accept variable IV sizes,
 263:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****      * this is the recommended size.
 264:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****      */
 265:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     unsigned int iv_size;
 266:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 267:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     /** Bitflag comprised of MBEDTLS_CIPHER_VARIABLE_IV_LEN and
 268:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****      *  MBEDTLS_CIPHER_VARIABLE_KEY_LEN indicating whether the
 269:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****      *  cipher supports variable IV or variable key sizes, respectively.
 270:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****      */
 271:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     int flags;
 272:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 273:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     /** The block size, in Bytes. */
 274:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     unsigned int block_size;
 275:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 276:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     /** Struct for base cipher information and functions. */
 277:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     const mbedtls_cipher_base_t *base;
 278:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 279:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** } mbedtls_cipher_info_t;
 280:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 281:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** /**
 282:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * Generic cipher context.
 283:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  */
 284:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** typedef struct mbedtls_cipher_context_t
 285:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** {
 286:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     /** Information about the associated cipher. */
 287:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     const mbedtls_cipher_info_t *cipher_info;
 288:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 289:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     /** Key length to use. */
 290:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     int key_bitlen;
 291:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 292:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     /** Operation that the key of the context has been
 293:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****      * initialized for.
 294:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****      */
 295:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     mbedtls_operation_t operation;
 296:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 297:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #if defined(MBEDTLS_CIPHER_MODE_WITH_PADDING)
 298:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     /** Padding functions to use, if relevant for
 299:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****      * the specific cipher mode.
 300:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****      */
 301:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     void (*add_padding)( unsigned char *output, size_t olen, size_t data_len );
 302:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     int (*get_padding)( unsigned char *input, size_t ilen, size_t *data_len );
 303:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #endif
 304:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 305:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     /** Buffer for input that has not been processed yet. */
 306:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     unsigned char unprocessed_data[MBEDTLS_MAX_BLOCK_LENGTH];
 307:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 308:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     /** Number of Bytes that have not been processed yet. */
 309:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     size_t unprocessed_len;
 310:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 311:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     /** Current IV or NONCE_COUNTER for CTR-mode, data unit (or sector) number
 312:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****      * for XTS-mode. */
 313:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     unsigned char iv[MBEDTLS_MAX_IV_LENGTH];
 314:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 315:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     /** IV size in Bytes, for ciphers with variable-length IVs. */
 316:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     size_t iv_size;
 317:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 318:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     /** The cipher-specific context. */
 319:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     void *cipher_ctx;
 320:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 321:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #if defined(MBEDTLS_CMAC_C)
 322:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     /** CMAC-specific context. */
 323:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     mbedtls_cmac_context_t *cmac_ctx;
 324:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** #endif
 325:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** } mbedtls_cipher_context_t;
 326:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 327:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** /**
 328:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \brief This function retrieves the list of ciphers supported by the generic
 329:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * cipher module.
 330:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *
 331:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \return      A statically-allocated array of ciphers. The last entry
 332:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *              is zero.
 333:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  */
 334:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** const int *mbedtls_cipher_list( void );
 335:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 336:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** /**
 337:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \brief               This function retrieves the cipher-information
 338:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *                      structure associated with the given cipher name.
 339:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *
 340:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \param cipher_name   Name of the cipher to search for. This must not be
 341:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *                      \c NULL.
 342:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *
 343:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \return              The cipher information structure associated with the
 344:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *                      given \p cipher_name.
 345:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \return              \c NULL if the associated cipher information is not found.
 346:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  */
 347:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** const mbedtls_cipher_info_t *mbedtls_cipher_info_from_string( const char *cipher_name );
 348:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 349:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** /**
 350:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \brief               This function retrieves the cipher-information
 351:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *                      structure associated with the given cipher type.
 352:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *
 353:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \param cipher_type   Type of the cipher to search for.
 354:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *
 355:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \return              The cipher information structure associated with the
 356:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *                      given \p cipher_type.
 357:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \return              \c NULL if the associated cipher information is not found.
 358:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  */
 359:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** const mbedtls_cipher_info_t *mbedtls_cipher_info_from_type( const mbedtls_cipher_type_t cipher_type
 360:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 361:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** /**
 362:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \brief               This function retrieves the cipher-information
 363:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *                      structure associated with the given cipher ID,
 364:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *                      key size and mode.
 365:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *
 366:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \param cipher_id     The ID of the cipher to search for. For example,
 367:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *                      #MBEDTLS_CIPHER_ID_AES.
 368:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \param key_bitlen    The length of the key in bits.
 369:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \param mode          The cipher mode. For example, #MBEDTLS_MODE_CBC.
 370:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *
 371:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \return              The cipher information structure associated with the
 372:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *                      given \p cipher_id.
 373:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \return              \c NULL if the associated cipher information is not found.
 374:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  */
 375:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** const mbedtls_cipher_info_t *mbedtls_cipher_info_from_values( const mbedtls_cipher_id_t cipher_id,
 376:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****                                               int key_bitlen,
 377:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****                                               const mbedtls_cipher_mode_t mode );
 378:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 379:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** /**
 380:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \brief               This function initializes a \p cipher_context as NONE.
 381:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *
 382:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \param ctx           The context to be initialized. This must not be \c NULL.
 383:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  */
 384:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** void mbedtls_cipher_init( mbedtls_cipher_context_t *ctx );
 385:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 386:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** /**
 387:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \brief               This function frees and clears the cipher-specific
 388:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *                      context of \p ctx. Freeing \p ctx itself remains the
 389:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *                      responsibility of the caller.
 390:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *
 391:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \param ctx           The context to be freed. If this is \c NULL, the
 392:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *                      function has no effect, otherwise this must point to an
 393:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *                      initialized context.
 394:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  */
 395:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** void mbedtls_cipher_free( mbedtls_cipher_context_t *ctx );
 396:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 397:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 398:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** /**
 399:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \brief               This function initializes and fills the cipher-context
 400:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *                      structure with the appropriate values. It also clears
 401:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *                      the structure.
 402:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *
 403:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \param ctx           The context to initialize. This must be initialized.
 404:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \param cipher_info   The cipher to use.
 405:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *
 406:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \return              \c 0 on success.
 407:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \return              #MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA on
 408:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *                      parameter-verification failure.
 409:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \return              #MBEDTLS_ERR_CIPHER_ALLOC_FAILED if allocation of the
 410:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *                      cipher-specific context fails.
 411:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *
 412:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \internal Currently, the function also clears the structure.
 413:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * In future versions, the caller will be required to call
 414:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * mbedtls_cipher_init() on the structure first.
 415:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  */
 416:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** int mbedtls_cipher_setup( mbedtls_cipher_context_t *ctx,
 417:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****                           const mbedtls_cipher_info_t *cipher_info );
 418:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 419:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** /**
 420:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \brief        This function returns the block size of the given cipher.
 421:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *
 422:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \param ctx    The context of the cipher. This must be initialized.
 423:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  *
 424:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \return       The block size of the underlying cipher.
 425:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  * \return       \c 0 if \p ctx has not been initialized.
 426:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****  */
 427:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** static inline unsigned int mbedtls_cipher_get_block_size(
 428:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     const mbedtls_cipher_context_t *ctx )
 429:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** {
 430:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     MBEDTLS_INTERNAL_VALIDATE_RET( ctx != NULL, 0 );
 431:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     if( ctx->cipher_info == NULL )
 432:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****         return 0;
 433:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h **** 
 434:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls\cipher.h ****     return ctx->cipher_info->block_size;
 625              	 .loc 2 434 0
 626 001c 4169     	 ldr r1,[r0,#20]
 627              	.LBE7:
 628              	.LBE6:
 629              	 .loc 1 365 0
 630 001e 0CD1     	 bne .L78
 366:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 367:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if( ilen != block_size )
 631              	 .loc 1 367 0
 632 0020 8A42     	 cmp r2,r1
 633 0022 17D1     	 bne .L80
 368:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             return( MBEDTLS_ERR_CIPHER_FULL_BLOCK_EXPECTED );
 369:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 370:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         *olen = ilen;
 634              	 .loc 1 370 0
 635 0024 3260     	 str r2,[r6]
 371:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 372:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if( 0 != ( ret = ctx->cipher_info->base->ecb_func( ctx->cipher_ctx,
 636              	 .loc 1 372 0
 637 0026 8269     	 ldr r2,[r0,#24]
 638              	.LVL66:
 639 0028 94F90810 	 ldrsb r1,[r4,#8]
 640 002c 5668     	 ldr r6,[r2,#4]
 641              	.LVL67:
 642 002e 606B     	 ldr r0,[r4,#52]
 643 0030 2A46     	 mov r2,r5
 644 0032 B446     	 mov ip,r6
 373:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                     ctx->operation, input, output ) ) )
 374:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         {
 375:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             return( ret );
 376:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         }
 377:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 378:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( 0 );
 379:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 380:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 381:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_GCM_C)
 382:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( ctx->cipher_info->mode == MBEDTLS_MODE_GCM )
 383:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 384:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         *olen = ilen;
 385:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( mbedtls_gcm_update( (mbedtls_gcm_context *) ctx->cipher_ctx, ilen, input,
 386:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                     output ) );
 387:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 388:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif
 389:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 390:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CHACHAPOLY_C)
 391:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if ( ctx->cipher_info->type == MBEDTLS_CIPHER_CHACHA20_POLY1305 )
 392:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 393:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         *olen = ilen;
 394:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( mbedtls_chachapoly_update( (mbedtls_chachapoly_context*) ctx->cipher_ctx,
 395:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                            ilen, input, output ) );
 396:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 397:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif
 398:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 399:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if ( 0 == block_size )
 400:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 401:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_INVALID_CONTEXT );
 402:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 403:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 404:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( input == output &&
 405:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****        ( ctx->unprocessed_len != 0 || ilen % block_size ) )
 406:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 407:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 408:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 409:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 410:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_MODE_CBC)
 411:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( ctx->cipher_info->mode == MBEDTLS_MODE_CBC )
 412:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 413:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         size_t copy_len = 0;
 414:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 415:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         /*
 416:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****          * If there is not enough data for a full block, cache it.
 417:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****          */
 418:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if( ( ctx->operation == MBEDTLS_DECRYPT && NULL != ctx->add_padding &&
 419:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                 ilen <= block_size - ctx->unprocessed_len ) ||
 420:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             ( ctx->operation == MBEDTLS_DECRYPT && NULL == ctx->add_padding &&
 421:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                 ilen < block_size - ctx->unprocessed_len ) ||
 422:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****              ( ctx->operation == MBEDTLS_ENCRYPT &&
 423:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                 ilen < block_size - ctx->unprocessed_len ) )
 424:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         {
 425:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             memcpy( &( ctx->unprocessed_data[ctx->unprocessed_len] ), input,
 426:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                     ilen );
 427:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 428:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             ctx->unprocessed_len += ilen;
 429:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             return( 0 );
 430:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         }
 431:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 432:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         /*
 433:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****          * Process cached data first
 434:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****          */
 435:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if( 0 != ctx->unprocessed_len )
 436:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         {
 437:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             copy_len = block_size - ctx->unprocessed_len;
 438:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 439:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             memcpy( &( ctx->unprocessed_data[ctx->unprocessed_len] ), input,
 440:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                     copy_len );
 441:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 442:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             if( 0 != ( ret = ctx->cipher_info->base->cbc_func( ctx->cipher_ctx,
 443:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                     ctx->operation, block_size, ctx->iv,
 444:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                     ctx->unprocessed_data, output ) ) )
 445:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             {
 446:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                 return( ret );
 447:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             }
 448:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 449:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             *olen += block_size;
 450:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             output += block_size;
 451:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             ctx->unprocessed_len = 0;
 452:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 453:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             input += copy_len;
 454:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             ilen -= copy_len;
 455:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         }
 456:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 457:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         /*
 458:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****          * Cache final, incomplete block
 459:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****          */
 460:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if( 0 != ilen )
 461:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         {
 462:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             if( 0 == block_size )
 463:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             {
 464:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                 return( MBEDTLS_ERR_CIPHER_INVALID_CONTEXT );
 465:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             }
 466:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 467:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             /* Encryption: only cache partial blocks
 468:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****              * Decryption w/ padding: always keep at least one whole block
 469:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****              * Decryption w/o padding: only cache partial blocks
 470:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****              */
 471:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             copy_len = ilen % block_size;
 472:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             if( copy_len == 0 &&
 473:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                 ctx->operation == MBEDTLS_DECRYPT &&
 474:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                 NULL != ctx->add_padding)
 475:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             {
 476:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                 copy_len = block_size;
 477:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             }
 478:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 479:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             memcpy( ctx->unprocessed_data, &( input[ilen - copy_len] ),
 480:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                     copy_len );
 481:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 482:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             ctx->unprocessed_len += copy_len;
 483:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             ilen -= copy_len;
 484:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         }
 485:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 486:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         /*
 487:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****          * Process remaining full blocks
 488:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****          */
 489:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if( ilen )
 490:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         {
 491:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             if( 0 != ( ret = ctx->cipher_info->base->cbc_func( ctx->cipher_ctx,
 492:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                     ctx->operation, ilen, ctx->iv, input, output ) ) )
 493:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             {
 494:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                 return( ret );
 495:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             }
 496:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 497:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             *olen += ilen;
 498:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         }
 499:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 500:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( 0 );
 501:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 502:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CIPHER_MODE_CBC */
 503:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 504:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_MODE_CFB)
 505:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( ctx->cipher_info->mode == MBEDTLS_MODE_CFB )
 506:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 507:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if( 0 != ( ret = ctx->cipher_info->base->cfb_func( ctx->cipher_ctx,
 508:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                 ctx->operation, ilen, &ctx->unprocessed_len, ctx->iv,
 509:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                 input, output ) ) )
 510:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         {
 511:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             return( ret );
 512:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         }
 513:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 514:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         *olen = ilen;
 515:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 516:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( 0 );
 517:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 518:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CIPHER_MODE_CFB */
 519:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 520:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_MODE_OFB)
 521:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( ctx->cipher_info->mode == MBEDTLS_MODE_OFB )
 522:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 523:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if( 0 != ( ret = ctx->cipher_info->base->ofb_func( ctx->cipher_ctx,
 524:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                 ilen, &ctx->unprocessed_len, ctx->iv, input, output ) ) )
 525:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         {
 526:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             return( ret );
 527:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         }
 528:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 529:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         *olen = ilen;
 530:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 531:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( 0 );
 532:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 533:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CIPHER_MODE_OFB */
 534:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 535:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_MODE_CTR)
 536:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( ctx->cipher_info->mode == MBEDTLS_MODE_CTR )
 537:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 538:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if( 0 != ( ret = ctx->cipher_info->base->ctr_func( ctx->cipher_ctx,
 539:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                 ilen, &ctx->unprocessed_len, ctx->iv,
 540:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                 ctx->unprocessed_data, input, output ) ) )
 541:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         {
 542:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             return( ret );
 543:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         }
 544:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 545:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         *olen = ilen;
 546:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 547:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( 0 );
 548:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 549:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CIPHER_MODE_CTR */
 550:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 551:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_MODE_XTS)
 552:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( ctx->cipher_info->mode == MBEDTLS_MODE_XTS )
 553:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 554:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if( ctx->unprocessed_len > 0 ) {
 555:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             /* We can only process an entire data unit at a time. */
 556:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             return( MBEDTLS_ERR_CIPHER_FEATURE_UNAVAILABLE );
 557:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         }
 558:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 559:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         ret = ctx->cipher_info->base->xts_func( ctx->cipher_ctx,
 560:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                 ctx->operation, ilen, ctx->iv, input, output );
 561:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if( ret != 0 )
 562:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         {
 563:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             return( ret );
 564:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         }
 565:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 566:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         *olen = ilen;
 567:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 568:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( 0 );
 569:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 570:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CIPHER_MODE_XTS */
 571:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 572:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_MODE_STREAM)
 573:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( ctx->cipher_info->mode == MBEDTLS_MODE_STREAM )
 574:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 575:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if( 0 != ( ret = ctx->cipher_info->base->stream_func( ctx->cipher_ctx,
 576:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                                     ilen, input, output ) ) )
 577:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         {
 578:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             return( ret );
 579:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         }
 580:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 581:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         *olen = ilen;
 582:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 583:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( 0 );
 584:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 585:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CIPHER_MODE_STREAM */
 586:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 587:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     return( MBEDTLS_ERR_CIPHER_FEATURE_UNAVAILABLE );
 588:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
 645              	 .loc 1 588 0
 646 0034 BDE8F040 	 pop {r4,r5,r6,r7,lr}
 647              	.LCFI12:
 648              	 .cfi_remember_state
 649              	 .cfi_restore 14
 650              	 .cfi_restore 7
 651              	 .cfi_restore 6
 652              	 .cfi_restore 5
 653              	 .cfi_restore 4
 654              	 .cfi_def_cfa_offset 0
 655              	.LVL68:
 372:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                     ctx->operation, input, output ) ) )
 656              	 .loc 1 372 0
 657 0038 6047     	 bx ip
 658              	.LVL69:
 659              	.L78:
 660              	.LCFI13:
 661              	 .cfi_restore_state
 399:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 662              	 .loc 1 399 0
 663 003a 69B1     	 cbz r1,.L81
 404:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****        ( ctx->unprocessed_len != 0 || ilen % block_size ) )
 664              	 .loc 1 404 0
 665 003c 9D42     	 cmp r5,r3
 666 003e 0DD1     	 bne .L82
 404:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****        ( ctx->unprocessed_len != 0 || ilen % block_size ) )
 667              	 .loc 1 404 0 is_stmt 0 discriminator 1
 668 0040 E369     	 ldr r3,[r4,#28]
 669              	.LVL70:
 670 0042 002B     	 cmp r3,#0
 671 0044 E2D1     	 bne .L79
 405:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 672              	 .loc 1 405 0 is_stmt 1
 673 0046 B2FBF1F3 	 udiv r3,r2,r1
 674 004a 01FB1322 	 mls r2,r1,r3,r2
 675              	.LVL71:
 676 004e 002A     	 cmp r2,#0
 677 0050 DCD1     	 bne .L79
 678 0052 03E0     	 b .L82
 679              	.LVL72:
 680              	.L80:
 368:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 681              	 .loc 1 368 0
 682 0054 0348     	 ldr r0,.L83+4
 683 0056 F0BD     	 pop {r4,r5,r6,r7,pc}
 684              	.LVL73:
 685              	.L81:
 401:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 686              	 .loc 1 401 0
 687 0058 0348     	 ldr r0,.L83+8
 688 005a F0BD     	 pop {r4,r5,r6,r7,pc}
 689              	.LVL74:
 690              	.L82:
 587:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
 691              	 .loc 1 587 0
 692 005c 0348     	 ldr r0,.L83+12
 693              	 .loc 1 588 0
 694 005e F0BD     	 pop {r4,r5,r6,r7,pc}
 695              	.LVL75:
 696              	.L84:
 697              	 .align 2
 698              	.L83:
 699 0060 009FFFFF 	 .word -24832
 700 0064 809DFFFF 	 .word -25216
 701 0068 809CFFFF 	 .word -25472
 702 006c 809FFFFF 	 .word -24704
 703              	 .cfi_endproc
 704              	.LFE17:
 706              	 .section .text.mbedtls_cipher_finish,"ax",%progbits
 707              	 .align 1
 708              	 .global mbedtls_cipher_finish
 709              	 .thumb
 710              	 .thumb_func
 712              	mbedtls_cipher_finish:
 713              	.LFB18:
 589:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 590:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_MODE_WITH_PADDING)
 591:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_PADDING_PKCS7)
 592:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** /*
 593:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  * PKCS7 (and PKCS5) padding: fill with ll bytes, with ll = padding_len
 594:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  */
 595:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** static void add_pkcs_padding( unsigned char *output, size_t output_len,
 596:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         size_t data_len )
 597:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** {
 598:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     size_t padding_len = output_len - data_len;
 599:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     unsigned char i;
 600:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 601:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     for( i = 0; i < padding_len; i++ )
 602:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         output[data_len + i] = (unsigned char) padding_len;
 603:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
 604:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 605:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** static int get_pkcs_padding( unsigned char *input, size_t input_len,
 606:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         size_t *data_len )
 607:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** {
 608:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     size_t i, pad_idx;
 609:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     unsigned char padding_len, bad = 0;
 610:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 611:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( NULL == input || NULL == data_len )
 612:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 613:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 614:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     padding_len = input[input_len - 1];
 615:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     *data_len = input_len - padding_len;
 616:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 617:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     /* Avoid logical || since it results in a branch */
 618:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     bad |= padding_len > input_len;
 619:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     bad |= padding_len == 0;
 620:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 621:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     /* The number of bytes checked must be independent of padding_len,
 622:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****      * so pick input_len, which is usually 8 or 16 (one block) */
 623:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     pad_idx = input_len - padding_len;
 624:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     for( i = 0; i < input_len; i++ )
 625:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         bad |= ( input[i] ^ padding_len ) * ( i >= pad_idx );
 626:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 627:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     return( MBEDTLS_ERR_CIPHER_INVALID_PADDING * ( bad != 0 ) );
 628:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
 629:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CIPHER_PADDING_PKCS7 */
 630:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 631:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_PADDING_ONE_AND_ZEROS)
 632:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** /*
 633:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  * One and zeros padding: fill with 80 00 ... 00
 634:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  */
 635:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** static void add_one_and_zeros_padding( unsigned char *output,
 636:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                        size_t output_len, size_t data_len )
 637:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** {
 638:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     size_t padding_len = output_len - data_len;
 639:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     unsigned char i = 0;
 640:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 641:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     output[data_len] = 0x80;
 642:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     for( i = 1; i < padding_len; i++ )
 643:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         output[data_len + i] = 0x00;
 644:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
 645:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 646:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** static int get_one_and_zeros_padding( unsigned char *input, size_t input_len,
 647:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                       size_t *data_len )
 648:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** {
 649:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     size_t i;
 650:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     unsigned char done = 0, prev_done, bad;
 651:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 652:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( NULL == input || NULL == data_len )
 653:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 654:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 655:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     bad = 0x80;
 656:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     *data_len = 0;
 657:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     for( i = input_len; i > 0; i-- )
 658:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 659:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         prev_done = done;
 660:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         done |= ( input[i - 1] != 0 );
 661:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         *data_len |= ( i - 1 ) * ( done != prev_done );
 662:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         bad ^= input[i - 1] * ( done != prev_done );
 663:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 664:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 665:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     return( MBEDTLS_ERR_CIPHER_INVALID_PADDING * ( bad != 0 ) );
 666:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 667:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
 668:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CIPHER_PADDING_ONE_AND_ZEROS */
 669:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 670:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_PADDING_ZEROS_AND_LEN)
 671:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** /*
 672:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  * Zeros and len padding: fill with 00 ... 00 ll, where ll is padding length
 673:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  */
 674:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** static void add_zeros_and_len_padding( unsigned char *output,
 675:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                        size_t output_len, size_t data_len )
 676:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** {
 677:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     size_t padding_len = output_len - data_len;
 678:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     unsigned char i = 0;
 679:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 680:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     for( i = 1; i < padding_len; i++ )
 681:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         output[data_len + i - 1] = 0x00;
 682:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     output[output_len - 1] = (unsigned char) padding_len;
 683:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
 684:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 685:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** static int get_zeros_and_len_padding( unsigned char *input, size_t input_len,
 686:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                       size_t *data_len )
 687:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** {
 688:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     size_t i, pad_idx;
 689:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     unsigned char padding_len, bad = 0;
 690:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 691:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( NULL == input || NULL == data_len )
 692:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 693:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 694:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     padding_len = input[input_len - 1];
 695:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     *data_len = input_len - padding_len;
 696:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 697:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     /* Avoid logical || since it results in a branch */
 698:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     bad |= padding_len > input_len;
 699:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     bad |= padding_len == 0;
 700:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 701:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     /* The number of bytes checked must be independent of padding_len */
 702:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     pad_idx = input_len - padding_len;
 703:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     for( i = 0; i < input_len - 1; i++ )
 704:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         bad |= input[i] * ( i >= pad_idx );
 705:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 706:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     return( MBEDTLS_ERR_CIPHER_INVALID_PADDING * ( bad != 0 ) );
 707:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
 708:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CIPHER_PADDING_ZEROS_AND_LEN */
 709:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 710:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_PADDING_ZEROS)
 711:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** /*
 712:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  * Zero padding: fill with 00 ... 00
 713:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  */
 714:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** static void add_zeros_padding( unsigned char *output,
 715:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                size_t output_len, size_t data_len )
 716:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** {
 717:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     size_t i;
 718:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 719:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     for( i = data_len; i < output_len; i++ )
 720:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         output[i] = 0x00;
 721:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
 722:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 723:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** static int get_zeros_padding( unsigned char *input, size_t input_len,
 724:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                               size_t *data_len )
 725:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** {
 726:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     size_t i;
 727:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     unsigned char done = 0, prev_done;
 728:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 729:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( NULL == input || NULL == data_len )
 730:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 731:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 732:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     *data_len = 0;
 733:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     for( i = input_len; i > 0; i-- )
 734:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 735:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         prev_done = done;
 736:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         done |= ( input[i-1] != 0 );
 737:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         *data_len |= i * ( done != prev_done );
 738:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 739:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 740:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     return( 0 );
 741:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
 742:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CIPHER_PADDING_ZEROS */
 743:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 744:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** /*
 745:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  * No padding: don't pad :)
 746:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  *
 747:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  * There is no add_padding function (check for NULL in mbedtls_cipher_finish)
 748:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  * but a trivial get_padding function
 749:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  */
 750:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** static int get_no_padding( unsigned char *input, size_t input_len,
 751:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                               size_t *data_len )
 752:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** {
 753:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( NULL == input || NULL == data_len )
 754:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 755:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 756:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     *data_len = input_len;
 757:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 758:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     return( 0 );
 759:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
 760:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CIPHER_MODE_WITH_PADDING */
 761:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 762:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** int mbedtls_cipher_finish( mbedtls_cipher_context_t *ctx,
 763:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                    unsigned char *output, size_t *olen )
 764:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** {
 714              	 .loc 1 764 0
 715              	 .cfi_startproc
 716              	 
 717              	 
 718              	.LVL76:
 765:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( ctx != NULL );
 766:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( output != NULL );
 767:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( olen != NULL );
 768:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( ctx->cipher_info == NULL )
 719              	 .loc 1 768 0
 720 0000 0168     	 ldr r1,[r0]
 721              	.LVL77:
 764:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( ctx != NULL );
 722              	 .loc 1 764 0
 723 0002 10B5     	 push {r4,lr}
 724              	.LCFI14:
 725              	 .cfi_def_cfa_offset 8
 726              	 .cfi_offset 4,-8
 727              	 .cfi_offset 14,-4
 764:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( ctx != NULL );
 728              	 .loc 1 764 0
 729 0004 0446     	 mov r4,r0
 730              	 .loc 1 768 0
 731 0006 A1B1     	 cbz r1,.L87
 769:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 770:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 771:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     *olen = 0;
 772:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 773:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( MBEDTLS_MODE_CFB == ctx->cipher_info->mode ||
 732              	 .loc 1 773 0
 733 0008 4B78     	 ldrb r3,[r1,#1]
 771:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 734              	 .loc 1 771 0
 735 000a 0020     	 movs r0,#0
 736              	.LVL78:
 737 000c 1060     	 str r0,[r2]
 738              	 .loc 1 773 0
 739 000e DA1E     	 subs r2,r3,#3
 740              	.LVL79:
 741 0010 042A     	 cmp r2,#4
 742 0012 11D9     	 bls .L86
 774:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         MBEDTLS_MODE_OFB == ctx->cipher_info->mode ||
 775:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         MBEDTLS_MODE_CTR == ctx->cipher_info->mode ||
 776:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         MBEDTLS_MODE_GCM == ctx->cipher_info->mode ||
 743              	 .loc 1 776 0
 744 0014 092B     	 cmp r3,#9
 745 0016 0FD0     	 beq .L86
 777:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         MBEDTLS_MODE_XTS == ctx->cipher_info->mode ||
 778:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         MBEDTLS_MODE_STREAM == ctx->cipher_info->mode )
 779:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 780:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( 0 );
 781:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 782:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 783:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if ( ( MBEDTLS_CIPHER_CHACHA20          == ctx->cipher_info->type ) ||
 746              	 .loc 1 783 0
 747 0018 0A78     	 ldrb r2,[r1]
 748 001a 483A     	 subs r2,r2,#72
 749 001c 012A     	 cmp r2,#1
 750 001e 0BD9     	 bls .L86
 784:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****          ( MBEDTLS_CIPHER_CHACHA20_POLY1305 == ctx->cipher_info->type ) )
 785:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 786:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( 0 );
 787:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 788:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 789:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( MBEDTLS_MODE_ECB == ctx->cipher_info->mode )
 751              	 .loc 1 789 0
 752 0020 012B     	 cmp r3,#1
 753 0022 08D1     	 bne .L91
 790:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 791:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if( ctx->unprocessed_len != 0 )
 754              	 .loc 1 791 0
 755 0024 E369     	 ldr r3,[r4,#28]
 756 0026 8342     	 cmp r3,r0
 792:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             return( MBEDTLS_ERR_CIPHER_FULL_BLOCK_EXPECTED );
 793:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 794:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( 0 );
 757              	 .loc 1 794 0
 758 0028 A0F5C540 	 sub r0,r0,#25216
 759 002c 08BF     	 it eq
 760 002e 0020     	 moveq r0,#0
 761 0030 10BD     	 pop {r4,pc}
 762              	.LVL80:
 763              	.L87:
 769:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 764              	 .loc 1 769 0
 765 0032 0248     	 ldr r0,.L93
 766              	.LVL81:
 767 0034 10BD     	 pop {r4,pc}
 768              	.LVL82:
 769              	.L91:
 795:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 796:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 797:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_MODE_CBC)
 798:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( MBEDTLS_MODE_CBC == ctx->cipher_info->mode )
 799:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 800:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         int ret = 0;
 801:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 802:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if( MBEDTLS_ENCRYPT == ctx->operation )
 803:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         {
 804:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             /* check for 'no padding' mode */
 805:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             if( NULL == ctx->add_padding )
 806:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             {
 807:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                 if( 0 != ctx->unprocessed_len )
 808:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                     return( MBEDTLS_ERR_CIPHER_FULL_BLOCK_EXPECTED );
 809:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 810:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                 return( 0 );
 811:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             }
 812:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 813:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             ctx->add_padding( ctx->unprocessed_data, mbedtls_cipher_get_iv_size( ctx ),
 814:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                     ctx->unprocessed_len );
 815:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         }
 816:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         else if( mbedtls_cipher_get_block_size( ctx ) != ctx->unprocessed_len )
 817:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         {
 818:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             /*
 819:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****              * For decrypt operations, expect a full block,
 820:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****              * or an empty block if no padding
 821:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****              */
 822:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             if( NULL == ctx->add_padding && 0 == ctx->unprocessed_len )
 823:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                 return( 0 );
 824:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 825:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             return( MBEDTLS_ERR_CIPHER_FULL_BLOCK_EXPECTED );
 826:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         }
 827:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 828:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         /* cipher block */
 829:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if( 0 != ( ret = ctx->cipher_info->base->cbc_func( ctx->cipher_ctx,
 830:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                 ctx->operation, mbedtls_cipher_get_block_size( ctx ), ctx->iv,
 831:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                 ctx->unprocessed_data, output ) ) )
 832:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         {
 833:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             return( ret );
 834:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         }
 835:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 836:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         /* Set output size for decryption */
 837:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if( MBEDTLS_DECRYPT == ctx->operation )
 838:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             return( ctx->get_padding( output, mbedtls_cipher_get_block_size( ctx ),
 839:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                       olen ) );
 840:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 841:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         /* Set output size for encryption */
 842:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         *olen = mbedtls_cipher_get_block_size( ctx );
 843:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( 0 );
 844:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 845:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #else
 846:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     ((void) output);
 847:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CIPHER_MODE_CBC */
 848:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 849:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     return( MBEDTLS_ERR_CIPHER_FEATURE_UNAVAILABLE );
 770              	 .loc 1 849 0
 771 0036 0248     	 ldr r0,.L93+4
 772              	.L86:
 850:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
 773              	 .loc 1 850 0
 774 0038 10BD     	 pop {r4,pc}
 775              	.LVL83:
 776              	.L94:
 777 003a 00BF     	 .align 2
 778              	.L93:
 779 003c 009FFFFF 	 .word -24832
 780 0040 809FFFFF 	 .word -24704
 781              	 .cfi_endproc
 782              	.LFE18:
 784              	 .section .text.mbedtls_cipher_crypt,"ax",%progbits
 785              	 .align 1
 786              	 .global mbedtls_cipher_crypt
 787              	 .thumb
 788              	 .thumb_func
 790              	mbedtls_cipher_crypt:
 791              	.LFB19:
 851:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 852:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_MODE_WITH_PADDING)
 853:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** int mbedtls_cipher_set_padding_mode( mbedtls_cipher_context_t *ctx,
 854:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                      mbedtls_cipher_padding_t mode )
 855:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** {
 856:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( ctx != NULL );
 857:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 858:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( NULL == ctx->cipher_info || MBEDTLS_MODE_CBC != ctx->cipher_info->mode )
 859:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 860:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 861:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 862:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 863:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     switch( mode )
 864:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 865:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_PADDING_PKCS7)
 866:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     case MBEDTLS_PADDING_PKCS7:
 867:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         ctx->add_padding = add_pkcs_padding;
 868:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         ctx->get_padding = get_pkcs_padding;
 869:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         break;
 870:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif
 871:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_PADDING_ONE_AND_ZEROS)
 872:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     case MBEDTLS_PADDING_ONE_AND_ZEROS:
 873:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         ctx->add_padding = add_one_and_zeros_padding;
 874:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         ctx->get_padding = get_one_and_zeros_padding;
 875:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         break;
 876:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif
 877:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_PADDING_ZEROS_AND_LEN)
 878:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     case MBEDTLS_PADDING_ZEROS_AND_LEN:
 879:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         ctx->add_padding = add_zeros_and_len_padding;
 880:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         ctx->get_padding = get_zeros_and_len_padding;
 881:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         break;
 882:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif
 883:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_PADDING_ZEROS)
 884:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     case MBEDTLS_PADDING_ZEROS:
 885:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         ctx->add_padding = add_zeros_padding;
 886:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         ctx->get_padding = get_zeros_padding;
 887:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         break;
 888:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif
 889:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     case MBEDTLS_PADDING_NONE:
 890:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         ctx->add_padding = NULL;
 891:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         ctx->get_padding = get_no_padding;
 892:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         break;
 893:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 894:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     default:
 895:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_FEATURE_UNAVAILABLE );
 896:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 897:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 898:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     return( 0 );
 899:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
 900:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CIPHER_MODE_WITH_PADDING */
 901:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 902:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_GCM_C) || defined(MBEDTLS_CHACHAPOLY_C)
 903:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** int mbedtls_cipher_write_tag( mbedtls_cipher_context_t *ctx,
 904:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                       unsigned char *tag, size_t tag_len )
 905:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** {
 906:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( ctx != NULL );
 907:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( tag_len == 0 || tag != NULL );
 908:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( ctx->cipher_info == NULL )
 909:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 910:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 911:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( MBEDTLS_ENCRYPT != ctx->operation )
 912:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 913:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 914:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_GCM_C)
 915:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( MBEDTLS_MODE_GCM == ctx->cipher_info->mode )
 916:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( mbedtls_gcm_finish( (mbedtls_gcm_context *) ctx->cipher_ctx,
 917:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                     tag, tag_len ) );
 918:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif
 919:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 920:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CHACHAPOLY_C)
 921:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if ( MBEDTLS_CIPHER_CHACHA20_POLY1305 == ctx->cipher_info->type )
 922:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 923:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         /* Don't allow truncated MAC for Poly1305 */
 924:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if ( tag_len != 16U )
 925:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 926:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 927:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( mbedtls_chachapoly_finish( (mbedtls_chachapoly_context*) ctx->cipher_ctx,
 928:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                            tag ) );
 929:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 930:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif
 931:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 932:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     return( 0 );
 933:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
 934:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 935:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** int mbedtls_cipher_check_tag( mbedtls_cipher_context_t *ctx,
 936:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                       const unsigned char *tag, size_t tag_len )
 937:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** {
 938:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     unsigned char check_tag[16];
 939:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     int ret;
 940:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 941:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( ctx != NULL );
 942:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( tag_len == 0 || tag != NULL );
 943:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( ctx->cipher_info == NULL )
 944:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 945:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 946:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( MBEDTLS_DECRYPT != ctx->operation )
 947:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 948:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 949:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 950:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 951:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_GCM_C)
 952:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( MBEDTLS_MODE_GCM == ctx->cipher_info->mode )
 953:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 954:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if( tag_len > sizeof( check_tag ) )
 955:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 956:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 957:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if( 0 != ( ret = mbedtls_gcm_finish( (mbedtls_gcm_context *) ctx->cipher_ctx,
 958:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                      check_tag, tag_len ) ) )
 959:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         {
 960:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             return( ret );
 961:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         }
 962:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 963:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         /* Check the tag in "constant-time" */
 964:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if( mbedtls_constant_time_memcmp( tag, check_tag, tag_len ) != 0 )
 965:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             return( MBEDTLS_ERR_CIPHER_AUTH_FAILED );
 966:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 967:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( 0 );
 968:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 969:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif /* MBEDTLS_GCM_C */
 970:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 971:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CHACHAPOLY_C)
 972:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if ( MBEDTLS_CIPHER_CHACHA20_POLY1305 == ctx->cipher_info->type )
 973:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
 974:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         /* Don't allow truncated MAC for Poly1305 */
 975:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if ( tag_len != sizeof( check_tag ) )
 976:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 977:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 978:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         ret = mbedtls_chachapoly_finish( (mbedtls_chachapoly_context*) ctx->cipher_ctx,
 979:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                                      check_tag );
 980:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if ( ret != 0 )
 981:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         {
 982:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             return( ret );
 983:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         }
 984:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 985:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         /* Check the tag in "constant-time" */
 986:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if( mbedtls_constant_time_memcmp( tag, check_tag, tag_len ) != 0 )
 987:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             return( MBEDTLS_ERR_CIPHER_AUTH_FAILED );
 988:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 989:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( 0 );
 990:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
 991:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CHACHAPOLY_C */
 992:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 993:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     return( 0 );
 994:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
 995:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif /* MBEDTLS_GCM_C || MBEDTLS_CHACHAPOLY_C */
 996:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 997:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** /*
 998:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  * Packet-oriented wrapper for non-AEAD modes
 999:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  */
1000:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** int mbedtls_cipher_crypt( mbedtls_cipher_context_t *ctx,
1001:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                   const unsigned char *iv, size_t iv_len,
1002:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                   const unsigned char *input, size_t ilen,
1003:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                   unsigned char *output, size_t *olen )
1004:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** {
 792              	 .loc 1 1004 0
 793              	 .cfi_startproc
 794              	 
 795              	 
 796              	.LVL84:
 797 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 798              	.LCFI15:
 799              	 .cfi_def_cfa_offset 20
 800              	 .cfi_offset 4,-20
 801              	 .cfi_offset 5,-16
 802              	 .cfi_offset 6,-12
 803              	 .cfi_offset 7,-8
 804              	 .cfi_offset 14,-4
 805 0002 85B0     	 sub sp,sp,#20
 806              	.LCFI16:
 807              	 .cfi_def_cfa_offset 40
 808              	 .loc 1 1004 0
 809 0004 0546     	 mov r5,r0
 810 0006 1F46     	 mov r7,r3
 811 0008 0B9E     	 ldr r6,[sp,#44]
 812 000a 0C9C     	 ldr r4,[sp,#48]
1005:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     int ret;
1006:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     size_t finish_olen;
1007:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
1008:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( ctx != NULL );
1009:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( iv_len == 0 || iv != NULL );
1010:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( ilen == 0 || input != NULL );
1011:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( output != NULL );
1012:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( olen != NULL );
1013:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
1014:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( ( ret = mbedtls_cipher_set_iv( ctx, iv, iv_len ) ) != 0 )
 813              	 .loc 1 1014 0
 814 000c FFF7FEFF 	 bl mbedtls_cipher_set_iv
 815              	.LVL85:
 816 0010 B8B9     	 cbnz r0,.L96
 817              	.LVL86:
 818              	.LBB8:
 819              	.LBB9:
 299:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 820              	 .loc 1 299 0
 821 0012 2B68     	 ldr r3,[r5]
 822 0014 A3B1     	 cbz r3,.L98
 302:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 823              	 .loc 1 302 0
 824 0016 E861     	 str r0,[r5,#28]
 825              	.LVL87:
 826              	.LBE9:
 827              	.LBE8:
1015:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( ret );
1016:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
1017:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( ( ret = mbedtls_cipher_reset( ctx ) ) != 0 )
1018:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( ret );
1019:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
1020:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( ( ret = mbedtls_cipher_update( ctx, input, ilen, output, olen ) ) != 0 )
 828              	 .loc 1 1020 0
 829 0018 0094     	 str r4,[sp]
 830 001a 2846     	 mov r0,r5
 831 001c 3946     	 mov r1,r7
 832 001e 0A9A     	 ldr r2,[sp,#40]
 833 0020 3346     	 mov r3,r6
 834 0022 FFF7FEFF 	 bl mbedtls_cipher_update
 835              	.LVL88:
 836 0026 60B9     	 cbnz r0,.L96
1021:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( ret );
1022:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
1023:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( ( ret = mbedtls_cipher_finish( ctx, output + *olen, &finish_olen ) ) != 0 )
 837              	 .loc 1 1023 0
 838 0028 2168     	 ldr r1,[r4]
 839 002a 2846     	 mov r0,r5
 840              	.LVL89:
 841 002c 3144     	 add r1,r1,r6
 842 002e 03AA     	 add r2,sp,#12
 843 0030 FFF7FEFF 	 bl mbedtls_cipher_finish
 844              	.LVL90:
 845 0034 28B9     	 cbnz r0,.L96
1024:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( ret );
1025:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
1026:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     *olen += finish_olen;
 846              	 .loc 1 1026 0
 847 0036 2268     	 ldr r2,[r4]
 848 0038 039B     	 ldr r3,[sp,#12]
 849 003a 1344     	 add r3,r3,r2
 850 003c 2360     	 str r3,[r4]
1027:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
1028:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     return( 0 );
 851              	 .loc 1 1028 0
 852 003e 00E0     	 b .L96
 853              	.L98:
 854              	.LBB11:
 855              	.LBB10:
 300:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
 856              	 .loc 1 300 0
 857 0040 0148     	 ldr r0,.L101
 858              	.LVL91:
 859              	.L96:
 860              	.LBE10:
 861              	.LBE11:
1029:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
 862              	 .loc 1 1029 0
 863 0042 05B0     	 add sp,sp,#20
 864              	.LCFI17:
 865              	 .cfi_def_cfa_offset 20
 866              	 
 867 0044 F0BD     	 pop {r4,r5,r6,r7,pc}
 868              	.LVL92:
 869              	.L102:
 870 0046 00BF     	 .align 2
 871              	.L101:
 872 0048 009FFFFF 	 .word -24832
 873              	 .cfi_endproc
 874              	.LFE19:
 876              	 .section .text.mbedtls_cipher_auth_encrypt,"ax",%progbits
 877              	 .align 1
 878              	 .global mbedtls_cipher_auth_encrypt
 879              	 .thumb
 880              	 .thumb_func
 882              	mbedtls_cipher_auth_encrypt:
 883              	.LFB20:
1030:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
1031:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_MODE_AEAD)
1032:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** /*
1033:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  * Packet-oriented encryption for AEAD modes
1034:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  */
1035:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** int mbedtls_cipher_auth_encrypt( mbedtls_cipher_context_t *ctx,
1036:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                          const unsigned char *iv, size_t iv_len,
1037:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                          const unsigned char *ad, size_t ad_len,
1038:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                          const unsigned char *input, size_t ilen,
1039:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                          unsigned char *output, size_t *olen,
1040:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                          unsigned char *tag, size_t tag_len )
1041:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** {
 884              	 .loc 1 1041 0
 885              	 .cfi_startproc
 886              	 
 887              	 
 888              	.LVL93:
 889 0000 2DE9F047 	 push {r4,r5,r6,r7,r8,r9,r10,lr}
 890              	.LCFI18:
 891              	 .cfi_def_cfa_offset 32
 892              	 .cfi_offset 4,-32
 893              	 .cfi_offset 5,-28
 894              	 .cfi_offset 6,-24
 895              	 .cfi_offset 7,-20
 896              	 .cfi_offset 8,-16
 897              	 .cfi_offset 9,-12
 898              	 .cfi_offset 10,-8
 899              	 .cfi_offset 14,-4
 900              	 .loc 1 1041 0
 901 0004 9C46     	 mov ip,r3
1042:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( ctx != NULL );
1043:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( iv != NULL );
1044:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( ad_len == 0 || ad != NULL );
1045:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( ilen == 0 || input != NULL );
1046:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( output != NULL );
1047:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( olen != NULL );
1048:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( tag_len == 0 || tag != NULL );
1049:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
1050:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_GCM_C)
1051:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( MBEDTLS_MODE_GCM == ctx->cipher_info->mode )
1052:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
1053:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         *olen = ilen;
1054:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( mbedtls_gcm_crypt_and_tag( ctx->cipher_ctx, MBEDTLS_GCM_ENCRYPT, ilen,
1055:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                    iv, iv_len, ad, ad_len, input, output,
1056:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                    tag_len, tag ) );
1057:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
1058:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif /* MBEDTLS_GCM_C */
1059:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CCM_C)
1060:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( MBEDTLS_MODE_CCM == ctx->cipher_info->mode )
 902              	 .loc 1 1060 0
 903 0006 0368     	 ldr r3,[r0]
 904              	.LVL94:
1041:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( ctx != NULL );
 905              	 .loc 1 1041 0
 906 0008 DDF820E0 	 ldr lr,[sp,#32]
 907              	 .loc 1 1060 0
 908 000c 93F80190 	 ldrb r9,[r3,#1]
1041:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( ctx != NULL );
 909              	 .loc 1 1041 0
 910 0010 DDF824A0 	 ldr r10,[sp,#36]
 911 0014 0D9E     	 ldr r6,[sp,#52]
 912 0016 0D46     	 mov r5,r1
 913              	 .loc 1 1060 0
 914 0018 B9F1080F 	 cmp r9,#8
1041:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( ctx != NULL );
 915              	 .loc 1 1041 0
 916 001c 0AA9     	 add r1,sp,#40
 917              	.LVL95:
 918 001e 1446     	 mov r4,r2
 919 0020 91E88201 	 ldmia r1,{r1,r7,r8}
 920              	.LVL96:
 921 0024 0E9A     	 ldr r2,[sp,#56]
 922              	.LVL97:
 923              	 .loc 1 1060 0
 924 0026 10D1     	 bne .L104
1061:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
1062:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         *olen = ilen;
 925              	 .loc 1 1062 0
 926 0028 C8F80010 	 str r1,[r8]
1063:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( mbedtls_ccm_encrypt_and_tag( ctx->cipher_ctx, ilen,
 927              	 .loc 1 1063 0
 928 002c 0D92     	 str r2,[sp,#52]
 929              	.LVL98:
 930 002e CDF820C0 	 str ip,[sp,#32]
 931              	.LVL99:
 932 0032 CDF824E0 	 str lr,[sp,#36]
 933              	.LVL100:
 934 0036 CDF828A0 	 str r10,[sp,#40]
 935              	.LVL101:
 936 003a 0C96     	 str r6,[sp,#48]
 937              	.LVL102:
 938 003c 2A46     	 mov r2,r5
 939 003e 2346     	 mov r3,r4
 940 0040 406B     	 ldr r0,[r0,#52]
 941              	.LVL103:
1064:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                      iv, iv_len, ad, ad_len, input, output,
1065:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                      tag, tag_len ) );
1066:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
1067:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CCM_C */
1068:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CHACHAPOLY_C)
1069:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if ( MBEDTLS_CIPHER_CHACHA20_POLY1305 == ctx->cipher_info->type )
1070:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
1071:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         /* ChachaPoly has fixed length nonce and MAC (tag) */
1072:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if ( ( iv_len != ctx->cipher_info->iv_size ) ||
1073:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****              ( tag_len != 16U ) )
1074:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         {
1075:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
1076:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         }
1077:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
1078:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         *olen = ilen;
1079:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( mbedtls_chachapoly_encrypt_and_tag( ctx->cipher_ctx,
1080:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                 ilen, iv, ad, ad_len, input, output, tag ) );
1081:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
1082:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CHACHAPOLY_C */
1083:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
1084:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     return( MBEDTLS_ERR_CIPHER_FEATURE_UNAVAILABLE );
1085:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
 942              	 .loc 1 1085 0
 943 0042 BDE8F047 	 pop {r4,r5,r6,r7,r8,r9,r10,lr}
 944              	.LCFI19:
 945              	 .cfi_remember_state
 946              	 .cfi_restore 14
 947              	 .cfi_restore 10
 948              	 .cfi_restore 9
 949              	 .cfi_restore 8
 950              	 .cfi_restore 7
 951              	 .cfi_restore 6
 952              	 .cfi_restore 5
 953              	 .cfi_restore 4
 954              	 .cfi_def_cfa_offset 0
 955              	.LVL104:
1063:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( mbedtls_ccm_encrypt_and_tag( ctx->cipher_ctx, ilen,
 956              	 .loc 1 1063 0
 957 0046 FFF7FEBF 	 b mbedtls_ccm_encrypt_and_tag
 958              	.LVL105:
 959              	.L104:
 960              	.LCFI20:
 961              	 .cfi_restore_state
 962              	 .loc 1 1085 0
 963 004a 0148     	 ldr r0,.L105
 964              	.LVL106:
 965 004c BDE8F087 	 pop {r4,r5,r6,r7,r8,r9,r10,pc}
 966              	.LVL107:
 967              	.L106:
 968              	 .align 2
 969              	.L105:
 970 0050 809FFFFF 	 .word -24704
 971              	 .cfi_endproc
 972              	.LFE20:
 974              	 .section .text.mbedtls_cipher_auth_decrypt,"ax",%progbits
 975              	 .align 1
 976              	 .global mbedtls_cipher_auth_decrypt
 977              	 .thumb
 978              	 .thumb_func
 980              	mbedtls_cipher_auth_decrypt:
 981              	.LFB21:
1086:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
1087:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** /*
1088:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  * Packet-oriented decryption for AEAD modes
1089:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****  */
1090:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** int mbedtls_cipher_auth_decrypt( mbedtls_cipher_context_t *ctx,
1091:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                          const unsigned char *iv, size_t iv_len,
1092:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                          const unsigned char *ad, size_t ad_len,
1093:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                          const unsigned char *input, size_t ilen,
1094:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                          unsigned char *output, size_t *olen,
1095:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                          const unsigned char *tag, size_t tag_len )
1096:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** {
 982              	 .loc 1 1096 0
 983              	 .cfi_startproc
 984              	 
 985              	 
 986              	.LVL108:
 987 0000 30B5     	 push {r4,r5,lr}
 988              	.LCFI21:
 989              	 .cfi_def_cfa_offset 12
 990              	 .cfi_offset 4,-12
 991              	 .cfi_offset 5,-8
 992              	 .cfi_offset 14,-4
 993 0002 1446     	 mov r4,r2
1097:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( ctx != NULL );
1098:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( iv != NULL );
1099:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( ad_len == 0 || ad != NULL );
1100:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( ilen == 0 || input != NULL );
1101:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( output != NULL );
1102:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( olen != NULL );
1103:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( tag_len == 0 || tag != NULL );
1104:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
1105:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_GCM_C)
1106:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( MBEDTLS_MODE_GCM == ctx->cipher_info->mode )
1107:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
1108:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         int ret;
1109:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
1110:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         *olen = ilen;
1111:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         ret = mbedtls_gcm_auth_decrypt( ctx->cipher_ctx, ilen,
1112:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                 iv, iv_len, ad, ad_len,
1113:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                 tag, tag_len, input, output );
1114:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
1115:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if( ret == MBEDTLS_ERR_GCM_AUTH_FAILED )
1116:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             ret = MBEDTLS_ERR_CIPHER_AUTH_FAILED;
1117:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
1118:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( ret );
1119:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
1120:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif /* MBEDTLS_GCM_C */
1121:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CCM_C)
1122:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if( MBEDTLS_MODE_CCM == ctx->cipher_info->mode )
 994              	 .loc 1 1122 0
 995 0004 0268     	 ldr r2,[r0]
 996              	.LVL109:
 997 0006 5278     	 ldrb r2,[r2,#1]
1096:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( ctx != NULL );
 998              	 .loc 1 1096 0
 999 0008 87B0     	 sub sp,sp,#28
 1000              	.LCFI22:
 1001              	 .cfi_def_cfa_offset 40
 1002              	 .loc 1 1122 0
 1003 000a 082A     	 cmp r2,#8
1096:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     CIPHER_VALIDATE_RET( ctx != NULL );
 1004              	 .loc 1 1096 0
 1005 000c 0D46     	 mov r5,r1
 1006 000e 0C99     	 ldr r1,[sp,#48]
 1007              	.LVL110:
 1008              	 .loc 1 1122 0
 1009 0010 17D1     	 bne .L109
 1010              	.LBB12:
1123:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
1124:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         int ret;
1125:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
1126:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         *olen = ilen;
 1011              	 .loc 1 1126 0
 1012 0012 0E9A     	 ldr r2,[sp,#56]
 1013 0014 1160     	 str r1,[r2]
1127:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         ret = mbedtls_ccm_auth_decrypt( ctx->cipher_ctx, ilen,
 1014              	 .loc 1 1127 0
 1015 0016 0093     	 str r3,[sp]
 1016 0018 0A9B     	 ldr r3,[sp,#40]
 1017              	.LVL111:
 1018 001a 0193     	 str r3,[sp,#4]
 1019 001c 0B9B     	 ldr r3,[sp,#44]
 1020 001e 0293     	 str r3,[sp,#8]
 1021 0020 0D9B     	 ldr r3,[sp,#52]
 1022 0022 0393     	 str r3,[sp,#12]
 1023 0024 0F9B     	 ldr r3,[sp,#60]
 1024 0026 0493     	 str r3,[sp,#16]
 1025 0028 109B     	 ldr r3,[sp,#64]
 1026 002a 0593     	 str r3,[sp,#20]
 1027 002c 406B     	 ldr r0,[r0,#52]
 1028              	.LVL112:
 1029 002e 2346     	 mov r3,r4
 1030 0030 2A46     	 mov r2,r5
 1031 0032 FFF7FEFF 	 bl mbedtls_ccm_auth_decrypt
 1032              	.LVL113:
1128:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                 iv, iv_len, ad, ad_len,
1129:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                 input, output, tag, tag_len );
1130:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
1131:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if( ret == MBEDTLS_ERR_CCM_AUTH_FAILED )
1132:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             ret = MBEDTLS_ERR_CIPHER_AUTH_FAILED;
 1033              	 .loc 1 1132 0
 1034 0036 044B     	 ldr r3,.L111
 1035 0038 10F10F0F 	 cmn r0,#15
 1036 003c 08BF     	 it eq
 1037 003e 1846     	 moveq r0,r3
 1038              	.LVL114:
 1039 0040 00E0     	 b .L108
 1040              	.LVL115:
 1041              	.L109:
 1042              	.LBE12:
1133:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
1134:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( ret );
1135:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
1136:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CCM_C */
1137:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CHACHAPOLY_C)
1138:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     if ( MBEDTLS_CIPHER_CHACHA20_POLY1305 == ctx->cipher_info->type )
1139:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     {
1140:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         int ret;
1141:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
1142:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         /* ChachaPoly has fixed length nonce and MAC (tag) */
1143:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if ( ( iv_len != ctx->cipher_info->iv_size ) ||
1144:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****              ( tag_len != 16U ) )
1145:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         {
1146:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
1147:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         }
1148:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
1149:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         *olen = ilen;
1150:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         ret = mbedtls_chachapoly_auth_decrypt( ctx->cipher_ctx, ilen,
1151:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****                                 iv, ad, ad_len, tag, input, output );
1152:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
1153:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         if( ret == MBEDTLS_ERR_CHACHAPOLY_AUTH_FAILED )
1154:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****             ret = MBEDTLS_ERR_CIPHER_AUTH_FAILED;
1155:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
1156:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****         return( ret );
1157:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     }
1158:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CHACHAPOLY_C */
1159:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** 
1160:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c ****     return( MBEDTLS_ERR_CIPHER_FEATURE_UNAVAILABLE );
 1043              	 .loc 1 1160 0
 1044 0042 0248     	 ldr r0,.L111+4
 1045              	.LVL116:
 1046              	.L108:
1161:C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/library\cipher.c **** }
 1047              	 .loc 1 1161 0
 1048 0044 07B0     	 add sp,sp,#28
 1049              	.LCFI23:
 1050              	 .cfi_def_cfa_offset 12
 1051              	 
 1052 0046 30BD     	 pop {r4,r5,pc}
 1053              	.LVL117:
 1054              	.L112:
 1055              	 .align 2
 1056              	.L111:
 1057 0048 009DFFFF 	 .word -25344
 1058 004c 809FFFFF 	 .word -24704
 1059              	 .cfi_endproc
 1060              	.LFE21:
 1062              	 .section .bss.supported_init,"aw",%nobits
 1063              	 .align 2
 1064              	 .set .LANCHOR0,.+0
 1067              	supported_init:
 1068 0000 00000000 	 .space 4
 1069              	 .text
 1070              	.Letext0:
 1071              	 .file 3 "c:\\users\\yushev\\dave_4-4-2_32bit_2018-02-23\\dave-ide-4.4.2-32bit\\eclipse\\arm-gcc-49\\lib\\gcc\\arm-none-eabi\\4.9.3\\include\\stddef.h"
 1072              	 .file 4 "C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls/cipher_internal.h"
 1073              	 .file 5 "C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls/ccm.h"
 1074              	 .file 6 "c:\\users\\yushev\\dave_4-4-2_32bit_2018-02-23\\dave-ide-4.4.2-32bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\string.h"
 1075              	 .file 7 "C:/Users/Yushev/git/optiga-trust-qi/externals/mbedtls/include/mbedtls/platform_util.h"
DEFINED SYMBOLS
                            *ABS*:00000000 cipher.c
    {standard input}:20     .text.mbedtls_cipher_list:00000000 $t
    {standard input}:25     .text.mbedtls_cipher_list:00000000 mbedtls_cipher_list
    {standard input}:74     .text.mbedtls_cipher_list:00000024 $d
    {standard input}:81     .text.mbedtls_cipher_info_from_type:00000000 $t
    {standard input}:86     .text.mbedtls_cipher_info_from_type:00000000 mbedtls_cipher_info_from_type
    {standard input}:115    .text.mbedtls_cipher_info_from_type:00000018 $d
    {standard input}:120    .text.mbedtls_cipher_info_from_string:00000000 $t
    {standard input}:125    .text.mbedtls_cipher_info_from_string:00000000 mbedtls_cipher_info_from_string
    {standard input}:171    .text.mbedtls_cipher_info_from_string:00000020 $d
    {standard input}:176    .text.mbedtls_cipher_info_from_values:00000000 $t
    {standard input}:181    .text.mbedtls_cipher_info_from_values:00000000 mbedtls_cipher_info_from_values
    {standard input}:228    .text.mbedtls_cipher_info_from_values:00000024 $d
    {standard input}:233    .text.mbedtls_cipher_init:00000000 $t
    {standard input}:238    .text.mbedtls_cipher_init:00000000 mbedtls_cipher_init
    {standard input}:255    .text.mbedtls_cipher_free:00000000 $t
    {standard input}:260    .text.mbedtls_cipher_free:00000000 mbedtls_cipher_free
    {standard input}:308    .text.mbedtls_cipher_setup:00000000 $t
    {standard input}:313    .text.mbedtls_cipher_setup:00000000 mbedtls_cipher_setup
    {standard input}:366    .text.mbedtls_cipher_setup:00000028 $d
    {standard input}:372    .text.mbedtls_cipher_setkey:00000000 $t
    {standard input}:377    .text.mbedtls_cipher_setkey:00000000 mbedtls_cipher_setkey
    {standard input}:453    .text.mbedtls_cipher_setkey:0000003c $d
    {standard input}:458    .text.mbedtls_cipher_set_iv:00000000 $t
    {standard input}:463    .text.mbedtls_cipher_set_iv:00000000 mbedtls_cipher_set_iv
    {standard input}:532    .text.mbedtls_cipher_set_iv:00000038 $d
    {standard input}:538    .text.mbedtls_cipher_reset:00000000 $t
    {standard input}:543    .text.mbedtls_cipher_reset:00000000 mbedtls_cipher_reset
    {standard input}:571    .text.mbedtls_cipher_reset:00000010 $d
    {standard input}:576    .text.mbedtls_cipher_update:00000000 $t
    {standard input}:581    .text.mbedtls_cipher_update:00000000 mbedtls_cipher_update
    {standard input}:699    .text.mbedtls_cipher_update:00000060 $d
    {standard input}:707    .text.mbedtls_cipher_finish:00000000 $t
    {standard input}:712    .text.mbedtls_cipher_finish:00000000 mbedtls_cipher_finish
    {standard input}:779    .text.mbedtls_cipher_finish:0000003c $d
    {standard input}:785    .text.mbedtls_cipher_crypt:00000000 $t
    {standard input}:790    .text.mbedtls_cipher_crypt:00000000 mbedtls_cipher_crypt
    {standard input}:872    .text.mbedtls_cipher_crypt:00000048 $d
    {standard input}:877    .text.mbedtls_cipher_auth_encrypt:00000000 $t
    {standard input}:882    .text.mbedtls_cipher_auth_encrypt:00000000 mbedtls_cipher_auth_encrypt
    {standard input}:970    .text.mbedtls_cipher_auth_encrypt:00000050 $d
    {standard input}:975    .text.mbedtls_cipher_auth_decrypt:00000000 $t
    {standard input}:980    .text.mbedtls_cipher_auth_decrypt:00000000 mbedtls_cipher_auth_decrypt
    {standard input}:1057   .text.mbedtls_cipher_auth_decrypt:00000048 $d
    {standard input}:1063   .bss.supported_init:00000000 $d
    {standard input}:1067   .bss.supported_init:00000000 supported_init
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
mbedtls_cipher_definitions
mbedtls_cipher_supported
strcmp
memset
mbedtls_platform_zeroize
memcpy
mbedtls_ccm_encrypt_and_tag
mbedtls_ccm_auth_decrypt
