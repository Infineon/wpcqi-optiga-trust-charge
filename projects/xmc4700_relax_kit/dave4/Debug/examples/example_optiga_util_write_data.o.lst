   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,4
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "example_optiga_util_write_data.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.optiga_util_callback,"ax",%progbits
  20              	 .align 1
  21              	 .thumb
  22              	 .thumb_func
  24              	optiga_util_callback:
  25              	.LFB0:
  26              	 .file 1 "C:/Users/Yushev/git/optiga-trust-qi/examples/optiga/example_optiga_util_write_data.c"
   1:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** /**
   2:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** * \copyright
   3:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** * MIT License
   4:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** *
   5:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** * Copyright (c) 2020 Infineon Technologies AG
   6:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** *
   7:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** * Permission is hereby granted, free of charge, to any person obtaining a copy
   8:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** * of this software and associated documentation files (the "Software"), to deal
   9:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** * in the Software without restriction, including without limitation the rights
  10:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  11:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** * copies of the Software, and to permit persons to whom the Software is
  12:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** * furnished to do so, subject to the following conditions:
  13:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** *
  14:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** * The above copyright notice and this permission notice shall be included in all
  15:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** * copies or substantial portions of the Software.
  16:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** *
  17:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  19:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  20:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  21:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  22:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  23:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** * SOFTWARE
  24:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** *
  25:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** * \endcopyright
  26:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** *
  27:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** * \author Infineon Technologies AG
  28:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** *
  29:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** * \file example_optiga_util_write_data.c
  30:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** *
  31:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** * \brief   This file provides the example for writing data/metadata to OPTIGA using
  32:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** *          #optiga_util_write_data and #optiga_util_write_metadata.
  33:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** *
  34:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** * \ingroup grOptigaExamples
  35:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** *
  36:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** * @{
  37:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** */
  38:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** 
  39:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** #include "optiga/optiga_util.h"
  40:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** #include "optiga_example.h"
  41:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** 
  42:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** /**
  43:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****  * Sample Trust Anchor
  44:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****  */
  45:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** static const uint8_t trust_anchor [] = {
  46:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     //00    01    02    03    04    05    06    07    08    09    0A    0B    0C    0D    0E    0F
  47:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x30, 0x82, 0x02, 0x7E, 0x30, 0x82, 0x02, 0x05, 0xA0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x09, 0x00,
  48:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x9B, 0x0C, 0x24, 0xB4, 0x5E, 0x7D, 0xE3, 0x73, 0x30, 0x0A, 0x06, 0x08, 0x2A, 0x86, 0x48, 0xCE,
  49:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x3D, 0x04, 0x03, 0x02, 0x30, 0x74, 0x31, 0x0B, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13,
  50:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x02, 0x44, 0x45, 0x31, 0x21, 0x30, 0x1F, 0x06, 0x03, 0x55, 0x04, 0x0A, 0x0C, 0x18, 0x49, 0x6E,
  51:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x66, 0x69, 0x6E, 0x65, 0x6F, 0x6E, 0x20, 0x54, 0x65, 0x63, 0x68, 0x6E, 0x6F, 0x6C, 0x6F, 0x67,
  52:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x69, 0x65, 0x73, 0x20, 0x41, 0x47, 0x31, 0x1B, 0x30, 0x19, 0x06, 0x03, 0x55, 0x04, 0x0B, 0x0C,
  53:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x12, 0x4F, 0x50, 0x54, 0x49, 0x47, 0x41, 0x28, 0x54, 0x4D, 0x29, 0x20, 0x54, 0x72, 0x75, 0x73,
  54:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x74, 0x20, 0x58, 0x31, 0x25, 0x30, 0x23, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0C, 0x1C, 0x49, 0x6E,
  55:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x66, 0x69, 0x6E, 0x65, 0x6F, 0x6E, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x53, 0x65, 0x72, 0x76,
  56:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x65, 0x72, 0x20, 0x52, 0x6F, 0x6F, 0x74, 0x20, 0x43, 0x41, 0x30, 0x1E, 0x17, 0x0D, 0x31, 0x36,
  57:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x31, 0x30, 0x31, 0x34, 0x30, 0x33, 0x35, 0x38, 0x33, 0x36, 0x5A, 0x17, 0x0D, 0x34, 0x31, 0x31,
  58:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x30, 0x30, 0x38, 0x30, 0x33, 0x35, 0x38, 0x33, 0x36, 0x5A, 0x30, 0x74, 0x31, 0x0B, 0x30, 0x09,
  59:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x44, 0x45, 0x31, 0x21, 0x30, 0x1F, 0x06, 0x03, 0x55,
  60:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x04, 0x0A, 0x0C, 0x18, 0x49, 0x6E, 0x66, 0x69, 0x6E, 0x65, 0x6F, 0x6E, 0x20, 0x54, 0x65, 0x63,
  61:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x68, 0x6E, 0x6F, 0x6C, 0x6F, 0x67, 0x69, 0x65, 0x73, 0x20, 0x41, 0x47, 0x31, 0x1B, 0x30, 0x19,
  62:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x06, 0x03, 0x55, 0x04, 0x0B, 0x0C, 0x12, 0x4F, 0x50, 0x54, 0x49, 0x47, 0x41, 0x28, 0x54, 0x4D,
  63:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x29, 0x20, 0x54, 0x72, 0x75, 0x73, 0x74, 0x20, 0x58, 0x31, 0x25, 0x30, 0x23, 0x06, 0x03, 0x55,
  64:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x04, 0x03, 0x0C, 0x1C, 0x49, 0x6E, 0x66, 0x69, 0x6E, 0x65, 0x6F, 0x6E, 0x20, 0x54, 0x65, 0x73,
  65:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x74, 0x20, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x20, 0x52, 0x6F, 0x6F, 0x74, 0x20, 0x43, 0x41,
  66:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x30, 0x76, 0x30, 0x10, 0x06, 0x07, 0x2A, 0x86, 0x48, 0xCE, 0x3D, 0x02, 0x01, 0x06, 0x05, 0x2B,
  67:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x81, 0x04, 0x00, 0x22, 0x03, 0x62, 0x00, 0x04, 0x7B, 0x2E, 0xE6, 0xFB, 0xBD, 0x6F, 0x40, 0x0F,
  68:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x41, 0x9F, 0xE5, 0xF0, 0x8C, 0x97, 0x21, 0xB0, 0x07, 0xB5, 0xBB, 0xD2, 0xB8, 0x5A, 0x14, 0x3B,
  69:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x75, 0x54, 0x7E, 0xEA, 0xFE, 0xF2, 0x8D, 0x5A, 0xB8, 0x54, 0xE0, 0xC8, 0xAD, 0xED, 0xF1, 0xD5,
  70:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x8B, 0x97, 0xBA, 0x02, 0x3E, 0xD9, 0x25, 0xE0, 0x00, 0x86, 0x17, 0x35, 0xE6, 0xE6, 0xD9, 0x12,
  71:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x0F, 0x8A, 0x21, 0x1C, 0x62, 0xFA, 0xCE, 0xF6, 0x9E, 0xB1, 0xF8, 0x8C, 0xA3, 0xDC, 0x52, 0x04,
  72:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x83, 0xEB, 0xA0, 0xB3, 0xFA, 0xB0, 0xCA, 0x02, 0x30, 0xB1, 0xFE, 0x53, 0x4E, 0xAD, 0xFB, 0xE0,
  73:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x88, 0x05, 0x86, 0x4E, 0x5E, 0x67, 0xEB, 0x7B, 0xA3, 0x63, 0x30, 0x61, 0x30, 0x1D, 0x06, 0x03,
  74:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x55, 0x1D, 0x0E, 0x04, 0x16, 0x04, 0x14, 0x91, 0x4A, 0x4B, 0x07, 0x58, 0xB2, 0xC6, 0x4B, 0x37,
  75:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0xFD, 0x91, 0x62, 0xD8, 0x8A, 0x17, 0x28, 0xAA, 0x94, 0x18, 0x62, 0x30, 0x1F, 0x06, 0x03, 0x55,
  76:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x1D, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0x91, 0x4A, 0x4B, 0x07, 0x58, 0xB2, 0xC6, 0x4B,
  77:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x37, 0xFD, 0x91, 0x62, 0xD8, 0x8A, 0x17, 0x28, 0xAA, 0x94, 0x18, 0x62, 0x30, 0x0F, 0x06, 0x03,
  78:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x55, 0x1D, 0x13, 0x01, 0x01, 0xFF, 0x04, 0x05, 0x30, 0x03, 0x01, 0x01, 0xFF, 0x30, 0x0E, 0x06,
  79:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x03, 0x55, 0x1D, 0x0F, 0x01, 0x01, 0xFF, 0x04, 0x04, 0x03, 0x02, 0x02, 0x04, 0x30, 0x0A, 0x06,
  80:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x08, 0x2A, 0x86, 0x48, 0xCE, 0x3D, 0x04, 0x03, 0x02, 0x03, 0x67, 0x00, 0x30, 0x64, 0x02, 0x30,
  81:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x20, 0x1C, 0x7A, 0x21, 0x50, 0x50, 0xC9, 0x15, 0x1C, 0xC5, 0x14, 0x8D, 0x46, 0x5C, 0xA6, 0xD3,
  82:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x81, 0xCE, 0x57, 0x06, 0x1A, 0xAE, 0x39, 0x10, 0x27, 0x51, 0x42, 0xEF, 0xCD, 0x64, 0x75, 0x99,
  83:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0xDE, 0x0D, 0x3D, 0x01, 0x47, 0x69, 0xFC, 0x93, 0x6D, 0x99, 0xC7, 0xF0, 0xF8, 0x8C, 0xAA, 0xD1,
  84:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x02, 0x30, 0x68, 0xC3, 0x27, 0xD9, 0x0F, 0x52, 0xAD, 0x3A, 0xA8, 0xDB, 0xF8, 0x53, 0x11, 0x1D,
  85:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0xF1, 0x30, 0x6B, 0x39, 0xF3, 0x3F, 0xEF, 0x65, 0x61, 0xBE, 0xC4, 0xDD, 0x19, 0x11, 0x1E, 0x83,
  86:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0xF9, 0xE8, 0x3F, 0x41, 0x97, 0x45, 0xFC, 0x61, 0xE0, 0x06, 0xD0, 0xE6, 0xF7, 0x5C, 0x9F, 0xE2,
  87:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x57, 0xC2,
  88:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     };
  89:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** 
  90:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** /**
  91:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****  * Sample metadata
  92:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****  */
  93:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** static const uint8_t metadata [] = {
  94:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     //Metadata tag in the data object
  95:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     0x20, 0x05,
  96:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****         //Read tag in the metadata
  97:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****         0xD1, 0x03,
  98:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****             //LcsO < Operation
  99:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****             0xE1 , 0xFB, 0x03,
 100:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** };
 101:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** 
 102:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** /**
 103:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****  * Callback when optiga_util_xxxx operation is completed asynchronously
 104:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****  */
 105:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** static volatile optiga_lib_status_t optiga_lib_status;
 106:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** //lint --e{818} suppress "argument "context" is not used in the sample provided"
 107:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** static void optiga_util_callback(void * context, optiga_lib_status_t return_status)
 108:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** {
  27              	 .loc 1 108 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32              	.LVL0:
 109:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     optiga_lib_status = return_status;
  33              	 .loc 1 109 0
  34 0000 014B     	 ldr r3,.L2
  35 0002 1980     	 strh r1,[r3]
  36 0004 7047     	 bx lr
  37              	.L3:
  38 0006 00BF     	 .align 2
  39              	.L2:
  40 0008 00000000 	 .word .LANCHOR0
  41              	 .cfi_endproc
  42              	.LFE0:
  44              	 .section .text.example_optiga_util_write_data,"ax",%progbits
  45              	 .align 1
  46              	 .global example_optiga_util_write_data
  47              	 .thumb
  48              	 .thumb_func
  50              	example_optiga_util_write_data:
  51              	.LFB1:
 110:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     if (NULL != context)
 111:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     {
 112:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****         // callback to upper layer here
 113:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     }
 114:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** }
 115:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** 
 116:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** /**
 117:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****  * The below example demonstrates write data/metadata functionalities
 118:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****  *
 119:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****  * Example for #optiga_util_write_data and #optiga_util_write_metadata
 120:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****  *
 121:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****  */
 122:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** void example_optiga_util_write_data(void)
 123:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** {
  52              	 .loc 1 123 0
  53              	 .cfi_startproc
  54              	 
  55              	 
  56              	.LVL1:
  57 0000 37B5     	 push {r0,r1,r2,r4,r5,lr}
  58              	.LCFI0:
  59              	 .cfi_def_cfa_offset 24
  60              	 .cfi_offset 4,-12
  61              	 .cfi_offset 5,-8
  62              	 .cfi_offset 14,-4
 124:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     uint16_t optiga_oid;
 125:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     uint16_t offset;
 126:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** 
 127:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     optiga_lib_status_t return_status = !OPTIGA_LIB_SUCCESS;
 128:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     optiga_util_t * me = NULL;
 129:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     OPTIGA_EXAMPLE_LOG_MESSAGE(__FUNCTION__);
  63              	 .loc 1 129 0
  64 0002 2E48     	 ldr r0,.L31
  65 0004 2E49     	 ldr r1,.L31+4
  66 0006 2F4A     	 ldr r2,.L31+8
  67 0008 FFF7FEFF 	 bl optiga_lib_print_message
  68              	.LVL2:
 130:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** 
 131:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     do
 132:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     {
 133:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****         /**
 134:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****          * 1. Create OPTIGA Util Instance
 135:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****          */
 136:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****         me = optiga_util_create(0, optiga_util_callback, NULL);
  69              	 .loc 1 136 0
  70 000c 0020     	 movs r0,#0
  71 000e 2E49     	 ldr r1,.L31+12
  72 0010 0246     	 mov r2,r0
  73 0012 FFF7FEFF 	 bl optiga_util_create
  74              	.LVL3:
 137:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****         if (NULL == me)
  75              	 .loc 1 137 0
  76 0016 0546     	 mov r5,r0
  77 0018 0028     	 cmp r0,#0
  78 001a 4BD0     	 beq .L15
  79              	.LVL4:
 138:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****         {
 139:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****             break;
 140:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****         }
 141:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** 
 142:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****         /**
 143:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****          * Write Trust Anchor to a Trust Anchor object (e.g. E0E8)
 144:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****          * using optiga_util_write_data with no shielded connection protection.
 145:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****          *
 146:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****          * Use Erase and Write (OPTIGA_UTIL_ERASE_AND_WRITE) option,
 147:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****          * to clear the remaining data in the object
 148:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****          */
 149:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****         optiga_oid = 0xE0E8;
 150:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****         offset = 0x00;
 151:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** 
 152:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****         OPTIGA_UTIL_SET_COMMS_PROTECTION_LEVEL(me, OPTIGA_COMMS_NO_PROTECTION);
  80              	 .loc 1 152 0
  81 001c 0121     	 movs r1,#1
  82 001e 0022     	 movs r2,#0
 153:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** 
 154:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****         optiga_lib_status = OPTIGA_LIB_BUSY;
  83              	 .loc 1 154 0
  84 0020 2A4C     	 ldr r4,.L31+16
 152:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** 
  85              	 .loc 1 152 0
  86 0022 FFF7FEFF 	 bl optiga_util_set_comms_params
  87              	.LVL5:
  88              	 .loc 1 154 0
  89 0026 0123     	 movs r3,#1
  90 0028 2380     	 strh r3,[r4]
 155:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****         return_status = optiga_util_write_data(me,
  91              	 .loc 1 155 0
  92 002a 294B     	 ldr r3,.L31+20
  93 002c 0093     	 str r3,[sp]
  94 002e 40F28223 	 movw r3,#642
  95 0032 0193     	 str r3,[sp,#4]
  96 0034 4022     	 movs r2,#64
  97 0036 2846     	 mov r0,r5
  98 0038 4EF2E801 	 movw r1,#57576
  99 003c 0023     	 movs r3,#0
 100 003e FFF7FEFF 	 bl optiga_util_write_data
 101              	.LVL6:
 156:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****                                                optiga_oid,
 157:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****                                                OPTIGA_UTIL_ERASE_AND_WRITE,
 158:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****                                                offset,
 159:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****                                                trust_anchor,
 160:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****                                                sizeof(trust_anchor));
 161:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** 
 162:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****         WAIT_AND_CHECK_STATUS(return_status, optiga_lib_status);
 102              	 .loc 1 162 0
 103 0042 0246     	 mov r2,r0
 104 0044 F8B9     	 cbnz r0,.L14
 105              	.L6:
 106              	 .loc 1 162 0 is_stmt 0 discriminator 1
 107 0046 2288     	 ldrh r2,[r4]
 108 0048 204B     	 ldr r3,.L31+16
 109 004a 92B2     	 uxth r2,r2
 110 004c 012A     	 cmp r2,#1
 111 004e FAD0     	 beq .L6
 112              	 .loc 1 162 0 discriminator 2
 113 0050 1A88     	 ldrh r2,[r3]
 114 0052 92B2     	 uxth r2,r2
 115 0054 0AB1     	 cbz r2,.L7
 116              	 .loc 1 162 0 discriminator 3
 117 0056 1A88     	 ldrh r2,[r3]
 118 0058 13E0     	 b .L29
 119              	.L7:
 163:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** 
 164:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****         /**
 165:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****          *
 166:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****          * Write metadata to Trust Anchor to a Trust Anchor object (e.g. E0E8)
 167:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****          * using optiga_util_write_metadata.
 168:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****          *
 169:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****          * Sample metadata: write "Read" access condition as LcsO < Operational
 170:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****          *
 171:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****          */
 172:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****         optiga_lib_status = OPTIGA_LIB_BUSY;
 120              	 .loc 1 172 0 is_stmt 1
 121 005a 0122     	 movs r2,#1
 122 005c 1A80     	 strh r2,[r3]
 173:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****         return_status = optiga_util_write_metadata(me,
 123              	 .loc 1 173 0
 124 005e 2846     	 mov r0,r5
 125              	.LVL7:
 126 0060 1C4A     	 ldr r2,.L31+24
 127 0062 4EF2E801 	 movw r1,#57576
 128 0066 0723     	 movs r3,#7
 129 0068 FFF7FEFF 	 bl optiga_util_write_metadata
 130              	.LVL8:
 174:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****                                                    0xE0E8,
 175:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****                                                    metadata,
 176:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****                                                    sizeof(metadata));
 177:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** 
 178:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****         WAIT_AND_CHECK_STATUS(return_status, optiga_lib_status);
 131              	 .loc 1 178 0
 132 006c 0246     	 mov r2,r0
 133 006e 50B9     	 cbnz r0,.L14
 134              	.L9:
 135              	 .loc 1 178 0 is_stmt 0 discriminator 1
 136 0070 2388     	 ldrh r3,[r4]
 137 0072 164A     	 ldr r2,.L31+16
 138 0074 9BB2     	 uxth r3,r3
 139 0076 012B     	 cmp r3,#1
 140 0078 FAD0     	 beq .L9
 141              	 .loc 1 178 0 discriminator 2
 142 007a 1388     	 ldrh r3,[r2]
 143 007c 9BB2     	 uxth r3,r3
 144 007e 43B1     	 cbz r3,.L10
 145              	 .loc 1 178 0 discriminator 3
 146 0080 1288     	 ldrh r2,[r2]
 147              	.L29:
 148 0082 92B2     	 uxth r2,r2
 149              	.LVL9:
 179:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****         return_status = OPTIGA_LIB_SUCCESS;
 180:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** 
 181:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     } while (FALSE);
 182:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     OPTIGA_EXAMPLE_LOG_STATUS(return_status);
 150              	 .loc 1 182 0 is_stmt 1 discriminator 3
 151 0084 2AB1     	 cbz r2,.L10
 152              	.LVL10:
 153              	.L14:
 154              	 .loc 1 182 0 is_stmt 0 discriminator 1
 155 0086 0E48     	 ldr r0,.L31+4
 156 0088 1349     	 ldr r1,.L31+28
 157 008a FFF7FEFF 	 bl optiga_lib_print_status
 158              	.LVL11:
 183:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     
 184:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     if (me)
 159              	 .loc 1 184 0 is_stmt 1 discriminator 1
 160 008e 2DB9     	 cbnz r5,.L11
 161 0090 12E0     	 b .L4
 162              	.LVL12:
 163              	.L10:
 182:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     
 164              	 .loc 1 182 0
 165 0092 0B48     	 ldr r0,.L31+4
 166 0094 0B49     	 ldr r1,.L31+8
 167 0096 0022     	 movs r2,#0
 168 0098 FFF7FEFF 	 bl optiga_lib_print_status
 169              	.LVL13:
 170              	.L11:
 185:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     {
 186:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****         //Destroy the instance after the completion of usecase if not required.
 187:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****         return_status = optiga_util_destroy(me);
 171              	 .loc 1 187 0
 172 009c 2846     	 mov r0,r5
 173 009e FFF7FEFF 	 bl optiga_util_destroy
 174              	.LVL14:
 188:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****         if(OPTIGA_LIB_SUCCESS != return_status)
 175              	 .loc 1 188 0
 176 00a2 0246     	 mov r2,r0
 177 00a4 40B1     	 cbz r0,.L4
 189:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****         {
 190:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****             //lint --e{774} suppress This is a generic macro
 191:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****             OPTIGA_EXAMPLE_LOG_STATUS(return_status);
 178              	 .loc 1 191 0 discriminator 1
 179 00a6 0648     	 ldr r0,.L31+4
 180              	.LVL15:
 181 00a8 0B49     	 ldr r1,.L31+28
 192:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****         }
 193:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     }
 194:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c **** }
 182              	 .loc 1 194 0 discriminator 1
 183 00aa 03B0     	 add sp,sp,#12
 184              	.LCFI1:
 185              	 .cfi_remember_state
 186              	 .cfi_def_cfa_offset 12
 187              	 
 188 00ac BDE83040 	 pop {r4,r5,lr}
 189              	.LCFI2:
 190              	 .cfi_restore 14
 191              	 .cfi_restore 5
 192              	 .cfi_restore 4
 193              	 .cfi_def_cfa_offset 0
 194              	.LVL16:
 191:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****         }
 195              	 .loc 1 191 0 discriminator 1
 196 00b0 FFF7FEBF 	 b optiga_lib_print_status
 197              	.LVL17:
 198              	.L15:
 199              	.LCFI3:
 200              	 .cfi_restore_state
 127:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_write_data.c ****     optiga_util_t * me = NULL;
 201              	 .loc 1 127 0
 202 00b4 0122     	 movs r2,#1
 203 00b6 E6E7     	 b .L14
 204              	.LVL18:
 205              	.L4:
 206              	 .loc 1 194 0
 207 00b8 03B0     	 add sp,sp,#12
 208              	.LCFI4:
 209              	 .cfi_def_cfa_offset 12
 210              	 
 211 00ba 30BD     	 pop {r4,r5,pc}
 212              	.LVL19:
 213              	.L32:
 214              	 .align 2
 215              	.L31:
 216 00bc 00000000 	 .word .LANCHOR1
 217 00c0 00000000 	 .word .LC0
 218 00c4 15000000 	 .word .LC1
 219 00c8 00000000 	 .word optiga_util_callback
 220 00cc 00000000 	 .word .LANCHOR0
 221 00d0 00000000 	 .word .LANCHOR2
 222 00d4 00000000 	 .word .LANCHOR3
 223 00d8 1A000000 	 .word .LC2
 224              	 .cfi_endproc
 225              	.LFE1:
 227              	 .section .rodata.__FUNCTION__.5865,"a",%progbits
 228              	 .set .LANCHOR1,.+0
 231              	__FUNCTION__.5865:
 232 0000 6578616D 	 .ascii "example_optiga_util_write_data\000"
 232      706C655F 
 232      6F707469 
 232      67615F75 
 232      74696C5F 
 233              	 .section .rodata.metadata,"a",%progbits
 234              	 .set .LANCHOR3,.+0
 237              	metadata:
 238 0000 20       	 .byte 32
 239 0001 05       	 .byte 5
 240 0002 D1       	 .byte -47
 241 0003 03       	 .byte 3
 242 0004 E1       	 .byte -31
 243 0005 FB       	 .byte -5
 244 0006 03       	 .byte 3
 245              	 .section .rodata.str1.1,"aMS",%progbits,1
 246              	.LC0:
 247 0000 5B6F7074 	 .ascii "[optiga example]  : \000"
 247      69676120 
 247      6578616D 
 247      706C655D 
 247      20203A20 
 248              	.LC1:
 249 0015 1B5B306D 	 .ascii "\033[0m\000"
 249      00
 250              	.LC2:
 251 001a 1B5B3331 	 .ascii "\033[31m\000"
 251      6D00
 252              	 .section .rodata.trust_anchor,"a",%progbits
 253              	 .set .LANCHOR2,.+0
 256              	trust_anchor:
 257 0000 30       	 .byte 48
 258 0001 82       	 .byte -126
 259 0002 02       	 .byte 2
 260 0003 7E       	 .byte 126
 261 0004 30       	 .byte 48
 262 0005 82       	 .byte -126
 263 0006 02       	 .byte 2
 264 0007 05       	 .byte 5
 265 0008 A0       	 .byte -96
 266 0009 03       	 .byte 3
 267 000a 02       	 .byte 2
 268 000b 01       	 .byte 1
 269 000c 02       	 .byte 2
 270 000d 02       	 .byte 2
 271 000e 09       	 .byte 9
 272 000f 00       	 .byte 0
 273 0010 9B       	 .byte -101
 274 0011 0C       	 .byte 12
 275 0012 24       	 .byte 36
 276 0013 B4       	 .byte -76
 277 0014 5E       	 .byte 94
 278 0015 7D       	 .byte 125
 279 0016 E3       	 .byte -29
 280 0017 73       	 .byte 115
 281 0018 30       	 .byte 48
 282 0019 0A       	 .byte 10
 283 001a 06       	 .byte 6
 284 001b 08       	 .byte 8
 285 001c 2A       	 .byte 42
 286 001d 86       	 .byte -122
 287 001e 48       	 .byte 72
 288 001f CE       	 .byte -50
 289 0020 3D       	 .byte 61
 290 0021 04       	 .byte 4
 291 0022 03       	 .byte 3
 292 0023 02       	 .byte 2
 293 0024 30       	 .byte 48
 294 0025 74       	 .byte 116
 295 0026 31       	 .byte 49
 296 0027 0B       	 .byte 11
 297 0028 30       	 .byte 48
 298 0029 09       	 .byte 9
 299 002a 06       	 .byte 6
 300 002b 03       	 .byte 3
 301 002c 55       	 .byte 85
 302 002d 04       	 .byte 4
 303 002e 06       	 .byte 6
 304 002f 13       	 .byte 19
 305 0030 02       	 .byte 2
 306 0031 44       	 .byte 68
 307 0032 45       	 .byte 69
 308 0033 31       	 .byte 49
 309 0034 21       	 .byte 33
 310 0035 30       	 .byte 48
 311 0036 1F       	 .byte 31
 312 0037 06       	 .byte 6
 313 0038 03       	 .byte 3
 314 0039 55       	 .byte 85
 315 003a 04       	 .byte 4
 316 003b 0A       	 .byte 10
 317 003c 0C       	 .byte 12
 318 003d 18       	 .byte 24
 319 003e 49       	 .byte 73
 320 003f 6E       	 .byte 110
 321 0040 66       	 .byte 102
 322 0041 69       	 .byte 105
 323 0042 6E       	 .byte 110
 324 0043 65       	 .byte 101
 325 0044 6F       	 .byte 111
 326 0045 6E       	 .byte 110
 327 0046 20       	 .byte 32
 328 0047 54       	 .byte 84
 329 0048 65       	 .byte 101
 330 0049 63       	 .byte 99
 331 004a 68       	 .byte 104
 332 004b 6E       	 .byte 110
 333 004c 6F       	 .byte 111
 334 004d 6C       	 .byte 108
 335 004e 6F       	 .byte 111
 336 004f 67       	 .byte 103
 337 0050 69       	 .byte 105
 338 0051 65       	 .byte 101
 339 0052 73       	 .byte 115
 340 0053 20       	 .byte 32
 341 0054 41       	 .byte 65
 342 0055 47       	 .byte 71
 343 0056 31       	 .byte 49
 344 0057 1B       	 .byte 27
 345 0058 30       	 .byte 48
 346 0059 19       	 .byte 25
 347 005a 06       	 .byte 6
 348 005b 03       	 .byte 3
 349 005c 55       	 .byte 85
 350 005d 04       	 .byte 4
 351 005e 0B       	 .byte 11
 352 005f 0C       	 .byte 12
 353 0060 12       	 .byte 18
 354 0061 4F       	 .byte 79
 355 0062 50       	 .byte 80
 356 0063 54       	 .byte 84
 357 0064 49       	 .byte 73
 358 0065 47       	 .byte 71
 359 0066 41       	 .byte 65
 360 0067 28       	 .byte 40
 361 0068 54       	 .byte 84
 362 0069 4D       	 .byte 77
 363 006a 29       	 .byte 41
 364 006b 20       	 .byte 32
 365 006c 54       	 .byte 84
 366 006d 72       	 .byte 114
 367 006e 75       	 .byte 117
 368 006f 73       	 .byte 115
 369 0070 74       	 .byte 116
 370 0071 20       	 .byte 32
 371 0072 58       	 .byte 88
 372 0073 31       	 .byte 49
 373 0074 25       	 .byte 37
 374 0075 30       	 .byte 48
 375 0076 23       	 .byte 35
 376 0077 06       	 .byte 6
 377 0078 03       	 .byte 3
 378 0079 55       	 .byte 85
 379 007a 04       	 .byte 4
 380 007b 03       	 .byte 3
 381 007c 0C       	 .byte 12
 382 007d 1C       	 .byte 28
 383 007e 49       	 .byte 73
 384 007f 6E       	 .byte 110
 385 0080 66       	 .byte 102
 386 0081 69       	 .byte 105
 387 0082 6E       	 .byte 110
 388 0083 65       	 .byte 101
 389 0084 6F       	 .byte 111
 390 0085 6E       	 .byte 110
 391 0086 20       	 .byte 32
 392 0087 54       	 .byte 84
 393 0088 65       	 .byte 101
 394 0089 73       	 .byte 115
 395 008a 74       	 .byte 116
 396 008b 20       	 .byte 32
 397 008c 53       	 .byte 83
 398 008d 65       	 .byte 101
 399 008e 72       	 .byte 114
 400 008f 76       	 .byte 118
 401 0090 65       	 .byte 101
 402 0091 72       	 .byte 114
 403 0092 20       	 .byte 32
 404 0093 52       	 .byte 82
 405 0094 6F       	 .byte 111
 406 0095 6F       	 .byte 111
 407 0096 74       	 .byte 116
 408 0097 20       	 .byte 32
 409 0098 43       	 .byte 67
 410 0099 41       	 .byte 65
 411 009a 30       	 .byte 48
 412 009b 1E       	 .byte 30
 413 009c 17       	 .byte 23
 414 009d 0D       	 .byte 13
 415 009e 31       	 .byte 49
 416 009f 36       	 .byte 54
 417 00a0 31       	 .byte 49
 418 00a1 30       	 .byte 48
 419 00a2 31       	 .byte 49
 420 00a3 34       	 .byte 52
 421 00a4 30       	 .byte 48
 422 00a5 33       	 .byte 51
 423 00a6 35       	 .byte 53
 424 00a7 38       	 .byte 56
 425 00a8 33       	 .byte 51
 426 00a9 36       	 .byte 54
 427 00aa 5A       	 .byte 90
 428 00ab 17       	 .byte 23
 429 00ac 0D       	 .byte 13
 430 00ad 34       	 .byte 52
 431 00ae 31       	 .byte 49
 432 00af 31       	 .byte 49
 433 00b0 30       	 .byte 48
 434 00b1 30       	 .byte 48
 435 00b2 38       	 .byte 56
 436 00b3 30       	 .byte 48
 437 00b4 33       	 .byte 51
 438 00b5 35       	 .byte 53
 439 00b6 38       	 .byte 56
 440 00b7 33       	 .byte 51
 441 00b8 36       	 .byte 54
 442 00b9 5A       	 .byte 90
 443 00ba 30       	 .byte 48
 444 00bb 74       	 .byte 116
 445 00bc 31       	 .byte 49
 446 00bd 0B       	 .byte 11
 447 00be 30       	 .byte 48
 448 00bf 09       	 .byte 9
 449 00c0 06       	 .byte 6
 450 00c1 03       	 .byte 3
 451 00c2 55       	 .byte 85
 452 00c3 04       	 .byte 4
 453 00c4 06       	 .byte 6
 454 00c5 13       	 .byte 19
 455 00c6 02       	 .byte 2
 456 00c7 44       	 .byte 68
 457 00c8 45       	 .byte 69
 458 00c9 31       	 .byte 49
 459 00ca 21       	 .byte 33
 460 00cb 30       	 .byte 48
 461 00cc 1F       	 .byte 31
 462 00cd 06       	 .byte 6
 463 00ce 03       	 .byte 3
 464 00cf 55       	 .byte 85
 465 00d0 04       	 .byte 4
 466 00d1 0A       	 .byte 10
 467 00d2 0C       	 .byte 12
 468 00d3 18       	 .byte 24
 469 00d4 49       	 .byte 73
 470 00d5 6E       	 .byte 110
 471 00d6 66       	 .byte 102
 472 00d7 69       	 .byte 105
 473 00d8 6E       	 .byte 110
 474 00d9 65       	 .byte 101
 475 00da 6F       	 .byte 111
 476 00db 6E       	 .byte 110
 477 00dc 20       	 .byte 32
 478 00dd 54       	 .byte 84
 479 00de 65       	 .byte 101
 480 00df 63       	 .byte 99
 481 00e0 68       	 .byte 104
 482 00e1 6E       	 .byte 110
 483 00e2 6F       	 .byte 111
 484 00e3 6C       	 .byte 108
 485 00e4 6F       	 .byte 111
 486 00e5 67       	 .byte 103
 487 00e6 69       	 .byte 105
 488 00e7 65       	 .byte 101
 489 00e8 73       	 .byte 115
 490 00e9 20       	 .byte 32
 491 00ea 41       	 .byte 65
 492 00eb 47       	 .byte 71
 493 00ec 31       	 .byte 49
 494 00ed 1B       	 .byte 27
 495 00ee 30       	 .byte 48
 496 00ef 19       	 .byte 25
 497 00f0 06       	 .byte 6
 498 00f1 03       	 .byte 3
 499 00f2 55       	 .byte 85
 500 00f3 04       	 .byte 4
 501 00f4 0B       	 .byte 11
 502 00f5 0C       	 .byte 12
 503 00f6 12       	 .byte 18
 504 00f7 4F       	 .byte 79
 505 00f8 50       	 .byte 80
 506 00f9 54       	 .byte 84
 507 00fa 49       	 .byte 73
 508 00fb 47       	 .byte 71
 509 00fc 41       	 .byte 65
 510 00fd 28       	 .byte 40
 511 00fe 54       	 .byte 84
 512 00ff 4D       	 .byte 77
 513 0100 29       	 .byte 41
 514 0101 20       	 .byte 32
 515 0102 54       	 .byte 84
 516 0103 72       	 .byte 114
 517 0104 75       	 .byte 117
 518 0105 73       	 .byte 115
 519 0106 74       	 .byte 116
 520 0107 20       	 .byte 32
 521 0108 58       	 .byte 88
 522 0109 31       	 .byte 49
 523 010a 25       	 .byte 37
 524 010b 30       	 .byte 48
 525 010c 23       	 .byte 35
 526 010d 06       	 .byte 6
 527 010e 03       	 .byte 3
 528 010f 55       	 .byte 85
 529 0110 04       	 .byte 4
 530 0111 03       	 .byte 3
 531 0112 0C       	 .byte 12
 532 0113 1C       	 .byte 28
 533 0114 49       	 .byte 73
 534 0115 6E       	 .byte 110
 535 0116 66       	 .byte 102
 536 0117 69       	 .byte 105
 537 0118 6E       	 .byte 110
 538 0119 65       	 .byte 101
 539 011a 6F       	 .byte 111
 540 011b 6E       	 .byte 110
 541 011c 20       	 .byte 32
 542 011d 54       	 .byte 84
 543 011e 65       	 .byte 101
 544 011f 73       	 .byte 115
 545 0120 74       	 .byte 116
 546 0121 20       	 .byte 32
 547 0122 53       	 .byte 83
 548 0123 65       	 .byte 101
 549 0124 72       	 .byte 114
 550 0125 76       	 .byte 118
 551 0126 65       	 .byte 101
 552 0127 72       	 .byte 114
 553 0128 20       	 .byte 32
 554 0129 52       	 .byte 82
 555 012a 6F       	 .byte 111
 556 012b 6F       	 .byte 111
 557 012c 74       	 .byte 116
 558 012d 20       	 .byte 32
 559 012e 43       	 .byte 67
 560 012f 41       	 .byte 65
 561 0130 30       	 .byte 48
 562 0131 76       	 .byte 118
 563 0132 30       	 .byte 48
 564 0133 10       	 .byte 16
 565 0134 06       	 .byte 6
 566 0135 07       	 .byte 7
 567 0136 2A       	 .byte 42
 568 0137 86       	 .byte -122
 569 0138 48       	 .byte 72
 570 0139 CE       	 .byte -50
 571 013a 3D       	 .byte 61
 572 013b 02       	 .byte 2
 573 013c 01       	 .byte 1
 574 013d 06       	 .byte 6
 575 013e 05       	 .byte 5
 576 013f 2B       	 .byte 43
 577 0140 81       	 .byte -127
 578 0141 04       	 .byte 4
 579 0142 00       	 .byte 0
 580 0143 22       	 .byte 34
 581 0144 03       	 .byte 3
 582 0145 62       	 .byte 98
 583 0146 00       	 .byte 0
 584 0147 04       	 .byte 4
 585 0148 7B       	 .byte 123
 586 0149 2E       	 .byte 46
 587 014a E6       	 .byte -26
 588 014b FB       	 .byte -5
 589 014c BD       	 .byte -67
 590 014d 6F       	 .byte 111
 591 014e 40       	 .byte 64
 592 014f 0F       	 .byte 15
 593 0150 41       	 .byte 65
 594 0151 9F       	 .byte -97
 595 0152 E5       	 .byte -27
 596 0153 F0       	 .byte -16
 597 0154 8C       	 .byte -116
 598 0155 97       	 .byte -105
 599 0156 21       	 .byte 33
 600 0157 B0       	 .byte -80
 601 0158 07       	 .byte 7
 602 0159 B5       	 .byte -75
 603 015a BB       	 .byte -69
 604 015b D2       	 .byte -46
 605 015c B8       	 .byte -72
 606 015d 5A       	 .byte 90
 607 015e 14       	 .byte 20
 608 015f 3B       	 .byte 59
 609 0160 75       	 .byte 117
 610 0161 54       	 .byte 84
 611 0162 7E       	 .byte 126
 612 0163 EA       	 .byte -22
 613 0164 FE       	 .byte -2
 614 0165 F2       	 .byte -14
 615 0166 8D       	 .byte -115
 616 0167 5A       	 .byte 90
 617 0168 B8       	 .byte -72
 618 0169 54       	 .byte 84
 619 016a E0       	 .byte -32
 620 016b C8       	 .byte -56
 621 016c AD       	 .byte -83
 622 016d ED       	 .byte -19
 623 016e F1       	 .byte -15
 624 016f D5       	 .byte -43
 625 0170 8B       	 .byte -117
 626 0171 97       	 .byte -105
 627 0172 BA       	 .byte -70
 628 0173 02       	 .byte 2
 629 0174 3E       	 .byte 62
 630 0175 D9       	 .byte -39
 631 0176 25       	 .byte 37
 632 0177 E0       	 .byte -32
 633 0178 00       	 .byte 0
 634 0179 86       	 .byte -122
 635 017a 17       	 .byte 23
 636 017b 35       	 .byte 53
 637 017c E6       	 .byte -26
 638 017d E6       	 .byte -26
 639 017e D9       	 .byte -39
 640 017f 12       	 .byte 18
 641 0180 0F       	 .byte 15
 642 0181 8A       	 .byte -118
 643 0182 21       	 .byte 33
 644 0183 1C       	 .byte 28
 645 0184 62       	 .byte 98
 646 0185 FA       	 .byte -6
 647 0186 CE       	 .byte -50
 648 0187 F6       	 .byte -10
 649 0188 9E       	 .byte -98
 650 0189 B1       	 .byte -79
 651 018a F8       	 .byte -8
 652 018b 8C       	 .byte -116
 653 018c A3       	 .byte -93
 654 018d DC       	 .byte -36
 655 018e 52       	 .byte 82
 656 018f 04       	 .byte 4
 657 0190 83       	 .byte -125
 658 0191 EB       	 .byte -21
 659 0192 A0       	 .byte -96
 660 0193 B3       	 .byte -77
 661 0194 FA       	 .byte -6
 662 0195 B0       	 .byte -80
 663 0196 CA       	 .byte -54
 664 0197 02       	 .byte 2
 665 0198 30       	 .byte 48
 666 0199 B1       	 .byte -79
 667 019a FE       	 .byte -2
 668 019b 53       	 .byte 83
 669 019c 4E       	 .byte 78
 670 019d AD       	 .byte -83
 671 019e FB       	 .byte -5
 672 019f E0       	 .byte -32
 673 01a0 88       	 .byte -120
 674 01a1 05       	 .byte 5
 675 01a2 86       	 .byte -122
 676 01a3 4E       	 .byte 78
 677 01a4 5E       	 .byte 94
 678 01a5 67       	 .byte 103
 679 01a6 EB       	 .byte -21
 680 01a7 7B       	 .byte 123
 681 01a8 A3       	 .byte -93
 682 01a9 63       	 .byte 99
 683 01aa 30       	 .byte 48
 684 01ab 61       	 .byte 97
 685 01ac 30       	 .byte 48
 686 01ad 1D       	 .byte 29
 687 01ae 06       	 .byte 6
 688 01af 03       	 .byte 3
 689 01b0 55       	 .byte 85
 690 01b1 1D       	 .byte 29
 691 01b2 0E       	 .byte 14
 692 01b3 04       	 .byte 4
 693 01b4 16       	 .byte 22
 694 01b5 04       	 .byte 4
 695 01b6 14       	 .byte 20
 696 01b7 91       	 .byte -111
 697 01b8 4A       	 .byte 74
 698 01b9 4B       	 .byte 75
 699 01ba 07       	 .byte 7
 700 01bb 58       	 .byte 88
 701 01bc B2       	 .byte -78
 702 01bd C6       	 .byte -58
 703 01be 4B       	 .byte 75
 704 01bf 37       	 .byte 55
 705 01c0 FD       	 .byte -3
 706 01c1 91       	 .byte -111
 707 01c2 62       	 .byte 98
 708 01c3 D8       	 .byte -40
 709 01c4 8A       	 .byte -118
 710 01c5 17       	 .byte 23
 711 01c6 28       	 .byte 40
 712 01c7 AA       	 .byte -86
 713 01c8 94       	 .byte -108
 714 01c9 18       	 .byte 24
 715 01ca 62       	 .byte 98
 716 01cb 30       	 .byte 48
 717 01cc 1F       	 .byte 31
 718 01cd 06       	 .byte 6
 719 01ce 03       	 .byte 3
 720 01cf 55       	 .byte 85
 721 01d0 1D       	 .byte 29
 722 01d1 23       	 .byte 35
 723 01d2 04       	 .byte 4
 724 01d3 18       	 .byte 24
 725 01d4 30       	 .byte 48
 726 01d5 16       	 .byte 22
 727 01d6 80       	 .byte -128
 728 01d7 14       	 .byte 20
 729 01d8 91       	 .byte -111
 730 01d9 4A       	 .byte 74
 731 01da 4B       	 .byte 75
 732 01db 07       	 .byte 7
 733 01dc 58       	 .byte 88
 734 01dd B2       	 .byte -78
 735 01de C6       	 .byte -58
 736 01df 4B       	 .byte 75
 737 01e0 37       	 .byte 55
 738 01e1 FD       	 .byte -3
 739 01e2 91       	 .byte -111
 740 01e3 62       	 .byte 98
 741 01e4 D8       	 .byte -40
 742 01e5 8A       	 .byte -118
 743 01e6 17       	 .byte 23
 744 01e7 28       	 .byte 40
 745 01e8 AA       	 .byte -86
 746 01e9 94       	 .byte -108
 747 01ea 18       	 .byte 24
 748 01eb 62       	 .byte 98
 749 01ec 30       	 .byte 48
 750 01ed 0F       	 .byte 15
 751 01ee 06       	 .byte 6
 752 01ef 03       	 .byte 3
 753 01f0 55       	 .byte 85
 754 01f1 1D       	 .byte 29
 755 01f2 13       	 .byte 19
 756 01f3 01       	 .byte 1
 757 01f4 01       	 .byte 1
 758 01f5 FF       	 .byte -1
 759 01f6 04       	 .byte 4
 760 01f7 05       	 .byte 5
 761 01f8 30       	 .byte 48
 762 01f9 03       	 .byte 3
 763 01fa 01       	 .byte 1
 764 01fb 01       	 .byte 1
 765 01fc FF       	 .byte -1
 766 01fd 30       	 .byte 48
 767 01fe 0E       	 .byte 14
 768 01ff 06       	 .byte 6
 769 0200 03       	 .byte 3
 770 0201 55       	 .byte 85
 771 0202 1D       	 .byte 29
 772 0203 0F       	 .byte 15
 773 0204 01       	 .byte 1
 774 0205 01       	 .byte 1
 775 0206 FF       	 .byte -1
 776 0207 04       	 .byte 4
 777 0208 04       	 .byte 4
 778 0209 03       	 .byte 3
 779 020a 02       	 .byte 2
 780 020b 02       	 .byte 2
 781 020c 04       	 .byte 4
 782 020d 30       	 .byte 48
 783 020e 0A       	 .byte 10
 784 020f 06       	 .byte 6
 785 0210 08       	 .byte 8
 786 0211 2A       	 .byte 42
 787 0212 86       	 .byte -122
 788 0213 48       	 .byte 72
 789 0214 CE       	 .byte -50
 790 0215 3D       	 .byte 61
 791 0216 04       	 .byte 4
 792 0217 03       	 .byte 3
 793 0218 02       	 .byte 2
 794 0219 03       	 .byte 3
 795 021a 67       	 .byte 103
 796 021b 00       	 .byte 0
 797 021c 30       	 .byte 48
 798 021d 64       	 .byte 100
 799 021e 02       	 .byte 2
 800 021f 30       	 .byte 48
 801 0220 20       	 .byte 32
 802 0221 1C       	 .byte 28
 803 0222 7A       	 .byte 122
 804 0223 21       	 .byte 33
 805 0224 50       	 .byte 80
 806 0225 50       	 .byte 80
 807 0226 C9       	 .byte -55
 808 0227 15       	 .byte 21
 809 0228 1C       	 .byte 28
 810 0229 C5       	 .byte -59
 811 022a 14       	 .byte 20
 812 022b 8D       	 .byte -115
 813 022c 46       	 .byte 70
 814 022d 5C       	 .byte 92
 815 022e A6       	 .byte -90
 816 022f D3       	 .byte -45
 817 0230 81       	 .byte -127
 818 0231 CE       	 .byte -50
 819 0232 57       	 .byte 87
 820 0233 06       	 .byte 6
 821 0234 1A       	 .byte 26
 822 0235 AE       	 .byte -82
 823 0236 39       	 .byte 57
 824 0237 10       	 .byte 16
 825 0238 27       	 .byte 39
 826 0239 51       	 .byte 81
 827 023a 42       	 .byte 66
 828 023b EF       	 .byte -17
 829 023c CD       	 .byte -51
 830 023d 64       	 .byte 100
 831 023e 75       	 .byte 117
 832 023f 99       	 .byte -103
 833 0240 DE       	 .byte -34
 834 0241 0D       	 .byte 13
 835 0242 3D       	 .byte 61
 836 0243 01       	 .byte 1
 837 0244 47       	 .byte 71
 838 0245 69       	 .byte 105
 839 0246 FC       	 .byte -4
 840 0247 93       	 .byte -109
 841 0248 6D       	 .byte 109
 842 0249 99       	 .byte -103
 843 024a C7       	 .byte -57
 844 024b F0       	 .byte -16
 845 024c F8       	 .byte -8
 846 024d 8C       	 .byte -116
 847 024e AA       	 .byte -86
 848 024f D1       	 .byte -47
 849 0250 02       	 .byte 2
 850 0251 30       	 .byte 48
 851 0252 68       	 .byte 104
 852 0253 C3       	 .byte -61
 853 0254 27       	 .byte 39
 854 0255 D9       	 .byte -39
 855 0256 0F       	 .byte 15
 856 0257 52       	 .byte 82
 857 0258 AD       	 .byte -83
 858 0259 3A       	 .byte 58
 859 025a A8       	 .byte -88
 860 025b DB       	 .byte -37
 861 025c F8       	 .byte -8
 862 025d 53       	 .byte 83
 863 025e 11       	 .byte 17
 864 025f 1D       	 .byte 29
 865 0260 F1       	 .byte -15
 866 0261 30       	 .byte 48
 867 0262 6B       	 .byte 107
 868 0263 39       	 .byte 57
 869 0264 F3       	 .byte -13
 870 0265 3F       	 .byte 63
 871 0266 EF       	 .byte -17
 872 0267 65       	 .byte 101
 873 0268 61       	 .byte 97
 874 0269 BE       	 .byte -66
 875 026a C4       	 .byte -60
 876 026b DD       	 .byte -35
 877 026c 19       	 .byte 25
 878 026d 11       	 .byte 17
 879 026e 1E       	 .byte 30
 880 026f 83       	 .byte -125
 881 0270 F9       	 .byte -7
 882 0271 E8       	 .byte -24
 883 0272 3F       	 .byte 63
 884 0273 41       	 .byte 65
 885 0274 97       	 .byte -105
 886 0275 45       	 .byte 69
 887 0276 FC       	 .byte -4
 888 0277 61       	 .byte 97
 889 0278 E0       	 .byte -32
 890 0279 06       	 .byte 6
 891 027a D0       	 .byte -48
 892 027b E6       	 .byte -26
 893 027c F7       	 .byte -9
 894 027d 5C       	 .byte 92
 895 027e 9F       	 .byte -97
 896 027f E2       	 .byte -30
 897 0280 57       	 .byte 87
 898 0281 C2       	 .byte -62
 899              	 .section .bss.optiga_lib_status,"aw",%nobits
 900              	 .align 1
 901              	 .set .LANCHOR0,.+0
 904              	optiga_lib_status:
 905 0000 0000     	 .space 2
 906              	 .text
 907              	.Letext0:
 908              	 .file 2 "c:\\users\\yushev\\dave_4-4-2_32bit_2018-02-23\\dave-ide-4.4.2-32bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 909              	 .file 3 "c:\\users\\yushev\\dave_4-4-2_32bit_2018-02-23\\dave-ide-4.4.2-32bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 910              	 .file 4 "C:/Users/Yushev/git/optiga-trust-qi/optiga/include/optiga/common/optiga_lib_types.h"
 911              	 .file 5 "C:/Users/Yushev/git/optiga-trust-qi/optiga/include/optiga/common/optiga_lib_common.h"
 912              	 .file 6 "C:/Users/Yushev/git/optiga-trust-qi/optiga/include/optiga/cmd/optiga_cmd.h"
 913              	 .file 7 "C:/Users/Yushev/git/optiga-trust-qi/optiga/include/optiga/optiga_util.h"
 914              	 .file 8 "C:/Users/Yushev/git/optiga-trust-qi/optiga/include/optiga/common/optiga_lib_logger.h"
DEFINED SYMBOLS
                            *ABS*:00000000 example_optiga_util_write_data.c
    {standard input}:20     .text.optiga_util_callback:00000000 $t
    {standard input}:24     .text.optiga_util_callback:00000000 optiga_util_callback
    {standard input}:40     .text.optiga_util_callback:00000008 $d
    {standard input}:45     .text.example_optiga_util_write_data:00000000 $t
    {standard input}:50     .text.example_optiga_util_write_data:00000000 example_optiga_util_write_data
    {standard input}:216    .text.example_optiga_util_write_data:000000bc $d
    {standard input}:231    .rodata.__FUNCTION__.5865:00000000 __FUNCTION__.5865
    {standard input}:237    .rodata.metadata:00000000 metadata
    {standard input}:256    .rodata.trust_anchor:00000000 trust_anchor
    {standard input}:900    .bss.optiga_lib_status:00000000 $d
    {standard input}:904    .bss.optiga_lib_status:00000000 optiga_lib_status
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
optiga_lib_print_message
optiga_util_create
optiga_util_set_comms_params
optiga_util_write_data
optiga_util_write_metadata
optiga_lib_print_status
optiga_util_destroy
