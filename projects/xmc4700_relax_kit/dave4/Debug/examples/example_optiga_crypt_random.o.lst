   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,4
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "example_optiga_crypt_random.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.optiga_crypt_callback,"ax",%progbits
  20              	 .align 1
  21              	 .thumb
  22              	 .thumb_func
  24              	optiga_crypt_callback:
  25              	.LFB0:
  26              	 .file 1 "C:/Users/Yushev/git/optiga-trust-qi/examples/optiga/example_optiga_crypt_random.c"
   1:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** /**
   2:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** * \copyright
   3:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** * MIT License
   4:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** *
   5:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** * Copyright (c) 2020 Infineon Technologies AG
   6:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** *
   7:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** * Permission is hereby granted, free of charge, to any person obtaining a copy
   8:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** * of this software and associated documentation files (the "Software"), to deal
   9:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** * in the Software without restriction, including without limitation the rights
  10:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  11:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** * copies of the Software, and to permit persons to whom the Software is
  12:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** * furnished to do so, subject to the following conditions:
  13:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** *
  14:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** * The above copyright notice and this permission notice shall be included in all
  15:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** * copies or substantial portions of the Software.
  16:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** *
  17:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  19:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  20:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  21:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  22:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  23:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** * SOFTWARE
  24:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** *
  25:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** * \endcopyright
  26:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** *
  27:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** * \author Infineon Technologies AG
  28:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** *
  29:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** * \file example_optiga_crypt_random.c
  30:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** *
  31:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** * \brief   This file provides the example for generation of random using
  32:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** *          #optiga_crypt_random.
  33:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** *
  34:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** * \ingroup grOptigaExamples
  35:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** *
  36:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** * @{
  37:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** */
  38:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** 
  39:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** #include "optiga/optiga_crypt.h"
  40:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** #include "optiga_example.h"
  41:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** 
  42:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** #ifdef OPTIGA_CRYPT_RANDOM_ENABLED
  43:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** 
  44:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** /**
  45:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****  * Callback when optiga_crypt_xxxx operation is completed asynchronously
  46:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****  */
  47:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** static volatile optiga_lib_status_t optiga_lib_status;
  48:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** //lint --e{818} suppress "argument "context" is not used in the sample provided"
  49:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** static void optiga_crypt_callback(void * context, optiga_lib_status_t return_status)
  50:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** {
  27              	 .loc 1 50 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32              	.LVL0:
  51:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****     optiga_lib_status = return_status;
  33              	 .loc 1 51 0
  34 0000 014B     	 ldr r3,.L2
  35 0002 1980     	 strh r1,[r3]
  36 0004 7047     	 bx lr
  37              	.L3:
  38 0006 00BF     	 .align 2
  39              	.L2:
  40 0008 00000000 	 .word .LANCHOR0
  41              	 .cfi_endproc
  42              	.LFE0:
  44              	 .section .text.example_optiga_crypt_random,"ax",%progbits
  45              	 .align 1
  46              	 .global example_optiga_crypt_random
  47              	 .thumb
  48              	 .thumb_func
  50              	example_optiga_crypt_random:
  51              	.LFB1:
  52:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****     if (NULL != context)
  53:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****     {
  54:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****         // callback to upper layer here
  55:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****     }
  56:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** }
  57:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** 
  58:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** /**
  59:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****  * The below example demonstrates the generation of random using OPTIGA.
  60:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****  *
  61:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****  * Example for #optiga_crypt_random
  62:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****  *
  63:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****  */
  64:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** void example_optiga_crypt_random(void)
  65:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** {
  52              	 .loc 1 65 0
  53              	 .cfi_startproc
  54              	 
  55              	 
  56              	.LVL1:
  57 0000 30B5     	 push {r4,r5,lr}
  58              	.LCFI0:
  59              	 .cfi_def_cfa_offset 12
  60              	 .cfi_offset 4,-12
  61              	 .cfi_offset 5,-8
  62              	 .cfi_offset 14,-4
  66:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****     uint8_t random_data_buffer [32];
  67:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****     optiga_crypt_t * me = NULL;
  68:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****     optiga_lib_status_t return_status = !OPTIGA_LIB_SUCCESS;
  69:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****     OPTIGA_EXAMPLE_LOG_MESSAGE(__FUNCTION__);
  63              	 .loc 1 69 0
  64 0002 1C48     	 ldr r0,.L25
  65 0004 1C49     	 ldr r1,.L25+4
  66 0006 1D4A     	 ldr r2,.L25+8
  65:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****     uint8_t random_data_buffer [32];
  67              	 .loc 1 65 0
  68 0008 89B0     	 sub sp,sp,#36
  69              	.LCFI1:
  70              	 .cfi_def_cfa_offset 48
  71              	 .loc 1 69 0
  72 000a FFF7FEFF 	 bl optiga_lib_print_message
  73              	.LVL2:
  70:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** 
  71:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****     do
  72:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****     {
  73:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****         /**
  74:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****          * 1. Create OPTIGA Crypt Instance
  75:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****          *
  76:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****          */
  77:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****         me = optiga_crypt_create(0, optiga_crypt_callback, NULL);
  74              	 .loc 1 77 0
  75 000e 0020     	 movs r0,#0
  76 0010 0246     	 mov r2,r0
  77 0012 1B49     	 ldr r1,.L25+12
  78 0014 FFF7FEFF 	 bl optiga_crypt_create
  79              	.LVL3:
  80 0018 0122     	 movs r2,#1
  78:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****         if (NULL == me)
  81              	 .loc 1 78 0
  82 001a 0546     	 mov r5,r0
  83 001c 98B1     	 cbz r0,.L11
  79:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****         {
  80:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****             break;
  81:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****         }
  82:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** 
  83:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****         /**
  84:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****          * 2. Generate Random -
  85:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****          *       - Specify the Random type as TRNG
  86:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****          */
  87:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****         optiga_lib_status = OPTIGA_LIB_BUSY;
  84              	 .loc 1 87 0
  85 001e 194C     	 ldr r4,.L25+16
  88:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** 
  89:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****         return_status = optiga_crypt_random(me,
  86              	 .loc 1 89 0
  87 0020 0021     	 movs r1,#0
  87:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** 
  88              	 .loc 1 87 0
  89 0022 2280     	 strh r2,[r4]
  90              	 .loc 1 89 0
  91 0024 2023     	 movs r3,#32
  92 0026 6A46     	 mov r2,sp
  93 0028 FFF7FEFF 	 bl optiga_crypt_random
  94              	.LVL4:
  90:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****                                             OPTIGA_RNG_TYPE_TRNG,
  91:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****                                             random_data_buffer,
  92:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****                                             sizeof(random_data_buffer));
  93:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** 
  94:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****         WAIT_AND_CHECK_STATUS(return_status, optiga_lib_status);
  95              	 .loc 1 94 0
  96 002c 0246     	 mov r2,r0
  97 002e 50B9     	 cbnz r0,.L11
  98              	.L6:
  99              	 .loc 1 94 0 is_stmt 0 discriminator 1
 100 0030 2388     	 ldrh r3,[r4]
 101 0032 144A     	 ldr r2,.L25+16
 102 0034 9BB2     	 uxth r3,r3
 103 0036 012B     	 cmp r3,#1
 104 0038 FAD0     	 beq .L6
 105              	 .loc 1 94 0 discriminator 2
 106 003a 1388     	 ldrh r3,[r2]
 107 003c 9BB2     	 uxth r3,r3
 108 003e 43B1     	 cbz r3,.L7
 109              	 .loc 1 94 0 discriminator 3
 110 0040 1288     	 ldrh r2,[r2]
 111 0042 92B2     	 uxth r2,r2
 112              	.LVL5:
  95:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****         return_status = OPTIGA_LIB_SUCCESS;
  96:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** 
  97:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****     } while (FALSE);
  98:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****     OPTIGA_EXAMPLE_LOG_STATUS(return_status);
 113              	 .loc 1 98 0 is_stmt 1 discriminator 3
 114 0044 2AB1     	 cbz r2,.L7
 115              	.LVL6:
 116              	.L11:
 117              	 .loc 1 98 0 is_stmt 0 discriminator 1
 118 0046 0C48     	 ldr r0,.L25+4
 119 0048 0F49     	 ldr r1,.L25+20
 120 004a FFF7FEFF 	 bl optiga_lib_print_status
 121              	.LVL7:
  99:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****     if (me)
 122              	 .loc 1 99 0 is_stmt 1 discriminator 1
 123 004e 2DB9     	 cbnz r5,.L8
 124 0050 0DE0     	 b .L4
 125              	.L7:
  98:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****     if (me)
 126              	 .loc 1 98 0 discriminator 2
 127 0052 0948     	 ldr r0,.L25+4
 128 0054 0949     	 ldr r1,.L25+8
 129 0056 0022     	 movs r2,#0
 130 0058 FFF7FEFF 	 bl optiga_lib_print_status
 131              	.LVL8:
 132              	.L8:
 100:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****     {
 101:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****         //Destroy the instance after the completion of usecase if not required.
 102:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****         return_status = optiga_crypt_destroy(me);
 133              	 .loc 1 102 0
 134 005c 2846     	 mov r0,r5
 135 005e FFF7FEFF 	 bl optiga_crypt_destroy
 136              	.LVL9:
 103:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****         if(OPTIGA_LIB_SUCCESS != return_status)
 137              	 .loc 1 103 0
 138 0062 0246     	 mov r2,r0
 139 0064 18B1     	 cbz r0,.L4
 104:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****         {
 105:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****             //lint --e{774} suppress This is a generic macro
 106:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****             OPTIGA_EXAMPLE_LOG_STATUS(return_status);
 140              	 .loc 1 106 0 discriminator 1
 141 0066 0448     	 ldr r0,.L25+4
 142              	.LVL10:
 143 0068 0749     	 ldr r1,.L25+20
 144 006a FFF7FEFF 	 bl optiga_lib_print_status
 145              	.LVL11:
 146              	.L4:
 107:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****         }
 108:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c ****     }
 109:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_crypt_random.c **** }
 147              	 .loc 1 109 0
 148 006e 09B0     	 add sp,sp,#36
 149              	.LCFI2:
 150              	 .cfi_def_cfa_offset 12
 151              	 
 152 0070 30BD     	 pop {r4,r5,pc}
 153              	.LVL12:
 154              	.L26:
 155 0072 00BF     	 .align 2
 156              	.L25:
 157 0074 00000000 	 .word .LANCHOR1
 158 0078 00000000 	 .word .LC0
 159 007c 15000000 	 .word .LC1
 160 0080 00000000 	 .word optiga_crypt_callback
 161 0084 00000000 	 .word .LANCHOR0
 162 0088 1A000000 	 .word .LC2
 163              	 .cfi_endproc
 164              	.LFE1:
 166              	 .section .rodata.__FUNCTION__.5864,"a",%progbits
 167              	 .set .LANCHOR1,.+0
 170              	__FUNCTION__.5864:
 171 0000 6578616D 	 .ascii "example_optiga_crypt_random\000"
 171      706C655F 
 171      6F707469 
 171      67615F63 
 171      72797074 
 172              	 .section .rodata.str1.1,"aMS",%progbits,1
 173              	.LC0:
 174 0000 5B6F7074 	 .ascii "[optiga example]  : \000"
 174      69676120 
 174      6578616D 
 174      706C655D 
 174      20203A20 
 175              	.LC1:
 176 0015 1B5B306D 	 .ascii "\033[0m\000"
 176      00
 177              	.LC2:
 178 001a 1B5B3331 	 .ascii "\033[31m\000"
 178      6D00
 179              	 .section .bss.optiga_lib_status,"aw",%nobits
 180              	 .align 1
 181              	 .set .LANCHOR0,.+0
 184              	optiga_lib_status:
 185 0000 0000     	 .space 2
 186              	 .text
 187              	.Letext0:
 188              	 .file 2 "c:\\users\\yushev\\dave_4-4-2_32bit_2018-02-23\\dave-ide-4.4.2-32bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 189              	 .file 3 "c:\\users\\yushev\\dave_4-4-2_32bit_2018-02-23\\dave-ide-4.4.2-32bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 190              	 .file 4 "C:/Users/Yushev/git/optiga-trust-qi/optiga/include/optiga/common/optiga_lib_types.h"
 191              	 .file 5 "C:/Users/Yushev/git/optiga-trust-qi/optiga/include/optiga/common/optiga_lib_common.h"
 192              	 .file 6 "C:/Users/Yushev/git/optiga-trust-qi/optiga/include/optiga/cmd/optiga_cmd.h"
 193              	 .file 7 "C:/Users/Yushev/git/optiga-trust-qi/optiga/include/optiga/optiga_crypt.h"
 194              	 .file 8 "C:/Users/Yushev/git/optiga-trust-qi/optiga/include/optiga/common/optiga_lib_logger.h"
DEFINED SYMBOLS
                            *ABS*:00000000 example_optiga_crypt_random.c
    {standard input}:20     .text.optiga_crypt_callback:00000000 $t
    {standard input}:24     .text.optiga_crypt_callback:00000000 optiga_crypt_callback
    {standard input}:40     .text.optiga_crypt_callback:00000008 $d
    {standard input}:45     .text.example_optiga_crypt_random:00000000 $t
    {standard input}:50     .text.example_optiga_crypt_random:00000000 example_optiga_crypt_random
    {standard input}:157    .text.example_optiga_crypt_random:00000074 $d
    {standard input}:170    .rodata.__FUNCTION__.5864:00000000 __FUNCTION__.5864
    {standard input}:180    .bss.optiga_lib_status:00000000 $d
    {standard input}:184    .bss.optiga_lib_status:00000000 optiga_lib_status
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
optiga_lib_print_message
optiga_crypt_create
optiga_crypt_random
optiga_lib_print_status
optiga_crypt_destroy
