   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,4
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "example_optiga_util_update_count.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.optiga_util_callback,"ax",%progbits
  20              	 .align 1
  21              	 .thumb
  22              	 .thumb_func
  24              	optiga_util_callback:
  25              	.LFB0:
  26              	 .file 1 "C:/Users/Yushev/git/optiga-trust-qi/examples/optiga/example_optiga_util_update_count.c"
   1:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** /**
   2:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** * \copyright
   3:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** * MIT License
   4:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** *
   5:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** * Copyright (c) 2020 Infineon Technologies AG
   6:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** *
   7:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** * Permission is hereby granted, free of charge, to any person obtaining a copy
   8:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** * of this software and associated documentation files (the "Software"), to deal
   9:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** * in the Software without restriction, including without limitation the rights
  10:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  11:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** * copies of the Software, and to permit persons to whom the Software is
  12:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** * furnished to do so, subject to the following conditions:
  13:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** *
  14:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** * The above copyright notice and this permission notice shall be included in all
  15:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** * copies or substantial portions of the Software.
  16:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** *
  17:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  19:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  20:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  21:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  22:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  23:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** * SOFTWARE
  24:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** *
  25:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** * \endcopyright
  26:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** *
  27:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** * \author Infineon Technologies AG
  28:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** *
  29:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** * \file example_optiga_util_update_count.c
  30:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** *
  31:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** * \brief   This file provides the example to update the counter object value in OPTIGA using
  32:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** *          #optiga_util_update_count.
  33:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** *
  34:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** * \ingroup grOptigaExamples
  35:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** *
  36:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** * @{
  37:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** */
  38:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** 
  39:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** #include "optiga/optiga_util.h"
  40:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** #include "optiga_example.h"
  41:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** 
  42:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** /**
  43:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****  * Initialize the counter object with a threshold value 0x0A
  44:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****  */
  45:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** static const uint8_t initial_counter_object_data [] =
  46:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** {
  47:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****     //Initial counter value
  48:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****     0x00, 0x00, 0x00, 0x00,
  49:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****     //Threshold value
  50:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****     0x00, 0x00, 0x00, 0x0A,
  51:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** };
  52:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** /**
  53:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****  * Callback when optiga_util_xxxx operation is completed asynchronously
  54:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****  */
  55:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** static volatile optiga_lib_status_t optiga_lib_status;
  56:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** //lint --e{818} suppress "argument "context" is not used in the sample provided"
  57:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** static void optiga_util_callback(void * context, optiga_lib_status_t return_status)
  58:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** {
  27              	 .loc 1 58 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32              	.LVL0:
  59:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****     optiga_lib_status = return_status;
  33              	 .loc 1 59 0
  34 0000 014B     	 ldr r3,.L2
  35 0002 1980     	 strh r1,[r3]
  36 0004 7047     	 bx lr
  37              	.L3:
  38 0006 00BF     	 .align 2
  39              	.L2:
  40 0008 00000000 	 .word .LANCHOR0
  41              	 .cfi_endproc
  42              	.LFE0:
  44              	 .section .text.example_optiga_util_update_count,"ax",%progbits
  45              	 .align 1
  46              	 .global example_optiga_util_update_count
  47              	 .thumb
  48              	 .thumb_func
  50              	example_optiga_util_update_count:
  51              	.LFB1:
  60:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****     if (NULL != context)
  61:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****     {
  62:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****         // callback to upper layer here
  63:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****     }
  64:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** }
  65:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** 
  66:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** /**
  67:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****  * The below example demonstrates update counter functionalities
  68:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****  *
  69:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****  * Example for #optiga_util_update_count
  70:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****  *
  71:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****  */
  72:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** void example_optiga_util_update_count(void)
  73:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** {
  52              	 .loc 1 73 0
  53              	 .cfi_startproc
  54              	 
  55              	 
  56              	.LVL1:
  57 0000 37B5     	 push {r0,r1,r2,r4,r5,lr}
  58              	.LCFI0:
  59              	 .cfi_def_cfa_offset 24
  60              	 .cfi_offset 4,-12
  61              	 .cfi_offset 5,-8
  62              	 .cfi_offset 14,-4
  74:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****     uint16_t optiga_counter_oid;
  75:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****     uint8_t offset;
  76:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** 
  77:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****     optiga_lib_status_t return_status = !OPTIGA_LIB_SUCCESS;
  78:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****     optiga_util_t * me = NULL;
  79:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****     OPTIGA_EXAMPLE_LOG_MESSAGE(__FUNCTION__);
  63              	 .loc 1 79 0
  64 0002 2948     	 ldr r0,.L31
  65 0004 2949     	 ldr r1,.L31+4
  66 0006 2A4A     	 ldr r2,.L31+8
  67 0008 FFF7FEFF 	 bl optiga_lib_print_message
  68              	.LVL2:
  80:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** 
  81:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****     do
  82:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****     {
  83:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****         /**
  84:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****          * 1. Create OPTIGA Util Instance
  85:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****          */
  86:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****         me = optiga_util_create(0, optiga_util_callback, NULL);
  69              	 .loc 1 86 0
  70 000c 0020     	 movs r0,#0
  71 000e 0246     	 mov r2,r0
  72 0010 2849     	 ldr r1,.L31+12
  73 0012 FFF7FEFF 	 bl optiga_util_create
  74              	.LVL3:
  75 0016 0122     	 movs r2,#1
  87:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****         if (NULL == me)
  76              	 .loc 1 87 0
  77 0018 0546     	 mov r5,r0
  78 001a 60B3     	 cbz r0,.L14
  79              	.LVL4:
  88:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****         {
  89:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****             break;
  90:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****         }
  91:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** 
  92:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****         /**
  93:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****          * Pre-condition
  94:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****          * Any data object can be converted to counter data object by changing metadata as mentione
  95:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****          * - As precondition  write access should be always or LCSO < OPERATIONAL
  96:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****          * - Write metadata as "0xD0, 0x01, 0x01" using #optiga_util_write_metadata
  97:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****         */
  98:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** 
  99:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****         /**
 100:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****          * Write default count and threshold value to counter data object (e.g. E120)
 101:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****          * using optiga_util_write_data.
 102:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****          *
 103:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****          * Use Erase and Write (OPTIGA_UTIL_ERASE_AND_WRITE) option,
 104:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****          * in order to correctly update the used length of the object.
 105:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****          */
 106:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****         optiga_counter_oid = 0xE120;
 107:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****         offset = 0x00;
 108:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****         optiga_lib_status = OPTIGA_LIB_BUSY;
 109:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****         return_status = optiga_util_write_data(me,
  80              	 .loc 1 109 0
  81 001c 264B     	 ldr r3,.L31+16
 108:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****         return_status = optiga_util_write_data(me,
  82              	 .loc 1 108 0
  83 001e 274C     	 ldr r4,.L31+20
  84              	 .loc 1 109 0
  85 0020 0093     	 str r3,[sp]
  86 0022 0823     	 movs r3,#8
 108:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****         return_status = optiga_util_write_data(me,
  87              	 .loc 1 108 0
  88 0024 2280     	 strh r2,[r4]
  89              	 .loc 1 109 0
  90 0026 0193     	 str r3,[sp,#4]
  91 0028 4022     	 movs r2,#64
  92 002a 4EF22011 	 movw r1,#57632
  93 002e 0023     	 movs r3,#0
  94 0030 FFF7FEFF 	 bl optiga_util_write_data
  95              	.LVL5:
 110:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****                                                optiga_counter_oid,
 111:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****                                                OPTIGA_UTIL_ERASE_AND_WRITE,
 112:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****                                                offset,
 113:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****                                                initial_counter_object_data,
 114:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****                                                sizeof(initial_counter_object_data));
 115:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** 
 116:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****         WAIT_AND_CHECK_STATUS(return_status, optiga_lib_status);
  96              	 .loc 1 116 0
  97 0034 0246     	 mov r2,r0
  98 0036 F0B9     	 cbnz r0,.L14
  99              	.L6:
 100              	 .loc 1 116 0 is_stmt 0 discriminator 1
 101 0038 2288     	 ldrh r2,[r4]
 102 003a 204B     	 ldr r3,.L31+20
 103 003c 92B2     	 uxth r2,r2
 104 003e 012A     	 cmp r2,#1
 105 0040 FAD0     	 beq .L6
 106              	 .loc 1 116 0 discriminator 2
 107 0042 1A88     	 ldrh r2,[r3]
 108 0044 92B2     	 uxth r2,r2
 109 0046 0AB1     	 cbz r2,.L7
 110              	 .loc 1 116 0 discriminator 3
 111 0048 1A88     	 ldrh r2,[r3]
 112 004a 12E0     	 b .L29
 113              	.L7:
 117:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** 
 118:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****         // In this example, the counter is update by 5 and the final count would be 15
 119:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****         optiga_lib_status = OPTIGA_LIB_BUSY;
 114              	 .loc 1 119 0 is_stmt 1
 115 004c 0122     	 movs r2,#1
 116 004e 1A80     	 strh r2,[r3]
 120:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****         return_status = optiga_util_update_count(me,
 117              	 .loc 1 120 0
 118 0050 2846     	 mov r0,r5
 119              	.LVL6:
 120 0052 0522     	 movs r2,#5
 121 0054 4EF22011 	 movw r1,#57632
 122 0058 FFF7FEFF 	 bl optiga_util_update_count
 123              	.LVL7:
 121:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****                                                  optiga_counter_oid,
 122:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****                                                  0x05);
 123:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** 
 124:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****         WAIT_AND_CHECK_STATUS(return_status, optiga_lib_status);
 124              	 .loc 1 124 0
 125 005c 0246     	 mov r2,r0
 126 005e 50B9     	 cbnz r0,.L14
 127              	.L9:
 128              	 .loc 1 124 0 is_stmt 0 discriminator 1
 129 0060 2388     	 ldrh r3,[r4]
 130 0062 164A     	 ldr r2,.L31+20
 131 0064 9BB2     	 uxth r3,r3
 132 0066 012B     	 cmp r3,#1
 133 0068 FAD0     	 beq .L9
 134              	 .loc 1 124 0 discriminator 2
 135 006a 1388     	 ldrh r3,[r2]
 136 006c 9BB2     	 uxth r3,r3
 137 006e 43B1     	 cbz r3,.L10
 138              	 .loc 1 124 0 discriminator 3
 139 0070 1288     	 ldrh r2,[r2]
 140              	.L29:
 141 0072 92B2     	 uxth r2,r2
 142              	.LVL8:
 125:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****         return_status = OPTIGA_LIB_SUCCESS;
 126:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****     } while (FALSE);
 127:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****     OPTIGA_EXAMPLE_LOG_STATUS(return_status);
 143              	 .loc 1 127 0 is_stmt 1 discriminator 3
 144 0074 2AB1     	 cbz r2,.L10
 145              	.LVL9:
 146              	.L14:
 147              	 .loc 1 127 0 is_stmt 0 discriminator 1
 148 0076 0D48     	 ldr r0,.L31+4
 149 0078 1149     	 ldr r1,.L31+24
 150 007a FFF7FEFF 	 bl optiga_lib_print_status
 151              	.LVL10:
 128:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****     
 129:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****     if (me)
 152              	 .loc 1 129 0 is_stmt 1 discriminator 1
 153 007e 2DB9     	 cbnz r5,.L11
 154 0080 10E0     	 b .L4
 155              	.LVL11:
 156              	.L10:
 127:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****     
 157              	 .loc 1 127 0
 158 0082 0A48     	 ldr r0,.L31+4
 159 0084 0A49     	 ldr r1,.L31+8
 160 0086 0022     	 movs r2,#0
 161 0088 FFF7FEFF 	 bl optiga_lib_print_status
 162              	.LVL12:
 163              	.L11:
 130:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****     {
 131:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****         //Destroy the instance after the completion of usecase if not required.
 132:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****         return_status = optiga_util_destroy(me);
 164              	 .loc 1 132 0
 165 008c 2846     	 mov r0,r5
 166 008e FFF7FEFF 	 bl optiga_util_destroy
 167              	.LVL13:
 133:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****         if(OPTIGA_LIB_SUCCESS != return_status)
 168              	 .loc 1 133 0
 169 0092 0246     	 mov r2,r0
 170 0094 30B1     	 cbz r0,.L4
 134:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****         {
 135:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****             //lint --e{774} suppress This is a generic macro
 136:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****             OPTIGA_EXAMPLE_LOG_STATUS(return_status);
 171              	 .loc 1 136 0 discriminator 1
 172 0096 0548     	 ldr r0,.L31+4
 173              	.LVL14:
 174 0098 0949     	 ldr r1,.L31+24
 137:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****         }
 138:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****     }
 139:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c **** }
 175              	 .loc 1 139 0 discriminator 1
 176 009a 03B0     	 add sp,sp,#12
 177              	.LCFI1:
 178              	 .cfi_remember_state
 179              	 .cfi_def_cfa_offset 12
 180              	 
 181 009c BDE83040 	 pop {r4,r5,lr}
 182              	.LCFI2:
 183              	 .cfi_restore 14
 184              	 .cfi_restore 5
 185              	 .cfi_restore 4
 186              	 .cfi_def_cfa_offset 0
 187              	.LVL15:
 136:C:/Users/Yushev/git/optiga-trust-qi/examples/optiga\example_optiga_util_update_count.c ****         }
 188              	 .loc 1 136 0 discriminator 1
 189 00a0 FFF7FEBF 	 b optiga_lib_print_status
 190              	.LVL16:
 191              	.L4:
 192              	.LCFI3:
 193              	 .cfi_restore_state
 194              	 .loc 1 139 0
 195 00a4 03B0     	 add sp,sp,#12
 196              	.LCFI4:
 197              	 .cfi_def_cfa_offset 12
 198              	 
 199 00a6 30BD     	 pop {r4,r5,pc}
 200              	.LVL17:
 201              	.L32:
 202              	 .align 2
 203              	.L31:
 204 00a8 00000000 	 .word .LANCHOR1
 205 00ac 00000000 	 .word .LC0
 206 00b0 15000000 	 .word .LC1
 207 00b4 00000000 	 .word optiga_util_callback
 208 00b8 00000000 	 .word .LANCHOR2
 209 00bc 00000000 	 .word .LANCHOR0
 210 00c0 1A000000 	 .word .LC2
 211              	 .cfi_endproc
 212              	.LFE1:
 214              	 .section .rodata.__FUNCTION__.5864,"a",%progbits
 215              	 .set .LANCHOR1,.+0
 218              	__FUNCTION__.5864:
 219 0000 6578616D 	 .ascii "example_optiga_util_update_count\000"
 219      706C655F 
 219      6F707469 
 219      67615F75 
 219      74696C5F 
 220              	 .section .rodata.str1.1,"aMS",%progbits,1
 221              	.LC0:
 222 0000 5B6F7074 	 .ascii "[optiga example]  : \000"
 222      69676120 
 222      6578616D 
 222      706C655D 
 222      20203A20 
 223              	.LC1:
 224 0015 1B5B306D 	 .ascii "\033[0m\000"
 224      00
 225              	.LC2:
 226 001a 1B5B3331 	 .ascii "\033[31m\000"
 226      6D00
 227              	 .section .rodata.initial_counter_object_data,"a",%progbits
 228              	 .set .LANCHOR2,.+0
 231              	initial_counter_object_data:
 232 0000 00       	 .byte 0
 233 0001 00       	 .byte 0
 234 0002 00       	 .byte 0
 235 0003 00       	 .byte 0
 236 0004 00       	 .byte 0
 237 0005 00       	 .byte 0
 238 0006 00       	 .byte 0
 239 0007 0A       	 .byte 10
 240              	 .section .bss.optiga_lib_status,"aw",%nobits
 241              	 .align 1
 242              	 .set .LANCHOR0,.+0
 245              	optiga_lib_status:
 246 0000 0000     	 .space 2
 247              	 .text
 248              	.Letext0:
 249              	 .file 2 "c:\\users\\yushev\\dave_4-4-2_32bit_2018-02-23\\dave-ide-4.4.2-32bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 250              	 .file 3 "c:\\users\\yushev\\dave_4-4-2_32bit_2018-02-23\\dave-ide-4.4.2-32bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 251              	 .file 4 "C:/Users/Yushev/git/optiga-trust-qi/optiga/include/optiga/common/optiga_lib_types.h"
 252              	 .file 5 "C:/Users/Yushev/git/optiga-trust-qi/optiga/include/optiga/common/optiga_lib_common.h"
 253              	 .file 6 "C:/Users/Yushev/git/optiga-trust-qi/optiga/include/optiga/cmd/optiga_cmd.h"
 254              	 .file 7 "C:/Users/Yushev/git/optiga-trust-qi/optiga/include/optiga/optiga_util.h"
 255              	 .file 8 "C:/Users/Yushev/git/optiga-trust-qi/optiga/include/optiga/common/optiga_lib_logger.h"
DEFINED SYMBOLS
                            *ABS*:00000000 example_optiga_util_update_count.c
    {standard input}:20     .text.optiga_util_callback:00000000 $t
    {standard input}:24     .text.optiga_util_callback:00000000 optiga_util_callback
    {standard input}:40     .text.optiga_util_callback:00000008 $d
    {standard input}:45     .text.example_optiga_util_update_count:00000000 $t
    {standard input}:50     .text.example_optiga_util_update_count:00000000 example_optiga_util_update_count
    {standard input}:204    .text.example_optiga_util_update_count:000000a8 $d
    {standard input}:218    .rodata.__FUNCTION__.5864:00000000 __FUNCTION__.5864
    {standard input}:231    .rodata.initial_counter_object_data:00000000 initial_counter_object_data
    {standard input}:241    .bss.optiga_lib_status:00000000 $d
    {standard input}:245    .bss.optiga_lib_status:00000000 optiga_lib_status
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
optiga_lib_print_message
optiga_util_create
optiga_util_write_data
optiga_util_update_count
optiga_lib_print_status
optiga_util_destroy
