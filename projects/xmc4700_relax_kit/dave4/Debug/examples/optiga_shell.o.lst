   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,4
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "optiga_shell.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.optiga_util_callback,"ax",%progbits
  20              	 .align 1
  21              	 .thumb
  22              	 .thumb_func
  24              	optiga_util_callback:
  25              	.LFB387:
  26              	 .file 1 "C:/Users/Yushev/git/optiga-trust-qi/examples/optiga_shell.c"
   1:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** /**
   2:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** * \copyright
   3:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** * MIT License
   4:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** *
   5:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** * Copyright (c) 2020 Infineon Technologies AG
   6:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** *
   7:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** * Permission is hereby granted, free of charge, to any person obtaining a copy
   8:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** * of this software and associated documentation files (the "Software"), to deal
   9:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** * in the Software without restriction, including without limitation the rights
  10:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  11:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** * copies of the Software, and to permit persons to whom the Software is
  12:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** * furnished to do so, subject to the following conditions:
  13:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** *
  14:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** * The above copyright notice and this permission notice shall be included in all
  15:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** * copies or substantial portions of the Software.
  16:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** *
  17:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  19:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  20:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  21:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  22:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  23:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** * SOFTWARE
  24:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** *
  25:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** * \endcopyright
  26:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** *
  27:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** * \author Infineon Technologies AG
  28:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** *
  29:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** * \file optiga_shell.c
  30:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** *
  31:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** * \brief   This file provides the shell prompt implementation.
  32:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** *
  33:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** * \ingroup grOptigaExamples
  34:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** *
  35:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** * @{
  36:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** */
  37:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
  38:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #include <DAVE.h>
  39:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #include "optiga/optiga_crypt.h"
  40:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #include "optiga/optiga_util.h"
  41:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #include "optiga/common/optiga_lib_logger.h"
  42:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #include "optiga/pal/pal_os_event.h"
  43:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #include "optiga/pal/pal.h"
  44:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #include "optiga/pal/pal_os_timer.h"
  45:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #include "optiga_example.h"
  46:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #include "optiga/pal/pal_logger.h"
  47:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
  48:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #define OPTIGA_SHELL_MODULE "[optiga shell]  : "
  49:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #define OPTIGA_SHELL_LOG_MESSAGE(msg) \
  50:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                             optiga_lib_print_message(msg, OPTIGA_SHELL_MODULE, OPTIGA_LIB_LOGGER_CO
  51:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                             
  52:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #define OPTIGA_SHELL_LOG_ERROR_MESSAGE(msg) \
  53:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                             optiga_lib_print_message(msg, OPTIGA_SHELL_MODULE, OPTIGA_LIB_LOGGER_CO
  54:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
  55:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** extern void example_optiga_crypt_hash (void);
  56:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** extern void example_optiga_crypt_ecc_generate_keypair(void);
  57:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** extern void example_optiga_crypt_ecdsa_sign(void);
  58:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** extern void example_optiga_crypt_ecdsa_verify(void);
  59:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** extern void example_optiga_crypt_random(void);
  60:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** extern void example_optiga_util_read_data(void);
  61:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** extern void example_optiga_util_write_data(void);
  62:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** extern void example_optiga_util_update_count(void);
  63:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** extern void example_optiga_util_protected_update(void);
  64:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** extern void example_pair_host_and_optiga_using_pre_shared_secret(void);
  65:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** extern void example_optiga_util_hibernate_restore(void);
  66:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** extern void example_read_coprocessor_id(void);
  67:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** extern void example_optiga_crypt_hash_data(void);
  68:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
  69:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** extern pal_logger_t logger_console;
  70:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** /**
  71:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****  * Callback when optiga_util_xxxx operation is completed asynchronously
  72:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****  */
  73:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** static volatile optiga_lib_status_t optiga_lib_status;
  74:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** //lint --e{818,715} suppress "argument "context" is not used in the sample provided"
  75:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** static void optiga_util_callback(void * context, optiga_lib_status_t return_status)
  76:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** {
  27              	 .loc 1 76 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32              	.LVL0:
  77:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     optiga_lib_status = return_status;
  33              	 .loc 1 77 0
  34 0000 014B     	 ldr r3,.L2
  35 0002 1980     	 strh r1,[r3]
  36 0004 7047     	 bx lr
  37              	.L3:
  38 0006 00BF     	 .align 2
  39              	.L2:
  40 0008 00000000 	 .word .LANCHOR0
  41              	 .cfi_endproc
  42              	.LFE387:
  44              	 .section .text.optiga_shell_crypt_ecdsa_verify,"ax",%progbits
  45              	 .align 1
  46              	 .thumb
  47              	 .thumb_func
  49              	optiga_shell_crypt_ecdsa_verify:
  50              	.LFB402:
  78:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
  79:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
  80:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** optiga_util_t * me_util = NULL;
  81:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
  82:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** typedef struct optiga_example_cmd
  83:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** {
  84:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     const char_t * cmd_description;
  85:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     const char_t * cmd_options;
  86:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     void (*cmd_handler)(void);
  87:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }optiga_example_cmd_t;
  88:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
  89:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** static void optiga_shell_init(void)
  90:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** {
  91:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     optiga_lib_status_t return_status;
  92:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     uint16_t optiga_oid = 0xE0C4;
  93:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     uint8_t required_current = 15;
  94:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
  95:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     do
  96:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     {
  97:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         if (NULL == me_util)
  98:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {
  99:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             //Create an instance of optiga_util to open the application on OPTIGA.
 100:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             me_util = optiga_util_create(0, optiga_util_callback, NULL);
 101:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         }
 102:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 103:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         OPTIGA_EXAMPLE_LOG_MESSAGE("Initializing OPTIGA for example demonstration...\n");
 104:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         /**
 105:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****          * Open the application on OPTIGA which is a precondition to perform any other operations
 106:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****          * using optiga_util_open_application
 107:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****          */
 108:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         optiga_lib_status = OPTIGA_LIB_BUSY;
 109:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         return_status = optiga_util_open_application(me_util, 0);
 110:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 111:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         if (OPTIGA_LIB_SUCCESS != return_status)
 112:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {
 113:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             break;
 114:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         }
 115:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         while (optiga_lib_status == OPTIGA_LIB_BUSY)
 116:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {
 117:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             //Wait until the optiga_util_open_application is completed
 118:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         }
 119:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         if (OPTIGA_LIB_SUCCESS != optiga_lib_status)
 120:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {
 121:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             //optiga util open application failed
 122:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             break;
 123:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         }
 124:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 125:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         OPTIGA_SHELL_LOG_MESSAGE("Initializing OPTIGA completed...\n\n");
 126:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         OPTIGA_SHELL_LOG_MESSAGE("Begin pairing of host and OPTIGA...");
 127:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         // Usercase: Generate the pre-shared secret on host and write it to OPTIGA
 128:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         example_pair_host_and_optiga_using_pre_shared_secret();
 129:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         OPTIGA_SHELL_LOG_MESSAGE("Pairing of host and OPTIGA completed...");
 130:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         // Usercase: Generate the pre-shared secret on host and write it to OPTIGA
 131:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         return_status = optiga_util_write_data(me_util,
 132:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                                                optiga_oid,
 133:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                                                OPTIGA_UTIL_ERASE_AND_WRITE,
 134:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                                                0,
 135:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                                                &required_current,
 136:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                                                1);
 137:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 138:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         if (OPTIGA_LIB_SUCCESS != return_status)
 139:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {
 140:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             break;
 141:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         }
 142:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 143:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         while (OPTIGA_LIB_BUSY == optiga_lib_status)
 144:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {
 145:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             //Wait until the optiga_util_write_data operation is completed
 146:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         }
 147:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         OPTIGA_SHELL_LOG_MESSAGE("Setting current limitation to maximum...");
 148:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         OPTIGA_SHELL_LOG_MESSAGE("Starting OPTIGA example demonstration..\n");
 149:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     }while(FALSE);
 150:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 151:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 152:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** static void optiga_shell_deinit(void)
 153:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** {
 154:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     optiga_lib_status_t return_status;
 155:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     do
 156:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     {
 157:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         /**
 158:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****          * Close the application on OPTIGA after all the operations are executed
 159:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****          * using optiga_util_close_application
 160:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****          */
 161:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         optiga_lib_status = OPTIGA_LIB_BUSY;
 162:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         return_status = optiga_util_close_application(me_util, 0);
 163:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 164:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         if (OPTIGA_LIB_SUCCESS != return_status)
 165:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {
 166:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             break;
 167:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         }
 168:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 169:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         while (optiga_lib_status == OPTIGA_LIB_BUSY)
 170:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {
 171:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             //Wait until the optiga_util_close_application is completed
 172:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         }
 173:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 174:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         if (OPTIGA_LIB_SUCCESS != optiga_lib_status)
 175:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {
 176:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             //optiga util close application failed
 177:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             break;
 178:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         }
 179:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 180:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         if (NULL != me_util)
 181:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {
 182:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             // destroy util and crypt instances
 183:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             //lint --e{534} suppress "Error handling is not required so return value is not checked
 184:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             optiga_util_destroy(me_util);
 185:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         }
 186:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     }while(FALSE);
 187:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 188:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 189:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** static void optiga_shell_util_read_data(void)
 190:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** {
 191:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("Starting Read Data/Metadata Example");
 192:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("1 Step: Read Certificate ");
 193:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("2 Step: Read Certificate Metadata");
 194:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     example_optiga_util_read_data();
 195:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 196:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 197:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** static void optiga_shell_util_write_data(void)
 198:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** {
 199:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("Starting Write Data/Metadata Example");
 200:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("1 Step: Write Sample Certificate in Trust Anchor Data Object ");
 201:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("2 Step: Write new Metadata");
 202:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     example_optiga_util_write_data();
 203:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 204:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 205:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** static void optiga_shell_util_read_coprocessor_id(void)
 206:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** {
 207:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("Starting reading of Coprocessor ID and displaying it's individual com
 208:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("1 Step: Read Coprocessor UID from OID(0xE0C2) ");
 209:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     example_read_coprocessor_id();
 210:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 211:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 212:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** static void optiga_shell_pair_host_optiga(void)
 213:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** {
 214:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("Starting Pairing of Host and Trust Qi Example");
 215:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("1 Step: Read and Check existing Metadata for the Binding Secret");
 216:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("2 Step: Generate Random for the new Binding Secret");
 217:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("3 Step: Write new Binding Secret");
 218:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("4 Step: Store new Binding Secret on the Host");
 219:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     example_pair_host_and_optiga_using_pre_shared_secret();
 220:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 221:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 222:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** static void optiga_shell_util_hibernate_restore(void)
 223:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** {
 224:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("Starting Hibernate and Restore Example");
 225:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("1 Step: Open Application on the security chip");
 226:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("2 Step: Pair the host and the security chip");
 227:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("3 Step: Select Protected I2C Connection");
 228:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("4 Step: Generate ECC NIST P-256 Key pair and store it in Session Data
 229:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("5 Step: Check Security Event Counter and wait till it reaches 0");
 230:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("6 Step: Perform Close application with Hibernate parameter set to Tru
 231:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("7 Step: Open Application on the security chip");
 232:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("8 Step: Sign prepared data with private key stored in Session Data Ob
 233:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("9 Step: Verify the signature with the public key generated previously
 234:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("10 Step: Close Application on the chip");
 235:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("Important note: To continue with other examples you need to call the 
 236:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     example_optiga_util_hibernate_restore();
 237:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 238:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 239:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** static void optiga_shell_util_update_count(void)
 240:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** {
 241:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("Starting Update Counter Example");
 242:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("1 Step: Write Initial Counter Value");
 243:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("2 Step: Increase Counter Object");
 244:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     example_optiga_util_update_count();
 245:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 246:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 247:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** static void optiga_shell_util_protected_update(void)
 248:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** {
 249:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("Starting Protected Update Example");
 250:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("1 Step: Update Metadata for the Object to be updated and the Trust An
 251:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("2 Step: Write Trust Anchor used by the Trust Qi to verify the update"
 252:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("3 Step: Start Protected update with prepared manifest and fragments")
 253:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     example_optiga_util_protected_update();
 254:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 255:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 256:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** static void optiga_shell_crypt_hash(void)
 257:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** {
 258:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #ifdef OPTIGA_CRYPT_HASH_ENABLED
 259:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("Starting Hash Example");
 260:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("1 Step: Hash given data with Start, Update and Finalize calls");
 261:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     example_optiga_crypt_hash();
 262:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #else
 263:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****      OPTIGA_SHELL_LOG_ERROR_MESSAGE("This option is disabled, to use this option enable macro OPTIG
 264:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #endif
 265:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 266:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 267:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** static void optiga_shell_crypt_hash_data(void)
 268:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** {
 269:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #ifdef OPTIGA_CRYPT_HASH_ENABLED
 270:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("Starting generation of digest Example");
 271:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("1 Step: Generate hash of given user data ");
 272:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     example_optiga_crypt_hash_data();
 273:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #else
 274:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****      OPTIGA_SHELL_LOG_ERROR_MESSAGE("This option is disabled, to use this option enable macro OPTIG
 275:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #endif
 276:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 277:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 278:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 279:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** static void optiga_shell_crypt_random(void)
 280:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** {
 281:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("Starting Generate Random Example");
 282:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("1 Step: Generate 32 bytes random");
 283:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     example_optiga_crypt_random();
 284:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 285:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 286:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** static void optiga_shell_crypt_ecc_generate_keypair(void)
 287:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** {
 288:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #ifdef OPTIGA_CRYPT_ECC_GENERATE_KEYPAIR_ENABLED
 289:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("Starting generate ECC Key Example");
 290:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("1 Step: Generate ECC NIST P-256 Key Pair and export the public key");
 291:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     example_optiga_crypt_ecc_generate_keypair();
 292:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #else
 293:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****      OPTIGA_SHELL_LOG_ERROR_MESSAGE("This option is disabled, to use this option enable macro OPTIG
 294:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #endif
 295:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 296:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 297:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** static void optiga_shell_crypt_ecdsa_sign(void)
 298:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** {
 299:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #ifdef OPTIGA_CRYPT_ECDSA_SIGN_ENABLED
 300:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("Starting signing example for Elliptic-curve Digital Signature Algorit
 301:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("1 Step: Sign prepared Data and export the signature");
 302:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     example_optiga_crypt_ecdsa_sign();
 303:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #else
 304:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****      OPTIGA_SHELL_LOG_ERROR_MESSAGE("This option is disabled, to use this option enable macro OPTIG
 305:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #endif
 306:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 307:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 308:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** static void optiga_shell_crypt_ecdsa_verify(void)
 309:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** {
  51              	 .loc 1 309 0
  52              	 .cfi_startproc
  53              	 
  54              	 
  55 0000 38B5     	 push {r3,r4,r5,lr}
  56              	.LCFI0:
  57              	 .cfi_def_cfa_offset 16
  58              	 .cfi_offset 3,-16
  59              	 .cfi_offset 4,-12
  60              	 .cfi_offset 5,-8
  61              	 .cfi_offset 14,-4
 310:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #ifdef OPTIGA_CRYPT_ECDSA_VERIFY_ENABLED
 311:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("Starting verification example for Elliptic-curve Digital Signature Al
  62              	 .loc 1 311 0
  63 0002 084D     	 ldr r5,.L5
  64 0004 084C     	 ldr r4,.L5+4
  65 0006 0948     	 ldr r0,.L5+8
  66 0008 2946     	 mov r1,r5
  67 000a 2246     	 mov r2,r4
  68 000c FFF7FEFF 	 bl optiga_lib_print_message
  69              	.LVL1:
 312:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("1 Step: Verify prepared signature, with prepared public key and diges
  70              	 .loc 1 312 0
  71 0010 2946     	 mov r1,r5
  72 0012 2246     	 mov r2,r4
  73 0014 0648     	 ldr r0,.L5+12
  74 0016 FFF7FEFF 	 bl optiga_lib_print_message
  75              	.LVL2:
 313:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     example_optiga_crypt_ecdsa_verify();
 314:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #else
 315:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****      OPTIGA_SHELL_LOG_ERROR_MESSAGE("This option is disabled, to use this option enable macro OPTIG
 316:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #endif
 317:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
  76              	 .loc 1 317 0
  77 001a BDE83840 	 pop {r3,r4,r5,lr}
  78              	.LCFI1:
  79              	 .cfi_restore 14
  80              	 .cfi_restore 5
  81              	 .cfi_restore 4
  82              	 .cfi_restore 3
  83              	 .cfi_def_cfa_offset 0
 313:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     example_optiga_crypt_ecdsa_verify();
  84              	 .loc 1 313 0
  85 001e FFF7FEBF 	 b example_optiga_crypt_ecdsa_verify
  86              	.LVL3:
  87              	.L6:
  88 0022 00BF     	 .align 2
  89              	.L5:
  90 0024 55000000 	 .word .LC1
  91 0028 68000000 	 .word .LC2
  92 002c 00000000 	 .word .LC0
  93 0030 6E000000 	 .word .LC3
  94              	 .cfi_endproc
  95              	.LFE402:
  97              	 .section .text.optiga_shell_crypt_ecdsa_sign,"ax",%progbits
  98              	 .align 1
  99              	 .thumb
 100              	 .thumb_func
 102              	optiga_shell_crypt_ecdsa_sign:
 103              	.LFB401:
 298:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #ifdef OPTIGA_CRYPT_ECDSA_SIGN_ENABLED
 104              	 .loc 1 298 0
 105              	 .cfi_startproc
 106              	 
 107              	 
 108 0000 38B5     	 push {r3,r4,r5,lr}
 109              	.LCFI2:
 110              	 .cfi_def_cfa_offset 16
 111              	 .cfi_offset 3,-16
 112              	 .cfi_offset 4,-12
 113              	 .cfi_offset 5,-8
 114              	 .cfi_offset 14,-4
 300:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("1 Step: Sign prepared Data and export the signature");
 115              	 .loc 1 300 0
 116 0002 084D     	 ldr r5,.L8
 117 0004 084C     	 ldr r4,.L8+4
 118 0006 0948     	 ldr r0,.L8+8
 119 0008 2946     	 mov r1,r5
 120 000a 2246     	 mov r2,r4
 121 000c FFF7FEFF 	 bl optiga_lib_print_message
 122              	.LVL4:
 301:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     example_optiga_crypt_ecdsa_sign();
 123              	 .loc 1 301 0
 124 0010 2946     	 mov r1,r5
 125 0012 2246     	 mov r2,r4
 126 0014 0648     	 ldr r0,.L8+12
 127 0016 FFF7FEFF 	 bl optiga_lib_print_message
 128              	.LVL5:
 306:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 129              	 .loc 1 306 0
 130 001a BDE83840 	 pop {r3,r4,r5,lr}
 131              	.LCFI3:
 132              	 .cfi_restore 14
 133              	 .cfi_restore 5
 134              	 .cfi_restore 4
 135              	 .cfi_restore 3
 136              	 .cfi_def_cfa_offset 0
 302:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #else
 137              	 .loc 1 302 0
 138 001e FFF7FEBF 	 b example_optiga_crypt_ecdsa_sign
 139              	.LVL6:
 140              	.L9:
 141 0022 00BF     	 .align 2
 142              	.L8:
 143 0024 55000000 	 .word .LC1
 144 0028 68000000 	 .word .LC2
 145 002c B5000000 	 .word .LC4
 146 0030 05010000 	 .word .LC5
 147              	 .cfi_endproc
 148              	.LFE401:
 150              	 .section .text.optiga_shell_crypt_ecc_generate_keypair,"ax",%progbits
 151              	 .align 1
 152              	 .thumb
 153              	 .thumb_func
 155              	optiga_shell_crypt_ecc_generate_keypair:
 156              	.LFB400:
 287:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #ifdef OPTIGA_CRYPT_ECC_GENERATE_KEYPAIR_ENABLED
 157              	 .loc 1 287 0
 158              	 .cfi_startproc
 159              	 
 160              	 
 161 0000 38B5     	 push {r3,r4,r5,lr}
 162              	.LCFI4:
 163              	 .cfi_def_cfa_offset 16
 164              	 .cfi_offset 3,-16
 165              	 .cfi_offset 4,-12
 166              	 .cfi_offset 5,-8
 167              	 .cfi_offset 14,-4
 289:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("1 Step: Generate ECC NIST P-256 Key Pair and export the public key");
 168              	 .loc 1 289 0
 169 0002 084D     	 ldr r5,.L11
 170 0004 084C     	 ldr r4,.L11+4
 171 0006 0948     	 ldr r0,.L11+8
 172 0008 2946     	 mov r1,r5
 173 000a 2246     	 mov r2,r4
 174 000c FFF7FEFF 	 bl optiga_lib_print_message
 175              	.LVL7:
 290:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     example_optiga_crypt_ecc_generate_keypair();
 176              	 .loc 1 290 0
 177 0010 2946     	 mov r1,r5
 178 0012 2246     	 mov r2,r4
 179 0014 0648     	 ldr r0,.L11+12
 180 0016 FFF7FEFF 	 bl optiga_lib_print_message
 181              	.LVL8:
 295:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 182              	 .loc 1 295 0
 183 001a BDE83840 	 pop {r3,r4,r5,lr}
 184              	.LCFI5:
 185              	 .cfi_restore 14
 186              	 .cfi_restore 5
 187              	 .cfi_restore 4
 188              	 .cfi_restore 3
 189              	 .cfi_def_cfa_offset 0
 291:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #else
 190              	 .loc 1 291 0
 191 001e FFF7FEBF 	 b example_optiga_crypt_ecc_generate_keypair
 192              	.LVL9:
 193              	.L12:
 194 0022 00BF     	 .align 2
 195              	.L11:
 196 0024 55000000 	 .word .LC1
 197 0028 68000000 	 .word .LC2
 198 002c 39010000 	 .word .LC6
 199 0030 5B010000 	 .word .LC7
 200              	 .cfi_endproc
 201              	.LFE400:
 203              	 .section .text.optiga_shell_crypt_random,"ax",%progbits
 204              	 .align 1
 205              	 .thumb
 206              	 .thumb_func
 208              	optiga_shell_crypt_random:
 209              	.LFB399:
 280:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("Starting Generate Random Example");
 210              	 .loc 1 280 0
 211              	 .cfi_startproc
 212              	 
 213              	 
 214 0000 38B5     	 push {r3,r4,r5,lr}
 215              	.LCFI6:
 216              	 .cfi_def_cfa_offset 16
 217              	 .cfi_offset 3,-16
 218              	 .cfi_offset 4,-12
 219              	 .cfi_offset 5,-8
 220              	 .cfi_offset 14,-4
 281:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("1 Step: Generate 32 bytes random");
 221              	 .loc 1 281 0
 222 0002 084D     	 ldr r5,.L14
 223 0004 084C     	 ldr r4,.L14+4
 224 0006 0948     	 ldr r0,.L14+8
 225 0008 2946     	 mov r1,r5
 226 000a 2246     	 mov r2,r4
 227 000c FFF7FEFF 	 bl optiga_lib_print_message
 228              	.LVL10:
 282:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     example_optiga_crypt_random();
 229              	 .loc 1 282 0
 230 0010 2946     	 mov r1,r5
 231 0012 2246     	 mov r2,r4
 232 0014 0648     	 ldr r0,.L14+12
 233 0016 FFF7FEFF 	 bl optiga_lib_print_message
 234              	.LVL11:
 284:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 235              	 .loc 1 284 0
 236 001a BDE83840 	 pop {r3,r4,r5,lr}
 237              	.LCFI7:
 238              	 .cfi_restore 14
 239              	 .cfi_restore 5
 240              	 .cfi_restore 4
 241              	 .cfi_restore 3
 242              	 .cfi_def_cfa_offset 0
 283:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 243              	 .loc 1 283 0
 244 001e FFF7FEBF 	 b example_optiga_crypt_random
 245              	.LVL12:
 246              	.L15:
 247 0022 00BF     	 .align 2
 248              	.L14:
 249 0024 55000000 	 .word .LC1
 250 0028 68000000 	 .word .LC2
 251 002c 9E010000 	 .word .LC8
 252 0030 BF010000 	 .word .LC9
 253              	 .cfi_endproc
 254              	.LFE399:
 256              	 .section .text.optiga_shell_crypt_hash_data,"ax",%progbits
 257              	 .align 1
 258              	 .thumb
 259              	 .thumb_func
 261              	optiga_shell_crypt_hash_data:
 262              	.LFB398:
 268:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #ifdef OPTIGA_CRYPT_HASH_ENABLED
 263              	 .loc 1 268 0
 264              	 .cfi_startproc
 265              	 
 266              	 
 267 0000 38B5     	 push {r3,r4,r5,lr}
 268              	.LCFI8:
 269              	 .cfi_def_cfa_offset 16
 270              	 .cfi_offset 3,-16
 271              	 .cfi_offset 4,-12
 272              	 .cfi_offset 5,-8
 273              	 .cfi_offset 14,-4
 270:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("1 Step: Generate hash of given user data ");
 274              	 .loc 1 270 0
 275 0002 084D     	 ldr r5,.L17
 276 0004 084C     	 ldr r4,.L17+4
 277 0006 0948     	 ldr r0,.L17+8
 278 0008 2946     	 mov r1,r5
 279 000a 2246     	 mov r2,r4
 280 000c FFF7FEFF 	 bl optiga_lib_print_message
 281              	.LVL13:
 271:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     example_optiga_crypt_hash_data();
 282              	 .loc 1 271 0
 283 0010 2946     	 mov r1,r5
 284 0012 2246     	 mov r2,r4
 285 0014 0648     	 ldr r0,.L17+12
 286 0016 FFF7FEFF 	 bl optiga_lib_print_message
 287              	.LVL14:
 276:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 288              	 .loc 1 276 0
 289 001a BDE83840 	 pop {r3,r4,r5,lr}
 290              	.LCFI9:
 291              	 .cfi_restore 14
 292              	 .cfi_restore 5
 293              	 .cfi_restore 4
 294              	 .cfi_restore 3
 295              	 .cfi_def_cfa_offset 0
 272:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #else
 296              	 .loc 1 272 0
 297 001e FFF7FEBF 	 b example_optiga_crypt_hash_data
 298              	.LVL15:
 299              	.L18:
 300 0022 00BF     	 .align 2
 301              	.L17:
 302 0024 55000000 	 .word .LC1
 303 0028 68000000 	 .word .LC2
 304 002c E0010000 	 .word .LC10
 305 0030 06020000 	 .word .LC11
 306              	 .cfi_endproc
 307              	.LFE398:
 309              	 .section .text.optiga_shell_crypt_hash,"ax",%progbits
 310              	 .align 1
 311              	 .thumb
 312              	 .thumb_func
 314              	optiga_shell_crypt_hash:
 315              	.LFB397:
 257:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #ifdef OPTIGA_CRYPT_HASH_ENABLED
 316              	 .loc 1 257 0
 317              	 .cfi_startproc
 318              	 
 319              	 
 320 0000 38B5     	 push {r3,r4,r5,lr}
 321              	.LCFI10:
 322              	 .cfi_def_cfa_offset 16
 323              	 .cfi_offset 3,-16
 324              	 .cfi_offset 4,-12
 325              	 .cfi_offset 5,-8
 326              	 .cfi_offset 14,-4
 259:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("1 Step: Hash given data with Start, Update and Finalize calls");
 327              	 .loc 1 259 0
 328 0002 084D     	 ldr r5,.L20
 329 0004 084C     	 ldr r4,.L20+4
 330 0006 0948     	 ldr r0,.L20+8
 331 0008 2946     	 mov r1,r5
 332 000a 2246     	 mov r2,r4
 333 000c FFF7FEFF 	 bl optiga_lib_print_message
 334              	.LVL16:
 260:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     example_optiga_crypt_hash();
 335              	 .loc 1 260 0
 336 0010 2946     	 mov r1,r5
 337 0012 2246     	 mov r2,r4
 338 0014 0648     	 ldr r0,.L20+12
 339 0016 FFF7FEFF 	 bl optiga_lib_print_message
 340              	.LVL17:
 265:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 341              	 .loc 1 265 0
 342 001a BDE83840 	 pop {r3,r4,r5,lr}
 343              	.LCFI11:
 344              	 .cfi_restore 14
 345              	 .cfi_restore 5
 346              	 .cfi_restore 4
 347              	 .cfi_restore 3
 348              	 .cfi_def_cfa_offset 0
 261:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #else
 349              	 .loc 1 261 0
 350 001e FFF7FEBF 	 b example_optiga_crypt_hash
 351              	.LVL18:
 352              	.L21:
 353 0022 00BF     	 .align 2
 354              	.L20:
 355 0024 55000000 	 .word .LC1
 356 0028 68000000 	 .word .LC2
 357 002c 30020000 	 .word .LC12
 358 0030 46020000 	 .word .LC13
 359              	 .cfi_endproc
 360              	.LFE397:
 362              	 .section .text.optiga_shell_util_protected_update,"ax",%progbits
 363              	 .align 1
 364              	 .thumb
 365              	 .thumb_func
 367              	optiga_shell_util_protected_update:
 368              	.LFB396:
 248:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("Starting Protected Update Example");
 369              	 .loc 1 248 0
 370              	 .cfi_startproc
 371              	 
 372              	 
 373 0000 38B5     	 push {r3,r4,r5,lr}
 374              	.LCFI12:
 375              	 .cfi_def_cfa_offset 16
 376              	 .cfi_offset 3,-16
 377              	 .cfi_offset 4,-12
 378              	 .cfi_offset 5,-8
 379              	 .cfi_offset 14,-4
 249:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("1 Step: Update Metadata for the Object to be updated and the Trust An
 380              	 .loc 1 249 0
 381 0002 0D4D     	 ldr r5,.L23
 382 0004 0D4C     	 ldr r4,.L23+4
 383 0006 0E48     	 ldr r0,.L23+8
 384 0008 2946     	 mov r1,r5
 385 000a 2246     	 mov r2,r4
 386 000c FFF7FEFF 	 bl optiga_lib_print_message
 387              	.LVL19:
 250:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("2 Step: Write Trust Anchor used by the Trust Qi to verify the update"
 388              	 .loc 1 250 0
 389 0010 2946     	 mov r1,r5
 390 0012 2246     	 mov r2,r4
 391 0014 0B48     	 ldr r0,.L23+12
 392 0016 FFF7FEFF 	 bl optiga_lib_print_message
 393              	.LVL20:
 251:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("3 Step: Start Protected update with prepared manifest and fragments")
 394              	 .loc 1 251 0
 395 001a 2946     	 mov r1,r5
 396 001c 2246     	 mov r2,r4
 397 001e 0A48     	 ldr r0,.L23+16
 398 0020 FFF7FEFF 	 bl optiga_lib_print_message
 399              	.LVL21:
 252:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     example_optiga_util_protected_update();
 400              	 .loc 1 252 0
 401 0024 2946     	 mov r1,r5
 402 0026 2246     	 mov r2,r4
 403 0028 0848     	 ldr r0,.L23+20
 404 002a FFF7FEFF 	 bl optiga_lib_print_message
 405              	.LVL22:
 254:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 406              	 .loc 1 254 0
 407 002e BDE83840 	 pop {r3,r4,r5,lr}
 408              	.LCFI13:
 409              	 .cfi_restore 14
 410              	 .cfi_restore 5
 411              	 .cfi_restore 4
 412              	 .cfi_restore 3
 413              	 .cfi_def_cfa_offset 0
 253:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 414              	 .loc 1 253 0
 415 0032 FFF7FEBF 	 b example_optiga_util_protected_update
 416              	.LVL23:
 417              	.L24:
 418 0036 00BF     	 .align 2
 419              	.L23:
 420 0038 55000000 	 .word .LC1
 421 003c 68000000 	 .word .LC2
 422 0040 84020000 	 .word .LC14
 423 0044 A6020000 	 .word .LC15
 424 0048 0A030000 	 .word .LC16
 425 004c 4F030000 	 .word .LC17
 426              	 .cfi_endproc
 427              	.LFE396:
 429              	 .section .text.optiga_shell_util_update_count,"ax",%progbits
 430              	 .align 1
 431              	 .thumb
 432              	 .thumb_func
 434              	optiga_shell_util_update_count:
 435              	.LFB395:
 240:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("Starting Update Counter Example");
 436              	 .loc 1 240 0
 437              	 .cfi_startproc
 438              	 
 439              	 
 440 0000 38B5     	 push {r3,r4,r5,lr}
 441              	.LCFI14:
 442              	 .cfi_def_cfa_offset 16
 443              	 .cfi_offset 3,-16
 444              	 .cfi_offset 4,-12
 445              	 .cfi_offset 5,-8
 446              	 .cfi_offset 14,-4
 241:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("1 Step: Write Initial Counter Value");
 447              	 .loc 1 241 0
 448 0002 0A4D     	 ldr r5,.L26
 449 0004 0A4C     	 ldr r4,.L26+4
 450 0006 0B48     	 ldr r0,.L26+8
 451 0008 2946     	 mov r1,r5
 452 000a 2246     	 mov r2,r4
 453 000c FFF7FEFF 	 bl optiga_lib_print_message
 454              	.LVL24:
 242:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("2 Step: Increase Counter Object");
 455              	 .loc 1 242 0
 456 0010 2946     	 mov r1,r5
 457 0012 2246     	 mov r2,r4
 458 0014 0848     	 ldr r0,.L26+12
 459 0016 FFF7FEFF 	 bl optiga_lib_print_message
 460              	.LVL25:
 243:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     example_optiga_util_update_count();
 461              	 .loc 1 243 0
 462 001a 2946     	 mov r1,r5
 463 001c 2246     	 mov r2,r4
 464 001e 0748     	 ldr r0,.L26+16
 465 0020 FFF7FEFF 	 bl optiga_lib_print_message
 466              	.LVL26:
 245:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 467              	 .loc 1 245 0
 468 0024 BDE83840 	 pop {r3,r4,r5,lr}
 469              	.LCFI15:
 470              	 .cfi_restore 14
 471              	 .cfi_restore 5
 472              	 .cfi_restore 4
 473              	 .cfi_restore 3
 474              	 .cfi_def_cfa_offset 0
 244:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 475              	 .loc 1 244 0
 476 0028 FFF7FEBF 	 b example_optiga_util_update_count
 477              	.LVL27:
 478              	.L27:
 479              	 .align 2
 480              	.L26:
 481 002c 55000000 	 .word .LC1
 482 0030 68000000 	 .word .LC2
 483 0034 93030000 	 .word .LC18
 484 0038 B3030000 	 .word .LC19
 485 003c D7030000 	 .word .LC20
 486              	 .cfi_endproc
 487              	.LFE395:
 489              	 .section .text.optiga_shell_util_hibernate_restore,"ax",%progbits
 490              	 .align 1
 491              	 .thumb
 492              	 .thumb_func
 494              	optiga_shell_util_hibernate_restore:
 495              	.LFB394:
 223:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("Starting Hibernate and Restore Example");
 496              	 .loc 1 223 0
 497              	 .cfi_startproc
 498              	 
 499              	 
 500 0000 38B5     	 push {r3,r4,r5,lr}
 501              	.LCFI16:
 502              	 .cfi_def_cfa_offset 16
 503              	 .cfi_offset 3,-16
 504              	 .cfi_offset 4,-12
 505              	 .cfi_offset 5,-8
 506              	 .cfi_offset 14,-4
 224:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("1 Step: Open Application on the security chip");
 507              	 .loc 1 224 0
 508 0002 214D     	 ldr r5,.L29
 509 0004 214C     	 ldr r4,.L29+4
 510 0006 2248     	 ldr r0,.L29+8
 511 0008 2946     	 mov r1,r5
 512 000a 2246     	 mov r2,r4
 513 000c FFF7FEFF 	 bl optiga_lib_print_message
 514              	.LVL28:
 225:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("2 Step: Pair the host and the security chip");
 515              	 .loc 1 225 0
 516 0010 2946     	 mov r1,r5
 517 0012 2246     	 mov r2,r4
 518 0014 1F48     	 ldr r0,.L29+12
 519 0016 FFF7FEFF 	 bl optiga_lib_print_message
 520              	.LVL29:
 226:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("3 Step: Select Protected I2C Connection");
 521              	 .loc 1 226 0
 522 001a 2946     	 mov r1,r5
 523 001c 2246     	 mov r2,r4
 524 001e 1E48     	 ldr r0,.L29+16
 525 0020 FFF7FEFF 	 bl optiga_lib_print_message
 526              	.LVL30:
 227:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("4 Step: Generate ECC NIST P-256 Key pair and store it in Session Data
 527              	 .loc 1 227 0
 528 0024 2946     	 mov r1,r5
 529 0026 2246     	 mov r2,r4
 530 0028 1C48     	 ldr r0,.L29+20
 531 002a FFF7FEFF 	 bl optiga_lib_print_message
 532              	.LVL31:
 228:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("5 Step: Check Security Event Counter and wait till it reaches 0");
 533              	 .loc 1 228 0
 534 002e 2946     	 mov r1,r5
 535 0030 2246     	 mov r2,r4
 536 0032 1B48     	 ldr r0,.L29+24
 537 0034 FFF7FEFF 	 bl optiga_lib_print_message
 538              	.LVL32:
 229:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("6 Step: Perform Close application with Hibernate parameter set to Tru
 539              	 .loc 1 229 0
 540 0038 2946     	 mov r1,r5
 541 003a 2246     	 mov r2,r4
 542 003c 1948     	 ldr r0,.L29+28
 543 003e FFF7FEFF 	 bl optiga_lib_print_message
 544              	.LVL33:
 230:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("7 Step: Open Application on the security chip");
 545              	 .loc 1 230 0
 546 0042 2946     	 mov r1,r5
 547 0044 2246     	 mov r2,r4
 548 0046 1848     	 ldr r0,.L29+32
 549 0048 FFF7FEFF 	 bl optiga_lib_print_message
 550              	.LVL34:
 231:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("8 Step: Sign prepared data with private key stored in Session Data Ob
 551              	 .loc 1 231 0
 552 004c 2946     	 mov r1,r5
 553 004e 2246     	 mov r2,r4
 554 0050 1648     	 ldr r0,.L29+36
 555 0052 FFF7FEFF 	 bl optiga_lib_print_message
 556              	.LVL35:
 232:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("9 Step: Verify the signature with the public key generated previously
 557              	 .loc 1 232 0
 558 0056 2946     	 mov r1,r5
 559 0058 2246     	 mov r2,r4
 560 005a 1548     	 ldr r0,.L29+40
 561 005c FFF7FEFF 	 bl optiga_lib_print_message
 562              	.LVL36:
 233:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("10 Step: Close Application on the chip");
 563              	 .loc 1 233 0
 564 0060 2946     	 mov r1,r5
 565 0062 2246     	 mov r2,r4
 566 0064 1348     	 ldr r0,.L29+44
 567 0066 FFF7FEFF 	 bl optiga_lib_print_message
 568              	.LVL37:
 234:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("Important note: To continue with other examples you need to call the 
 569              	 .loc 1 234 0
 570 006a 2946     	 mov r1,r5
 571 006c 2246     	 mov r2,r4
 572 006e 1248     	 ldr r0,.L29+48
 573 0070 FFF7FEFF 	 bl optiga_lib_print_message
 574              	.LVL38:
 235:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     example_optiga_util_hibernate_restore();
 575              	 .loc 1 235 0
 576 0074 2946     	 mov r1,r5
 577 0076 2246     	 mov r2,r4
 578 0078 1048     	 ldr r0,.L29+52
 579 007a FFF7FEFF 	 bl optiga_lib_print_message
 580              	.LVL39:
 237:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 581              	 .loc 1 237 0
 582 007e BDE83840 	 pop {r3,r4,r5,lr}
 583              	.LCFI17:
 584              	 .cfi_restore 14
 585              	 .cfi_restore 5
 586              	 .cfi_restore 4
 587              	 .cfi_restore 3
 588              	 .cfi_def_cfa_offset 0
 236:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 589              	 .loc 1 236 0
 590 0082 FFF7FEBF 	 b example_optiga_util_hibernate_restore
 591              	.LVL40:
 592              	.L30:
 593 0086 00BF     	 .align 2
 594              	.L29:
 595 0088 55000000 	 .word .LC1
 596 008c 68000000 	 .word .LC2
 597 0090 F7030000 	 .word .LC21
 598 0094 1E040000 	 .word .LC22
 599 0098 4C040000 	 .word .LC23
 600 009c 78040000 	 .word .LC24
 601 00a0 A0040000 	 .word .LC25
 602 00a4 04050000 	 .word .LC26
 603 00a8 44050000 	 .word .LC27
 604 00ac 8B050000 	 .word .LC28
 605 00b0 B9050000 	 .word .LC29
 606 00b4 03060000 	 .word .LC30
 607 00b8 49060000 	 .word .LC31
 608 00bc 70060000 	 .word .LC32
 609              	 .cfi_endproc
 610              	.LFE394:
 612              	 .section .text.optiga_shell_pair_host_optiga,"ax",%progbits
 613              	 .align 1
 614              	 .thumb
 615              	 .thumb_func
 617              	optiga_shell_pair_host_optiga:
 618              	.LFB393:
 213:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("Starting Pairing of Host and Trust Qi Example");
 619              	 .loc 1 213 0
 620              	 .cfi_startproc
 621              	 
 622              	 
 623 0000 38B5     	 push {r3,r4,r5,lr}
 624              	.LCFI18:
 625              	 .cfi_def_cfa_offset 16
 626              	 .cfi_offset 3,-16
 627              	 .cfi_offset 4,-12
 628              	 .cfi_offset 5,-8
 629              	 .cfi_offset 14,-4
 214:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("1 Step: Read and Check existing Metadata for the Binding Secret");
 630              	 .loc 1 214 0
 631 0002 0F4D     	 ldr r5,.L32
 632 0004 0F4C     	 ldr r4,.L32+4
 633 0006 1048     	 ldr r0,.L32+8
 634 0008 2946     	 mov r1,r5
 635 000a 2246     	 mov r2,r4
 636 000c FFF7FEFF 	 bl optiga_lib_print_message
 637              	.LVL41:
 215:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("2 Step: Generate Random for the new Binding Secret");
 638              	 .loc 1 215 0
 639 0010 2946     	 mov r1,r5
 640 0012 2246     	 mov r2,r4
 641 0014 0D48     	 ldr r0,.L32+12
 642 0016 FFF7FEFF 	 bl optiga_lib_print_message
 643              	.LVL42:
 216:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("3 Step: Write new Binding Secret");
 644              	 .loc 1 216 0
 645 001a 2946     	 mov r1,r5
 646 001c 2246     	 mov r2,r4
 647 001e 0C48     	 ldr r0,.L32+16
 648 0020 FFF7FEFF 	 bl optiga_lib_print_message
 649              	.LVL43:
 217:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("4 Step: Store new Binding Secret on the Host");
 650              	 .loc 1 217 0
 651 0024 2946     	 mov r1,r5
 652 0026 2246     	 mov r2,r4
 653 0028 0A48     	 ldr r0,.L32+20
 654 002a FFF7FEFF 	 bl optiga_lib_print_message
 655              	.LVL44:
 218:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     example_pair_host_and_optiga_using_pre_shared_secret();
 656              	 .loc 1 218 0
 657 002e 2946     	 mov r1,r5
 658 0030 2246     	 mov r2,r4
 659 0032 0948     	 ldr r0,.L32+24
 660 0034 FFF7FEFF 	 bl optiga_lib_print_message
 661              	.LVL45:
 220:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 662              	 .loc 1 220 0
 663 0038 BDE83840 	 pop {r3,r4,r5,lr}
 664              	.LCFI19:
 665              	 .cfi_restore 14
 666              	 .cfi_restore 5
 667              	 .cfi_restore 4
 668              	 .cfi_restore 3
 669              	 .cfi_def_cfa_offset 0
 219:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 670              	 .loc 1 219 0
 671 003c FFF7FEBF 	 b example_pair_host_and_optiga_using_pre_shared_secret
 672              	.LVL46:
 673              	.L33:
 674              	 .align 2
 675              	.L32:
 676 0040 55000000 	 .word .LC1
 677 0044 68000000 	 .word .LC2
 678 0048 CF060000 	 .word .LC33
 679 004c FD060000 	 .word .LC34
 680 0050 3D070000 	 .word .LC35
 681 0054 70070000 	 .word .LC36
 682 0058 91070000 	 .word .LC37
 683              	 .cfi_endproc
 684              	.LFE393:
 686              	 .section .text.optiga_shell_util_read_coprocessor_id,"ax",%progbits
 687              	 .align 1
 688              	 .thumb
 689              	 .thumb_func
 691              	optiga_shell_util_read_coprocessor_id:
 692              	.LFB392:
 206:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("Starting reading of Coprocessor ID and displaying it's individual com
 693              	 .loc 1 206 0
 694              	 .cfi_startproc
 695              	 
 696              	 
 697 0000 38B5     	 push {r3,r4,r5,lr}
 698              	.LCFI20:
 699              	 .cfi_def_cfa_offset 16
 700              	 .cfi_offset 3,-16
 701              	 .cfi_offset 4,-12
 702              	 .cfi_offset 5,-8
 703              	 .cfi_offset 14,-4
 207:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("1 Step: Read Coprocessor UID from OID(0xE0C2) ");
 704              	 .loc 1 207 0
 705 0002 084D     	 ldr r5,.L35
 706 0004 084C     	 ldr r4,.L35+4
 707 0006 0948     	 ldr r0,.L35+8
 708 0008 2946     	 mov r1,r5
 709 000a 2246     	 mov r2,r4
 710 000c FFF7FEFF 	 bl optiga_lib_print_message
 711              	.LVL47:
 208:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     example_read_coprocessor_id();
 712              	 .loc 1 208 0
 713 0010 2946     	 mov r1,r5
 714 0012 2246     	 mov r2,r4
 715 0014 0648     	 ldr r0,.L35+12
 716 0016 FFF7FEFF 	 bl optiga_lib_print_message
 717              	.LVL48:
 210:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 718              	 .loc 1 210 0
 719 001a BDE83840 	 pop {r3,r4,r5,lr}
 720              	.LCFI21:
 721              	 .cfi_restore 14
 722              	 .cfi_restore 5
 723              	 .cfi_restore 4
 724              	 .cfi_restore 3
 725              	 .cfi_def_cfa_offset 0
 209:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 726              	 .loc 1 209 0
 727 001e FFF7FEBF 	 b example_read_coprocessor_id
 728              	.LVL49:
 729              	.L36:
 730 0022 00BF     	 .align 2
 731              	.L35:
 732 0024 55000000 	 .word .LC1
 733 0028 68000000 	 .word .LC2
 734 002c BE070000 	 .word .LC38
 735 0030 13080000 	 .word .LC39
 736              	 .cfi_endproc
 737              	.LFE392:
 739              	 .section .text.optiga_shell_util_write_data,"ax",%progbits
 740              	 .align 1
 741              	 .thumb
 742              	 .thumb_func
 744              	optiga_shell_util_write_data:
 745              	.LFB391:
 198:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("Starting Write Data/Metadata Example");
 746              	 .loc 1 198 0
 747              	 .cfi_startproc
 748              	 
 749              	 
 750 0000 38B5     	 push {r3,r4,r5,lr}
 751              	.LCFI22:
 752              	 .cfi_def_cfa_offset 16
 753              	 .cfi_offset 3,-16
 754              	 .cfi_offset 4,-12
 755              	 .cfi_offset 5,-8
 756              	 .cfi_offset 14,-4
 199:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("1 Step: Write Sample Certificate in Trust Anchor Data Object ");
 757              	 .loc 1 199 0
 758 0002 0A4D     	 ldr r5,.L38
 759 0004 0A4C     	 ldr r4,.L38+4
 760 0006 0B48     	 ldr r0,.L38+8
 761 0008 2946     	 mov r1,r5
 762 000a 2246     	 mov r2,r4
 763 000c FFF7FEFF 	 bl optiga_lib_print_message
 764              	.LVL50:
 200:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("2 Step: Write new Metadata");
 765              	 .loc 1 200 0
 766 0010 2946     	 mov r1,r5
 767 0012 2246     	 mov r2,r4
 768 0014 0848     	 ldr r0,.L38+12
 769 0016 FFF7FEFF 	 bl optiga_lib_print_message
 770              	.LVL51:
 201:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     example_optiga_util_write_data();
 771              	 .loc 1 201 0
 772 001a 2946     	 mov r1,r5
 773 001c 2246     	 mov r2,r4
 774 001e 0748     	 ldr r0,.L38+16
 775 0020 FFF7FEFF 	 bl optiga_lib_print_message
 776              	.LVL52:
 203:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 777              	 .loc 1 203 0
 778 0024 BDE83840 	 pop {r3,r4,r5,lr}
 779              	.LCFI23:
 780              	 .cfi_restore 14
 781              	 .cfi_restore 5
 782              	 .cfi_restore 4
 783              	 .cfi_restore 3
 784              	 .cfi_def_cfa_offset 0
 202:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 785              	 .loc 1 202 0
 786 0028 FFF7FEBF 	 b example_optiga_util_write_data
 787              	.LVL53:
 788              	.L39:
 789              	 .align 2
 790              	.L38:
 791 002c 55000000 	 .word .LC1
 792 0030 68000000 	 .word .LC2
 793 0034 42080000 	 .word .LC40
 794 0038 67080000 	 .word .LC41
 795 003c A5080000 	 .word .LC42
 796              	 .cfi_endproc
 797              	.LFE391:
 799              	 .section .text.optiga_shell_util_read_data,"ax",%progbits
 800              	 .align 1
 801              	 .thumb
 802              	 .thumb_func
 804              	optiga_shell_util_read_data:
 805              	.LFB390:
 190:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("Starting Read Data/Metadata Example");
 806              	 .loc 1 190 0
 807              	 .cfi_startproc
 808              	 
 809              	 
 810 0000 38B5     	 push {r3,r4,r5,lr}
 811              	.LCFI24:
 812              	 .cfi_def_cfa_offset 16
 813              	 .cfi_offset 3,-16
 814              	 .cfi_offset 4,-12
 815              	 .cfi_offset 5,-8
 816              	 .cfi_offset 14,-4
 191:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("1 Step: Read Certificate ");
 817              	 .loc 1 191 0
 818 0002 0A4D     	 ldr r5,.L41
 819 0004 0A4C     	 ldr r4,.L41+4
 820 0006 0B48     	 ldr r0,.L41+8
 821 0008 2946     	 mov r1,r5
 822 000a 2246     	 mov r2,r4
 823 000c FFF7FEFF 	 bl optiga_lib_print_message
 824              	.LVL54:
 192:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE("2 Step: Read Certificate Metadata");
 825              	 .loc 1 192 0
 826 0010 2946     	 mov r1,r5
 827 0012 2246     	 mov r2,r4
 828 0014 0848     	 ldr r0,.L41+12
 829 0016 FFF7FEFF 	 bl optiga_lib_print_message
 830              	.LVL55:
 193:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     example_optiga_util_read_data();
 831              	 .loc 1 193 0
 832 001a 2946     	 mov r1,r5
 833 001c 2246     	 mov r2,r4
 834 001e 0748     	 ldr r0,.L41+16
 835 0020 FFF7FEFF 	 bl optiga_lib_print_message
 836              	.LVL56:
 195:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 837              	 .loc 1 195 0
 838 0024 BDE83840 	 pop {r3,r4,r5,lr}
 839              	.LCFI25:
 840              	 .cfi_restore 14
 841              	 .cfi_restore 5
 842              	 .cfi_restore 4
 843              	 .cfi_restore 3
 844              	 .cfi_def_cfa_offset 0
 194:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 845              	 .loc 1 194 0
 846 0028 FFF7FEBF 	 b example_optiga_util_read_data
 847              	.LVL57:
 848              	.L42:
 849              	 .align 2
 850              	.L41:
 851 002c 55000000 	 .word .LC1
 852 0030 68000000 	 .word .LC2
 853 0034 C0080000 	 .word .LC43
 854 0038 E4080000 	 .word .LC44
 855 003c FE080000 	 .word .LC45
 856              	 .cfi_endproc
 857              	.LFE390:
 859              	 .section .text.optiga_shell_init,"ax",%progbits
 860              	 .align 1
 861              	 .thumb
 862              	 .thumb_func
 864              	optiga_shell_init:
 865              	.LFB388:
  90:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     optiga_lib_status_t return_status;
 866              	 .loc 1 90 0
 867              	 .cfi_startproc
 868              	 
 869              	 
 870              	.LVL58:
 871 0000 7FB5     	 push {r0,r1,r2,r3,r4,r5,r6,lr}
 872              	.LCFI26:
 873              	 .cfi_def_cfa_offset 32
 874              	 .cfi_offset 4,-16
 875              	 .cfi_offset 5,-12
 876              	 .cfi_offset 6,-8
 877              	 .cfi_offset 14,-4
  97:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {
 878              	 .loc 1 97 0
 879 0002 274C     	 ldr r4,.L56
 880 0004 2068     	 ldr r0,[r4]
  93:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 881              	 .loc 1 93 0
 882 0006 0F23     	 movs r3,#15
 883 0008 8DF80F30 	 strb r3,[sp,#15]
  97:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {
 884              	 .loc 1 97 0
 885 000c 20B9     	 cbnz r0,.L44
 100:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         }
 886              	 .loc 1 100 0
 887 000e 2549     	 ldr r1,.L56+4
 888 0010 0246     	 mov r2,r0
 889 0012 FFF7FEFF 	 bl optiga_util_create
 890              	.LVL59:
 891 0016 2060     	 str r0,[r4]
 892              	.L44:
 103:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         /**
 893              	 .loc 1 103 0
 894 0018 2348     	 ldr r0,.L56+8
 895 001a 2449     	 ldr r1,.L56+12
 896 001c 244A     	 ldr r2,.L56+16
 108:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         return_status = optiga_util_open_application(me_util, 0);
 897              	 .loc 1 108 0
 898 001e 254D     	 ldr r5,.L56+20
 103:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         /**
 899              	 .loc 1 103 0
 900 0020 FFF7FEFF 	 bl optiga_lib_print_message
 901              	.LVL60:
 108:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         return_status = optiga_util_open_application(me_util, 0);
 902              	 .loc 1 108 0
 903 0024 0123     	 movs r3,#1
 109:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 904              	 .loc 1 109 0
 905 0026 2068     	 ldr r0,[r4]
 108:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         return_status = optiga_util_open_application(me_util, 0);
 906              	 .loc 1 108 0
 907 0028 2B80     	 strh r3,[r5]
 109:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 908              	 .loc 1 109 0
 909 002a 0021     	 movs r1,#0
 910 002c FFF7FEFF 	 bl optiga_util_open_application
 911              	.LVL61:
 111:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {
 912              	 .loc 1 111 0
 913 0030 0028     	 cmp r0,#0
 914 0032 33D1     	 bne .L43
 915              	.L45:
 115:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {
 916              	 .loc 1 115 0 discriminator 1
 917 0034 2B88     	 ldrh r3,[r5]
 918 0036 9BB2     	 uxth r3,r3
 919 0038 012B     	 cmp r3,#1
 920 003a FBD0     	 beq .L45
 119:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {
 921              	 .loc 1 119 0
 922 003c 1D4B     	 ldr r3,.L56+20
 923 003e 1E88     	 ldrh r6,[r3]
 924 0040 B6B2     	 uxth r6,r6
 925 0042 5EBB     	 cbnz r6,.L43
 125:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         OPTIGA_SHELL_LOG_MESSAGE("Begin pairing of host and OPTIGA...");
 926              	 .loc 1 125 0
 927 0044 1C48     	 ldr r0,.L56+24
 928              	.LVL62:
 929 0046 1D49     	 ldr r1,.L56+28
 930 0048 1D4A     	 ldr r2,.L56+32
 931 004a FFF7FEFF 	 bl optiga_lib_print_message
 932              	.LVL63:
 126:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         // Usercase: Generate the pre-shared secret on host and write it to OPTIGA
 933              	 .loc 1 126 0
 934 004e 1D48     	 ldr r0,.L56+36
 935 0050 1A49     	 ldr r1,.L56+28
 936 0052 1B4A     	 ldr r2,.L56+32
 937 0054 FFF7FEFF 	 bl optiga_lib_print_message
 938              	.LVL64:
 128:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         OPTIGA_SHELL_LOG_MESSAGE("Pairing of host and OPTIGA completed...");
 939              	 .loc 1 128 0
 940 0058 FFF7FEFF 	 bl example_pair_host_and_optiga_using_pre_shared_secret
 941              	.LVL65:
 129:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         // Usercase: Generate the pre-shared secret on host and write it to OPTIGA
 942              	 .loc 1 129 0
 943 005c 1A48     	 ldr r0,.L56+40
 944 005e 1749     	 ldr r1,.L56+28
 945 0060 174A     	 ldr r2,.L56+32
 946 0062 FFF7FEFF 	 bl optiga_lib_print_message
 947              	.LVL66:
 131:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                                                optiga_oid,
 948              	 .loc 1 131 0
 949 0066 0DF10F03 	 add r3,sp,#15
 950 006a 0093     	 str r3,[sp]
 951 006c 0123     	 movs r3,#1
 952 006e 0193     	 str r3,[sp,#4]
 953 0070 2068     	 ldr r0,[r4]
 954 0072 4EF2C401 	 movw r1,#57540
 955 0076 4022     	 movs r2,#64
 956 0078 3346     	 mov r3,r6
 957 007a FFF7FEFF 	 bl optiga_util_write_data
 958              	.LVL67:
 138:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {
 959              	 .loc 1 138 0
 960 007e 68B9     	 cbnz r0,.L43
 961              	.L48:
 143:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {
 962              	 .loc 1 143 0 discriminator 1
 963 0080 2B88     	 ldrh r3,[r5]
 964 0082 9BB2     	 uxth r3,r3
 965 0084 012B     	 cmp r3,#1
 966 0086 FBD0     	 beq .L48
 147:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         OPTIGA_SHELL_LOG_MESSAGE("Starting OPTIGA example demonstration..\n");
 967              	 .loc 1 147 0
 968 0088 1048     	 ldr r0,.L56+44
 969              	.LVL68:
 970 008a 0C49     	 ldr r1,.L56+28
 971 008c 0C4A     	 ldr r2,.L56+32
 972 008e FFF7FEFF 	 bl optiga_lib_print_message
 973              	.LVL69:
 148:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     }while(FALSE);
 974              	 .loc 1 148 0
 975 0092 0F48     	 ldr r0,.L56+48
 976 0094 0949     	 ldr r1,.L56+28
 977 0096 0A4A     	 ldr r2,.L56+32
 978 0098 FFF7FEFF 	 bl optiga_lib_print_message
 979              	.LVL70:
 980              	.L43:
 150:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 981              	 .loc 1 150 0
 982 009c 04B0     	 add sp,sp,#16
 983              	.LCFI27:
 984              	 .cfi_def_cfa_offset 16
 985              	 
 986 009e 70BD     	 pop {r4,r5,r6,pc}
 987              	.L57:
 988              	 .align 2
 989              	.L56:
 990 00a0 00000000 	 .word .LANCHOR1
 991 00a4 00000000 	 .word optiga_util_callback
 992 00a8 20090000 	 .word .LC46
 993 00ac 52090000 	 .word .LC47
 994 00b0 67090000 	 .word .LC48
 995 00b4 00000000 	 .word .LANCHOR0
 996 00b8 6C090000 	 .word .LC49
 997 00bc 55000000 	 .word .LC1
 998 00c0 68000000 	 .word .LC2
 999 00c4 8F090000 	 .word .LC50
 1000 00c8 B3090000 	 .word .LC51
 1001 00cc DB090000 	 .word .LC52
 1002 00d0 040A0000 	 .word .LC53
 1003              	 .cfi_endproc
 1004              	.LFE388:
 1006              	 .section .text.optiga_shell_show_usage,"ax",%progbits
 1007              	 .align 1
 1008              	 .thumb
 1009              	 .thumb_func
 1011              	optiga_shell_show_usage:
 1012              	.LFB405:
 318:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 319:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** void print_performance_results(void (*test_case)(void)) 
 320:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** {
 321:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     char buffer_string[30];
 322:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     unsigned int timestamp = pal_os_timer_get_time_in_milliseconds(); 
 323:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     test_case(); 
 324:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     //lint --e{713} suppress "Due to function parameter typecasting is done from unsigned int to in
 325:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     sprintf(buffer_string, "Example takes %d msec", (int) (pal_os_timer_get_time_in_milliseconds() 
 326:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE(buffer_string); 
 327:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     optiga_lib_print_string_with_newline(""); 
 328:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     pal_os_timer_delay_in_milliseconds(2000);
 329:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 330:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 331:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** static void optiga_shell_selftest(void)
 332:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** {
 333:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     print_performance_results(optiga_shell_init);
 334:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     print_performance_results(optiga_shell_util_read_data);
 335:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     print_performance_results(optiga_shell_util_write_data);
 336:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     print_performance_results(optiga_shell_util_read_coprocessor_id);
 337:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     print_performance_results(optiga_shell_pair_host_optiga);
 338:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     print_performance_results(optiga_shell_util_update_count);
 339:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     print_performance_results(optiga_shell_util_protected_update);
 340:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 341:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     print_performance_results(optiga_shell_crypt_hash);
 342:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     print_performance_results(optiga_shell_crypt_hash_data);
 343:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     print_performance_results(optiga_shell_crypt_random);
 344:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 345:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     print_performance_results(optiga_shell_crypt_ecc_generate_keypair);
 346:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     print_performance_results(optiga_shell_crypt_ecdsa_sign);
 347:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     print_performance_results(optiga_shell_crypt_ecdsa_verify);
 348:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 349:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 350:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 351:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 352:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** static void optiga_shell_show_usage(void);
 353:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 354:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 355:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** optiga_example_cmd_t optiga_cmds [] =
 356:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** {
 357:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {"",                                            "help",            optiga_shell_show_usage}
 358:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {"    initialize optiga                        : optiga --","init",            optiga_shell
 359:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {"    de-initialize optiga                     : optiga --","deinit",          optiga_shell
 360:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {"    run all tests at once                    : optiga --","selftest",        optiga_shell
 361:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {"    read data                                : optiga --","readdata",        optiga_shell
 362:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {"    write data                               : optiga --","writedata",       optiga_shell
 363:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {"    read coprocessor id                      : optiga --","coprocid",        optiga_shell
 364:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {"    binding host with optiga                 : optiga --","bind",            optiga_shell
 365:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {"    hibernate and restore                    : optiga --","hibernate",       optiga_shell
 366:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {"    update counter                           : optiga --","counter",         optiga_shell
 367:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {"    protected update                         : optiga --","protected",       optiga_shell
 368:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 369:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {"    hashing of data                          : optiga --","hash",            optiga_shell
 370:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {"    hash single function                     : optiga --","hashsha256",      optiga_shell
 371:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {"    random number generation                 : optiga --","random",          optiga_shell
 372:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 373:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {"    ecc key pair generation                  : optiga --","ecckeygen",       optiga_shell
 374:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {"    ecdsa sign                               : optiga --","ecdsasign",       optiga_shell
 375:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {"    ecdsa verify sign                        : optiga --","ecdsaverify",     optiga_shell
 376:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** };
 377:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 378:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** #define OPTIGA_SIZE_OF_CMDS            (sizeof(optiga_cmds)/sizeof(optiga_example_cmd_t))
 379:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 380:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** static void optiga_shell_show_usage()
 381:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** {
 1013              	 .loc 1 381 0
 1014              	 .cfi_startproc
 1015              	 
 1016              	 
 1017              	.LVL71:
 1018 0000 70B5     	 push {r4,r5,r6,lr}
 1019              	.LCFI28:
 1020              	 .cfi_def_cfa_offset 16
 1021              	 .cfi_offset 4,-16
 1022              	 .cfi_offset 5,-12
 1023              	 .cfi_offset 6,-8
 1024              	 .cfi_offset 14,-4
 382:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     uint8_t number_of_cmds = OPTIGA_SIZE_OF_CMDS;
 383:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     uint8_t index;
 384:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     optiga_example_cmd_t * current_cmd;
 385:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     optiga_lib_print_string_with_newline("");
 1025              	 .loc 1 385 0
 1026 0002 0C48     	 ldr r0,.L65
 1027 0004 FFF7FEFF 	 bl optiga_lib_print_string_with_newline
 1028              	.LVL72:
 386:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     optiga_lib_print_string_with_newline("    usage                : optiga --<cmd>");
 1029              	 .loc 1 386 0
 1030 0008 0B48     	 ldr r0,.L65+4
 1031 000a FFF7FEFF 	 bl optiga_lib_print_string_with_newline
 1032              	.LVL73:
 1033 000e 0024     	 movs r4,#0
 1034              	.LVL74:
 1035              	.L60:
 1036 0010 0A4E     	 ldr r6,.L65+8
 387:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     for(index = 0; index < number_of_cmds; index++)
 388:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     {
 389:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         current_cmd = &optiga_cmds[index];
 390:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         if(0 != strcmp("help",current_cmd->cmd_options))
 1037              	 .loc 1 390 0
 1038 0012 0B48     	 ldr r0,.L65+12
 1039 0014 3519     	 adds r5,r6,r4
 1040 0016 6968     	 ldr r1,[r5,#4]
 1041 0018 FFF7FEFF 	 bl strcmp
 1042              	.LVL75:
 1043 001c 28B1     	 cbz r0,.L59
 391:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {
 392:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             optiga_lib_print_string(current_cmd->cmd_description);
 1044              	 .loc 1 392 0
 1045 001e A059     	 ldr r0,[r4,r6]
 1046 0020 FFF7FEFF 	 bl optiga_lib_print_string
 1047              	.LVL76:
 393:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             optiga_lib_print_string_with_newline(current_cmd->cmd_options);
 1048              	 .loc 1 393 0
 1049 0024 6868     	 ldr r0,[r5,#4]
 1050 0026 FFF7FEFF 	 bl optiga_lib_print_string_with_newline
 1051              	.LVL77:
 1052              	.L59:
 1053 002a 0C34     	 adds r4,r4,#12
 387:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     for(index = 0; index < number_of_cmds; index++)
 1054              	 .loc 1 387 0 discriminator 2
 1055 002c CC2C     	 cmp r4,#204
 1056 002e EFD1     	 bne .L60
 394:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         }
 395:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     }
 396:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 1057              	 .loc 1 396 0
 1058 0030 70BD     	 pop {r4,r5,r6,pc}
 1059              	.L66:
 1060 0032 00BF     	 .align 2
 1061              	.L65:
 1062 0034 2D0A0000 	 .word .LC54
 1063 0038 2E0A0000 	 .word .LC55
 1064 003c 00000000 	 .word .LANCHOR2
 1065 0040 580A0000 	 .word .LC56
 1066              	 .cfi_endproc
 1067              	.LFE405:
 1069              	 .section .text.optiga_shell_deinit,"ax",%progbits
 1070              	 .align 1
 1071              	 .thumb
 1072              	 .thumb_func
 1074              	optiga_shell_deinit:
 1075              	.LFB389:
 153:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     optiga_lib_status_t return_status;
 1076              	 .loc 1 153 0
 1077              	 .cfi_startproc
 1078              	 
 1079              	 
 1080 0000 38B5     	 push {r3,r4,r5,lr}
 1081              	.LCFI29:
 1082              	 .cfi_def_cfa_offset 16
 1083              	 .cfi_offset 3,-16
 1084              	 .cfi_offset 4,-12
 1085              	 .cfi_offset 5,-8
 1086              	 .cfi_offset 14,-4
 162:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 1087              	 .loc 1 162 0
 1088 0002 0C4C     	 ldr r4,.L75
 161:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         return_status = optiga_util_close_application(me_util, 0);
 1089              	 .loc 1 161 0
 1090 0004 0C4D     	 ldr r5,.L75+4
 162:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 1091              	 .loc 1 162 0
 1092 0006 2068     	 ldr r0,[r4]
 161:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         return_status = optiga_util_close_application(me_util, 0);
 1093              	 .loc 1 161 0
 1094 0008 0123     	 movs r3,#1
 162:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 1095              	 .loc 1 162 0
 1096 000a 0021     	 movs r1,#0
 161:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         return_status = optiga_util_close_application(me_util, 0);
 1097              	 .loc 1 161 0
 1098 000c 2B80     	 strh r3,[r5]
 162:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 1099              	 .loc 1 162 0
 1100 000e FFF7FEFF 	 bl optiga_util_close_application
 1101              	.LVL78:
 164:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {
 1102              	 .loc 1 164 0
 1103 0012 68B9     	 cbnz r0,.L67
 1104              	.L69:
 169:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {
 1105              	 .loc 1 169 0 discriminator 1
 1106 0014 2B88     	 ldrh r3,[r5]
 1107 0016 9BB2     	 uxth r3,r3
 1108 0018 012B     	 cmp r3,#1
 1109 001a FBD0     	 beq .L69
 174:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {
 1110              	 .loc 1 174 0
 1111 001c 064B     	 ldr r3,.L75+4
 1112 001e 1B88     	 ldrh r3,[r3]
 1113 0020 9BB2     	 uxth r3,r3
 1114 0022 2BB9     	 cbnz r3,.L67
 1115              	.LBB4:
 1116              	.LBB5:
 180:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {
 1117              	 .loc 1 180 0
 1118 0024 2068     	 ldr r0,[r4]
 1119              	.LVL79:
 1120 0026 18B1     	 cbz r0,.L67
 1121              	.LBE5:
 1122              	.LBE4:
 187:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 1123              	 .loc 1 187 0
 1124 0028 BDE83840 	 pop {r3,r4,r5,lr}
 1125              	.LCFI30:
 1126              	 .cfi_remember_state
 1127              	 .cfi_restore 14
 1128              	 .cfi_restore 5
 1129              	 .cfi_restore 4
 1130              	 .cfi_restore 3
 1131              	 .cfi_def_cfa_offset 0
 1132              	.LBB7:
 1133              	.LBB6:
 184:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         }
 1134              	 .loc 1 184 0
 1135 002c FFF7FEBF 	 b optiga_util_destroy
 1136              	.LVL80:
 1137              	.L67:
 1138              	.LCFI31:
 1139              	 .cfi_restore_state
 1140 0030 38BD     	 pop {r3,r4,r5,pc}
 1141              	.L76:
 1142 0032 00BF     	 .align 2
 1143              	.L75:
 1144 0034 00000000 	 .word .LANCHOR1
 1145 0038 00000000 	 .word .LANCHOR0
 1146              	.LBE6:
 1147              	.LBE7:
 1148              	 .cfi_endproc
 1149              	.LFE389:
 1151              	 .section .text.print_performance_results,"ax",%progbits
 1152              	 .align 1
 1153              	 .global print_performance_results
 1154              	 .thumb
 1155              	 .thumb_func
 1157              	print_performance_results:
 1158              	.LFB403:
 320:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     char buffer_string[30];
 1159              	 .loc 1 320 0
 1160              	 .cfi_startproc
 1161              	 
 1162              	 
 1163              	.LVL81:
 1164 0000 30B5     	 push {r4,r5,lr}
 1165              	.LCFI32:
 1166              	 .cfi_def_cfa_offset 12
 1167              	 .cfi_offset 4,-12
 1168              	 .cfi_offset 5,-8
 1169              	 .cfi_offset 14,-4
 1170 0002 89B0     	 sub sp,sp,#36
 1171              	.LCFI33:
 1172              	 .cfi_def_cfa_offset 48
 320:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     char buffer_string[30];
 1173              	 .loc 1 320 0
 1174 0004 0546     	 mov r5,r0
 322:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     test_case(); 
 1175              	 .loc 1 322 0
 1176 0006 FFF7FEFF 	 bl pal_os_timer_get_time_in_milliseconds
 1177              	.LVL82:
 1178 000a 0446     	 mov r4,r0
 1179              	.LVL83:
 323:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     //lint --e{713} suppress "Due to function parameter typecasting is done from unsigned int to in
 1180              	 .loc 1 323 0
 1181 000c A847     	 blx r5
 1182              	.LVL84:
 325:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     OPTIGA_SHELL_LOG_MESSAGE(buffer_string); 
 1183              	 .loc 1 325 0
 1184 000e FFF7FEFF 	 bl pal_os_timer_get_time_in_milliseconds
 1185              	.LVL85:
 1186 0012 0949     	 ldr r1,.L78
 1187 0014 021B     	 subs r2,r0,r4
 1188 0016 6846     	 mov r0,sp
 1189 0018 FFF7FEFF 	 bl sprintf
 1190              	.LVL86:
 326:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     optiga_lib_print_string_with_newline(""); 
 1191              	 .loc 1 326 0
 1192 001c 0749     	 ldr r1,.L78+4
 1193 001e 084A     	 ldr r2,.L78+8
 1194 0020 6846     	 mov r0,sp
 1195 0022 FFF7FEFF 	 bl optiga_lib_print_message
 1196              	.LVL87:
 327:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     pal_os_timer_delay_in_milliseconds(2000);
 1197              	 .loc 1 327 0
 1198 0026 0748     	 ldr r0,.L78+12
 1199 0028 FFF7FEFF 	 bl optiga_lib_print_string_with_newline
 1200              	.LVL88:
 328:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 1201              	 .loc 1 328 0
 1202 002c 4FF4FA60 	 mov r0,#2000
 1203 0030 FFF7FEFF 	 bl pal_os_timer_delay_in_milliseconds
 1204              	.LVL89:
 329:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 1205              	 .loc 1 329 0
 1206 0034 09B0     	 add sp,sp,#36
 1207              	.LCFI34:
 1208              	 .cfi_def_cfa_offset 12
 1209              	 
 1210 0036 30BD     	 pop {r4,r5,pc}
 1211              	.LVL90:
 1212              	.L79:
 1213              	 .align 2
 1214              	.L78:
 1215 0038 5D0A0000 	 .word .LC57
 1216 003c 55000000 	 .word .LC1
 1217 0040 68000000 	 .word .LC2
 1218 0044 2D0A0000 	 .word .LC54
 1219              	 .cfi_endproc
 1220              	.LFE403:
 1222              	 .section .text.optiga_shell_selftest,"ax",%progbits
 1223              	 .align 1
 1224              	 .thumb
 1225              	 .thumb_func
 1227              	optiga_shell_selftest:
 1228              	.LFB404:
 332:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     print_performance_results(optiga_shell_init);
 1229              	 .loc 1 332 0
 1230              	 .cfi_startproc
 1231              	 
 1232              	 
 1233 0000 08B5     	 push {r3,lr}
 1234              	.LCFI35:
 1235              	 .cfi_def_cfa_offset 8
 1236              	 .cfi_offset 3,-8
 1237              	 .cfi_offset 14,-4
 333:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     print_performance_results(optiga_shell_util_read_data);
 1238              	 .loc 1 333 0
 1239 0002 1448     	 ldr r0,.L81
 1240 0004 FFF7FEFF 	 bl print_performance_results
 1241              	.LVL91:
 334:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     print_performance_results(optiga_shell_util_write_data);
 1242              	 .loc 1 334 0
 1243 0008 1348     	 ldr r0,.L81+4
 1244 000a FFF7FEFF 	 bl print_performance_results
 1245              	.LVL92:
 335:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     print_performance_results(optiga_shell_util_read_coprocessor_id);
 1246              	 .loc 1 335 0
 1247 000e 1348     	 ldr r0,.L81+8
 1248 0010 FFF7FEFF 	 bl print_performance_results
 1249              	.LVL93:
 336:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     print_performance_results(optiga_shell_pair_host_optiga);
 1250              	 .loc 1 336 0
 1251 0014 1248     	 ldr r0,.L81+12
 1252 0016 FFF7FEFF 	 bl print_performance_results
 1253              	.LVL94:
 337:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     print_performance_results(optiga_shell_util_update_count);
 1254              	 .loc 1 337 0
 1255 001a 1248     	 ldr r0,.L81+16
 1256 001c FFF7FEFF 	 bl print_performance_results
 1257              	.LVL95:
 338:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     print_performance_results(optiga_shell_util_protected_update);
 1258              	 .loc 1 338 0
 1259 0020 1148     	 ldr r0,.L81+20
 1260 0022 FFF7FEFF 	 bl print_performance_results
 1261              	.LVL96:
 339:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 1262              	 .loc 1 339 0
 1263 0026 1148     	 ldr r0,.L81+24
 1264 0028 FFF7FEFF 	 bl print_performance_results
 1265              	.LVL97:
 341:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     print_performance_results(optiga_shell_crypt_hash_data);
 1266              	 .loc 1 341 0
 1267 002c 1048     	 ldr r0,.L81+28
 1268 002e FFF7FEFF 	 bl print_performance_results
 1269              	.LVL98:
 342:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     print_performance_results(optiga_shell_crypt_random);
 1270              	 .loc 1 342 0
 1271 0032 1048     	 ldr r0,.L81+32
 1272 0034 FFF7FEFF 	 bl print_performance_results
 1273              	.LVL99:
 343:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 1274              	 .loc 1 343 0
 1275 0038 0F48     	 ldr r0,.L81+36
 1276 003a FFF7FEFF 	 bl print_performance_results
 1277              	.LVL100:
 345:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     print_performance_results(optiga_shell_crypt_ecdsa_sign);
 1278              	 .loc 1 345 0
 1279 003e 0F48     	 ldr r0,.L81+40
 1280 0040 FFF7FEFF 	 bl print_performance_results
 1281              	.LVL101:
 346:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     print_performance_results(optiga_shell_crypt_ecdsa_verify);
 1282              	 .loc 1 346 0
 1283 0044 0E48     	 ldr r0,.L81+44
 1284 0046 FFF7FEFF 	 bl print_performance_results
 1285              	.LVL102:
 347:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 1286              	 .loc 1 347 0
 1287 004a 0E48     	 ldr r0,.L81+48
 349:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 1288              	 .loc 1 349 0
 1289 004c BDE80840 	 pop {r3,lr}
 1290              	.LCFI36:
 1291              	 .cfi_restore 14
 1292              	 .cfi_restore 3
 1293              	 .cfi_def_cfa_offset 0
 347:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 1294              	 .loc 1 347 0
 1295 0050 FFF7FEBF 	 b print_performance_results
 1296              	.LVL103:
 1297              	.L82:
 1298              	 .align 2
 1299              	.L81:
 1300 0054 00000000 	 .word optiga_shell_init
 1301 0058 00000000 	 .word optiga_shell_util_read_data
 1302 005c 00000000 	 .word optiga_shell_util_write_data
 1303 0060 00000000 	 .word optiga_shell_util_read_coprocessor_id
 1304 0064 00000000 	 .word optiga_shell_pair_host_optiga
 1305 0068 00000000 	 .word optiga_shell_util_update_count
 1306 006c 00000000 	 .word optiga_shell_util_protected_update
 1307 0070 00000000 	 .word optiga_shell_crypt_hash
 1308 0074 00000000 	 .word optiga_shell_crypt_hash_data
 1309 0078 00000000 	 .word optiga_shell_crypt_random
 1310 007c 00000000 	 .word optiga_shell_crypt_ecc_generate_keypair
 1311 0080 00000000 	 .word optiga_shell_crypt_ecdsa_sign
 1312 0084 00000000 	 .word optiga_shell_crypt_ecdsa_verify
 1313              	 .cfi_endproc
 1314              	.LFE404:
 1316              	 .section .text.optiga_shell_begin,"ax",%progbits
 1317              	 .align 1
 1318              	 .global optiga_shell_begin
 1319              	 .thumb
 1320              	 .thumb_func
 1322              	optiga_shell_begin:
 1323              	.LFB409:
 397:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 398:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** static void optiga_shell_trim_cmd(char_t * user_cmd)
 399:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** {
 400:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     char_t* i = user_cmd;
 401:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     char_t* j = user_cmd;
 402:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     while(*j != 0)
 403:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     {
 404:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         *i = *j++;
 405:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         if(*i != ' ')
 406:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             i++;
 407:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     }
 408:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     *i = 0;
 409:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     if(strlen(user_cmd)>strlen("optiga --"))
 410:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     {
 411:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         strcpy(user_cmd,user_cmd+strlen("optiga --")-1);
 412:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     }
 413:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 414:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 415:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** static void optiga_shell_execute_example(char_t * user_cmd)
 416:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** {
 417:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     uint8_t number_of_cmds = OPTIGA_SIZE_OF_CMDS;
 418:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     uint8_t index,cmd_found = 0;
 419:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     char_t * optiga_cmd_option = "optiga --";
 420:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     optiga_example_cmd_t * current_cmd;
 421:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 422:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     
 423:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     do
 424:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     {
 425:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         if (0 != strncmp(user_cmd,optiga_cmd_option,9))
 426:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {
 427:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             break;
 428:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         }
 429:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         optiga_shell_trim_cmd(user_cmd);
 430:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         for(index = 0; index < number_of_cmds; index++)
 431:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {
 432:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             current_cmd = &optiga_cmds[index];
 433:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             if(0 == strcmp(user_cmd,current_cmd->cmd_options))
 434:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             {
 435:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                 if(NULL != current_cmd->cmd_handler)
 436:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                 {
 437:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                     unsigned int timestamp = pal_os_timer_get_time_in_milliseconds();
 438:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                     current_cmd->cmd_handler();
 439:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                     char buffer_string[30];
 440:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                     //lint --e{713,705,737} suppress "Due to function parameter typecasting is done
 441:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                     sprintf(buffer_string, "Example takes %d msec", (int) pal_os_timer_get_time_in_
 442:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                     OPTIGA_EXAMPLE_LOG_MESSAGE(buffer_string);
 443:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                     optiga_lib_print_string_with_newline("");
 444:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                     cmd_found = 1;
 445:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                     break;
 446:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                 }
 447:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                 else
 448:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                 {
 449:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                     optiga_lib_print_string_with_newline("No example exists for this request");
 450:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                     break;
 451:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                 }
 452:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             }
 453:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         }
 454:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     } while (FALSE);
 455:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     if(!cmd_found)
 456:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     {
 457:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         optiga_lib_print_string_with_newline("");
 458:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         optiga_lib_print_string_with_newline("No example exists for this request chose below option
 459:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         optiga_shell_show_usage();
 460:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     }
 461:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 462:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 463:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 464:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** static void optiga_shell_show_prompt()
 465:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** {
 466:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     optiga_lib_print_string("$");
 467:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 468:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 469:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** void optiga_shell_begin(void)
 470:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** {
 1324              	 .loc 1 470 0
 1325              	 .cfi_startproc
 1326              	 
 1327              	 
 1328 0000 30B5     	 push {r4,r5,lr}
 1329              	.LCFI37:
 1330              	 .cfi_def_cfa_offset 12
 1331              	 .cfi_offset 4,-12
 1332              	 .cfi_offset 5,-8
 1333              	 .cfi_offset 14,-4
 1334 0002 97B0     	 sub sp,sp,#92
 1335              	.LCFI38:
 1336              	 .cfi_def_cfa_offset 104
 1337              	.LBB19:
 1338              	.LBB20:
 466:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 1339              	 .loc 1 466 0
 1340 0004 3F48     	 ldr r0,.L108
 1341              	.LBE20:
 1342              	.LBE19:
 471:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     uint8_t ch = 0;
 1343              	 .loc 1 471 0
 1344 0006 0024     	 movs r4,#0
 1345 0008 8DF80340 	 strb r4,[sp,#3]
 1346              	.LVL104:
 1347              	.LBB22:
 1348              	.LBB21:
 466:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 1349              	 .loc 1 466 0
 1350 000c FFF7FEFF 	 bl optiga_lib_print_string
 1351              	.LVL105:
 1352              	.LBE21:
 1353              	.LBE22:
 472:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     char_t user_cmd[50];
 473:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     uint8_t index = 0;
 474:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 475:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     optiga_shell_show_prompt();
 476:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     optiga_shell_show_usage();
 1354              	 .loc 1 476 0
 1355 0010 FFF7FEFF 	 bl optiga_shell_show_usage
 1356              	.LVL106:
 1357              	.LBB23:
 1358              	.LBB24:
 466:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 1359              	 .loc 1 466 0
 1360 0014 3B48     	 ldr r0,.L108
 1361 0016 FFF7FEFF 	 bl optiga_lib_print_string
 1362              	.LVL107:
 1363              	.L85:
 1364              	.LBE24:
 1365              	.LBE23:
 477:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     optiga_shell_show_prompt();
 478:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 479:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     //lint --e{716} Suppress the infinite loop
 480:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     while(TRUE)
 481:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     {
 482:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         if (0 == pal_logger_read(&logger_console,&ch,1))
 1366              	 .loc 1 482 0
 1367 001a 3B48     	 ldr r0,.L108+4
 1368 001c 0DF10301 	 add r1,sp,#3
 1369 0020 0122     	 movs r2,#1
 1370 0022 FFF7FEFF 	 bl pal_logger_read
 1371              	.LVL108:
 1372 0026 0028     	 cmp r0,#0
 1373 0028 F7D1     	 bne .L85
 483:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {
 484:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 485:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             if(ch == 0x0d || ch == 0x0a)
 1374              	 .loc 1 485 0
 1375 002a 9DF80330 	 ldrb r3,[sp,#3]
 1376 002e 16AA     	 add r2,sp,#88
 1377 0030 0D2B     	 cmp r3,#13
 1378 0032 02EB0405 	 add r5,r2,r4
 1379 0036 01D0     	 beq .L86
 1380              	 .loc 1 485 0 is_stmt 0 discriminator 1
 1381 0038 0A2B     	 cmp r3,#10
 1382 003a 55D1     	 bne .L87
 1383              	.L86:
 486:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             {
 487:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                 user_cmd[index++] = 0;
 1384              	 .loc 1 487 0 is_stmt 1
 1385 003c 0023     	 movs r3,#0
 488:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                 index = 0;
 489:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                 optiga_lib_print_string_with_newline("");
 1386              	 .loc 1 489 0
 1387 003e 3348     	 ldr r0,.L108+8
 487:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                 index = 0;
 1388              	 .loc 1 487 0
 1389 0040 05F8343C 	 strb r3,[r5,#-52]
 1390              	.LVL109:
 1391              	 .loc 1 489 0
 1392 0044 FFF7FEFF 	 bl optiga_lib_print_string_with_newline
 1393              	.LVL110:
 1394              	.LBB25:
 1395              	.LBB26:
 425:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {
 1396              	 .loc 1 425 0
 1397 0048 09A8     	 add r0,sp,#36
 1398              	.LVL111:
 1399 004a 3149     	 ldr r1,.L108+12
 1400 004c 0922     	 movs r2,#9
 1401 004e FFF7FEFF 	 bl strncmp
 1402              	.LVL112:
 1403 0052 0028     	 cmp r0,#0
 1404 0054 3BD1     	 bne .L96
 1405 0056 0DF12301 	 add r1,sp,#35
 1406 005a 09AB     	 add r3,sp,#36
 1407              	.LVL113:
 1408              	.L89:
 1409              	.LBB27:
 1410              	.LBB28:
 402:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     {
 1411              	 .loc 1 402 0
 1412 005c 11F8012F 	 ldrb r2,[r1,#1]!
 1413              	.LVL114:
 404:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         if(*i != ' ')
 1414              	 .loc 1 404 0
 1415 0060 1A70     	 strb r2,[r3]
 402:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     {
 1416              	 .loc 1 402 0
 1417 0062 1AB1     	 cbz r2,.L107
 1418              	.LVL115:
 405:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             i++;
 1419              	 .loc 1 405 0
 1420 0064 202A     	 cmp r2,#32
 406:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     }
 1421              	 .loc 1 406 0
 1422 0066 18BF     	 it ne
 1423 0068 0133     	 addne r3,r3,#1
 1424              	.LVL116:
 1425 006a F7E7     	 b .L89
 1426              	.LVL117:
 1427              	.L107:
 409:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     {
 1428              	 .loc 1 409 0
 1429 006c 09A8     	 add r0,sp,#36
 1430              	.LVL118:
 1431 006e FFF7FEFF 	 bl strlen
 1432              	.LVL119:
 1433 0072 0928     	 cmp r0,#9
 1434 0074 03D9     	 bls .L92
 411:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     }
 1435              	 .loc 1 411 0
 1436 0076 09A8     	 add r0,sp,#36
 1437              	.LVL120:
 1438 0078 0BA9     	 add r1,sp,#44
 1439 007a FFF7FEFF 	 bl strcpy
 1440              	.LVL121:
 1441              	.L92:
 1442              	.LBE28:
 1443              	.LBE27:
 425:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {
 1444              	 .loc 1 425 0
 1445 007e 0025     	 movs r5,#0
 1446              	.LVL122:
 1447              	.L97:
 1448 0080 244C     	 ldr r4,.L108+16
 1449 0082 0C23     	 movs r3,#12
 1450 0084 03FB0544 	 mla r4,r3,r5,r4
 433:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             {
 1451              	 .loc 1 433 0
 1452 0088 09A8     	 add r0,sp,#36
 1453              	.LVL123:
 1454 008a 6168     	 ldr r1,[r4,#4]
 1455 008c FFF7FEFF 	 bl strcmp
 1456              	.LVL124:
 1457 0090 D0B9     	 cbnz r0,.L93
 435:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                 {
 1458              	 .loc 1 435 0
 1459 0092 A368     	 ldr r3,[r4,#8]
 1460 0094 A3B1     	 cbz r3,.L94
 1461              	.LBB29:
 437:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                     current_cmd->cmd_handler();
 1462              	 .loc 1 437 0
 1463 0096 FFF7FEFF 	 bl pal_os_timer_get_time_in_milliseconds
 1464              	.LVL125:
 438:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                     char buffer_string[30];
 1465              	 .loc 1 438 0
 1466 009a A368     	 ldr r3,[r4,#8]
 437:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                     current_cmd->cmd_handler();
 1467              	 .loc 1 437 0
 1468 009c 0546     	 mov r5,r0
 1469              	.LVL126:
 438:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                     char buffer_string[30];
 1470              	 .loc 1 438 0
 1471 009e 9847     	 blx r3
 1472              	.LVL127:
 441:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                     OPTIGA_EXAMPLE_LOG_MESSAGE(buffer_string);
 1473              	 .loc 1 441 0
 1474 00a0 FFF7FEFF 	 bl pal_os_timer_get_time_in_milliseconds
 1475              	.LVL128:
 1476 00a4 1C49     	 ldr r1,.L108+20
 1477 00a6 421B     	 subs r2,r0,r5
 1478 00a8 01A8     	 add r0,sp,#4
 1479 00aa FFF7FEFF 	 bl sprintf
 1480              	.LVL129:
 442:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                     optiga_lib_print_string_with_newline("");
 1481              	 .loc 1 442 0
 1482 00ae 01A8     	 add r0,sp,#4
 1483 00b0 1A49     	 ldr r1,.L108+24
 1484 00b2 1B4A     	 ldr r2,.L108+28
 1485 00b4 FFF7FEFF 	 bl optiga_lib_print_message
 1486              	.LVL130:
 443:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                     cmd_found = 1;
 1487              	 .loc 1 443 0
 1488 00b8 1448     	 ldr r0,.L108+8
 1489 00ba FFF7FEFF 	 bl optiga_lib_print_string_with_newline
 1490              	.LVL131:
 1491 00be 0EE0     	 b .L95
 1492              	.LVL132:
 1493              	.L94:
 1494              	.LBE29:
 449:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                     break;
 1495              	 .loc 1 449 0
 1496 00c0 1848     	 ldr r0,.L108+32
 1497 00c2 FFF7FEFF 	 bl optiga_lib_print_string_with_newline
 1498              	.LVL133:
 1499 00c6 02E0     	 b .L96
 1500              	.L93:
 1501              	.LVL134:
 1502 00c8 0135     	 adds r5,r5,#1
 1503              	.LVL135:
 430:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {
 1504              	 .loc 1 430 0
 1505 00ca 112D     	 cmp r5,#17
 1506 00cc D8D1     	 bne .L97
 1507              	.LVL136:
 1508              	.L96:
 457:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         optiga_lib_print_string_with_newline("No example exists for this request chose below option
 1509              	 .loc 1 457 0
 1510 00ce 0F48     	 ldr r0,.L108+8
 1511 00d0 FFF7FEFF 	 bl optiga_lib_print_string_with_newline
 1512              	.LVL137:
 458:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         optiga_shell_show_usage();
 1513              	 .loc 1 458 0
 1514 00d4 1448     	 ldr r0,.L108+36
 1515 00d6 FFF7FEFF 	 bl optiga_lib_print_string_with_newline
 1516              	.LVL138:
 459:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     }
 1517              	 .loc 1 459 0
 1518 00da FFF7FEFF 	 bl optiga_shell_show_usage
 1519              	.LVL139:
 1520              	.L95:
 1521              	.LBE26:
 1522              	.LBE25:
 1523              	.LBB30:
 1524              	.LBB31:
 466:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 1525              	 .loc 1 466 0
 1526 00de 0948     	 ldr r0,.L108
 1527 00e0 FFF7FEFF 	 bl optiga_lib_print_string
 1528              	.LVL140:
 1529              	.LBE31:
 1530              	.LBE30:
 488:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                 optiga_lib_print_string_with_newline("");
 1531              	 .loc 1 488 0
 1532 00e4 0024     	 movs r4,#0
 1533 00e6 98E7     	 b .L85
 1534              	.LVL141:
 1535              	.L87:
 490:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                 //start cmd parsing
 491:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                 optiga_shell_execute_example((char_t * )user_cmd);
 492:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                 optiga_shell_show_prompt();
 493:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             }
 494:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             else
 495:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             {
 496:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                 //keep adding
 497:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                 //lint --e{534,713} The return value is not used hence not checked*/
 498:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                 pal_logger_write(&logger_console, &ch, 1);
 1536              	 .loc 1 498 0
 1537 00e8 0748     	 ldr r0,.L108+4
 1538 00ea 0DF10301 	 add r1,sp,#3
 1539 00ee 0122     	 movs r2,#1
 1540 00f0 FFF7FEFF 	 bl pal_logger_write
 1541              	.LVL142:
 499:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****                 user_cmd[index++] = ch;
 1542              	 .loc 1 499 0
 1543 00f4 0134     	 adds r4,r4,#1
 1544              	.LVL143:
 1545 00f6 9DF80330 	 ldrb r3,[sp,#3]
 1546 00fa 05F8343C 	 strb r3,[r5,#-52]
 1547 00fe E4B2     	 uxtb r4,r4
 1548 0100 8BE7     	 b .L85
 1549              	.L109:
 1550 0102 00BF     	 .align 2
 1551              	.L108:
 1552 0104 730A0000 	 .word .LC58
 1553 0108 00000000 	 .word logger_console
 1554 010c 2D0A0000 	 .word .LC54
 1555 0110 750A0000 	 .word .LC59
 1556 0114 00000000 	 .word .LANCHOR2
 1557 0118 5D0A0000 	 .word .LC57
 1558 011c 52090000 	 .word .LC47
 1559 0120 67090000 	 .word .LC48
 1560 0124 7F0A0000 	 .word .LC60
 1561 0128 A20A0000 	 .word .LC61
 1562              	 .cfi_endproc
 1563              	.LFE409:
 1565              	 .section .text.optiga_shell_wait_for_user,"ax",%progbits
 1566              	 .align 1
 1567              	 .global optiga_shell_wait_for_user
 1568              	 .thumb
 1569              	 .thumb_func
 1571              	optiga_shell_wait_for_user:
 1572              	.LFB410:
 500:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             }
 501:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         }
 502:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     }
 503:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 504:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** 
 505:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** void optiga_shell_wait_for_user(void)
 506:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** {
 1573              	 .loc 1 506 0
 1574              	 .cfi_startproc
 1575              	 
 1576              	 
 1577              	.LVL144:
 1578 0000 07B5     	 push {r0,r1,r2,lr}
 1579              	.LCFI39:
 1580              	 .cfi_def_cfa_offset 16
 1581              	 .cfi_offset 14,-4
 507:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     uint16_t bytes = 0;
 508:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     uint8_t ch = 0;
 1582              	 .loc 1 508 0
 1583 0002 0023     	 movs r3,#0
 1584 0004 8DF80730 	 strb r3,[sp,#7]
 1585              	.L112:
 509:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     //lint --e{716} Suppress the infinite loop
 510:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     while(TRUE)
 511:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     {
 512:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         bytes = USBD_VCOM_BytesReceived();
 1586              	 .loc 1 512 0
 1587 0008 FFF7FEFF 	 bl USBD_VCOM_BytesReceived
 1588              	.LVL145:
 513:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         if (bytes)
 1589              	 .loc 1 513 0
 1590 000c 40B1     	 cbz r0,.L111
 514:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {
 515:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             //lint --e{534} The return value is not used hence not checked*/
 516:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             pal_logger_read(&logger_console,&ch,1);
 1591              	 .loc 1 516 0
 1592 000e 0DF10701 	 add r1,sp,#7
 1593 0012 0122     	 movs r2,#1
 1594 0014 0848     	 ldr r0,.L114
 1595              	.LVL146:
 1596 0016 FFF7FEFF 	 bl pal_logger_read
 1597              	.LVL147:
 517:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             break;
 518:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         }
 519:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         else
 520:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         {
 521:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             optiga_lib_print_string_with_newline("Press any key to start optiga mini shell");
 522:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             pal_os_timer_delay_in_milliseconds(2000);
 523:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         }
 524:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         bytes = 0;
 525:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         CDC_Device_USBTask(&USBD_VCOM_cdc_interface);
 526:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     }
 527:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 1598              	 .loc 1 527 0
 1599 001a 03B0     	 add sp,sp,#12
 1600              	.LCFI40:
 1601              	 .cfi_remember_state
 1602              	 .cfi_def_cfa_offset 4
 1603              	 
 1604 001c 5DF804FB 	 ldr pc,[sp],#4
 1605              	.LVL148:
 1606              	.L111:
 1607              	.LCFI41:
 1608              	 .cfi_restore_state
 521:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****             pal_os_timer_delay_in_milliseconds(2000);
 1609              	 .loc 1 521 0
 1610 0020 0648     	 ldr r0,.L114+4
 1611              	.LVL149:
 1612 0022 FFF7FEFF 	 bl optiga_lib_print_string_with_newline
 1613              	.LVL150:
 522:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****         }
 1614              	 .loc 1 522 0
 1615 0026 4FF4FA60 	 mov r0,#2000
 1616 002a FFF7FEFF 	 bl pal_os_timer_delay_in_milliseconds
 1617              	.LVL151:
 525:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c ****     }
 1618              	 .loc 1 525 0
 1619 002e 0448     	 ldr r0,.L114+8
 1620 0030 FFF7FEFF 	 bl CDC_Device_USBTask
 1621              	.LVL152:
 526:C:/Users/Yushev/git/optiga-trust-qi/examples\optiga_shell.c **** }
 1622              	 .loc 1 526 0
 1623 0034 E8E7     	 b .L112
 1624              	.L115:
 1625 0036 00BF     	 .align 2
 1626              	.L114:
 1627 0038 00000000 	 .word logger_console
 1628 003c D90A0000 	 .word .LC62
 1629 0040 00000000 	 .word USBD_VCOM_cdc_interface
 1630              	 .cfi_endproc
 1631              	.LFE410:
 1633              	 .global optiga_cmds
 1634              	 .global me_util
 1635              	 .section .data.optiga_cmds,"aw",%progbits
 1636              	 .align 2
 1637              	 .set .LANCHOR2,.+0
 1640              	optiga_cmds:
 1641 0000 2D0A0000 	 .word .LC54
 1642 0004 580A0000 	 .word .LC56
 1643 0008 00000000 	 .word optiga_shell_show_usage
 1644 000c 020B0000 	 .word .LC63
 1645 0010 3B0B0000 	 .word .LC64
 1646 0014 00000000 	 .word optiga_shell_init
 1647 0018 400B0000 	 .word .LC65
 1648 001c 790B0000 	 .word .LC66
 1649 0020 00000000 	 .word optiga_shell_deinit
 1650 0024 800B0000 	 .word .LC67
 1651 0028 B90B0000 	 .word .LC68
 1652 002c 00000000 	 .word optiga_shell_selftest
 1653 0030 C20B0000 	 .word .LC69
 1654 0034 FB0B0000 	 .word .LC70
 1655 0038 00000000 	 .word optiga_shell_util_read_data
 1656 003c 040C0000 	 .word .LC71
 1657 0040 3D0C0000 	 .word .LC72
 1658 0044 00000000 	 .word optiga_shell_util_write_data
 1659 0048 470C0000 	 .word .LC73
 1660 004c 800C0000 	 .word .LC74
 1661 0050 00000000 	 .word optiga_shell_util_read_coprocessor_id
 1662 0054 890C0000 	 .word .LC75
 1663 0058 C20C0000 	 .word .LC76
 1664 005c 00000000 	 .word optiga_shell_pair_host_optiga
 1665 0060 C70C0000 	 .word .LC77
 1666 0064 000D0000 	 .word .LC78
 1667 0068 00000000 	 .word optiga_shell_util_hibernate_restore
 1668 006c 0A0D0000 	 .word .LC79
 1669 0070 430D0000 	 .word .LC80
 1670 0074 00000000 	 .word optiga_shell_util_update_count
 1671 0078 4B0D0000 	 .word .LC81
 1672 007c 840D0000 	 .word .LC82
 1673 0080 00000000 	 .word optiga_shell_util_protected_update
 1674 0084 8E0D0000 	 .word .LC83
 1675 0088 C70D0000 	 .word .LC84
 1676 008c 00000000 	 .word optiga_shell_crypt_hash
 1677 0090 CC0D0000 	 .word .LC85
 1678 0094 050E0000 	 .word .LC86
 1679 0098 00000000 	 .word optiga_shell_crypt_hash_data
 1680 009c 100E0000 	 .word .LC87
 1681 00a0 490E0000 	 .word .LC88
 1682 00a4 00000000 	 .word optiga_shell_crypt_random
 1683 00a8 500E0000 	 .word .LC89
 1684 00ac 890E0000 	 .word .LC90
 1685 00b0 00000000 	 .word optiga_shell_crypt_ecc_generate_keypair
 1686 00b4 930E0000 	 .word .LC91
 1687 00b8 CC0E0000 	 .word .LC92
 1688 00bc 00000000 	 .word optiga_shell_crypt_ecdsa_sign
 1689 00c0 D60E0000 	 .word .LC93
 1690 00c4 0F0F0000 	 .word .LC94
 1691 00c8 00000000 	 .word optiga_shell_crypt_ecdsa_verify
 1692              	 .section .rodata.str1.1,"aMS",%progbits,1
 1693              	.LC0:
 1694 0000 53746172 	 .ascii "Starting verification example for Elliptic-curve Di"
 1694      74696E67 
 1694      20766572 
 1694      69666963 
 1694      6174696F 
 1695 0033 67697461 	 .ascii "gital Signature Algorithm (ECDSA)\000"
 1695      6C205369 
 1695      676E6174 
 1695      75726520 
 1695      416C676F 
 1696              	.LC1:
 1697 0055 5B6F7074 	 .ascii "[optiga shell]  : \000"
 1697      69676120 
 1697      7368656C 
 1697      6C5D2020 
 1697      3A2000
 1698              	.LC2:
 1699 0068 1B5B3932 	 .ascii "\033[92m\000"
 1699      6D00
 1700              	.LC3:
 1701 006e 31205374 	 .ascii "1 Step: Verify prepared signature, with prepared pu"
 1701      65703A20 
 1701      56657269 
 1701      66792070 
 1701      72657061 
 1702 00a1 626C6963 	 .ascii "blic key and digest\000"
 1702      206B6579 
 1702      20616E64 
 1702      20646967 
 1702      65737400 
 1703              	.LC4:
 1704 00b5 53746172 	 .ascii "Starting signing example for Elliptic-curve Digital"
 1704      74696E67 
 1704      20736967 
 1704      6E696E67 
 1704      20657861 
 1705 00e8 20536967 	 .ascii " Signature Algorithm (ECDSA)\000"
 1705      6E617475 
 1705      72652041 
 1705      6C676F72 
 1705      6974686D 
 1706              	.LC5:
 1707 0105 31205374 	 .ascii "1 Step: Sign prepared Data and export the signature"
 1707      65703A20 
 1707      5369676E 
 1707      20707265 
 1707      70617265 
 1708 0138 00       	 .ascii "\000"
 1709              	.LC6:
 1710 0139 53746172 	 .ascii "Starting generate ECC Key Example\000"
 1710      74696E67 
 1710      2067656E 
 1710      65726174 
 1710      65204543 
 1711              	.LC7:
 1712 015b 31205374 	 .ascii "1 Step: Generate ECC NIST P-256 Key Pair and export"
 1712      65703A20 
 1712      47656E65 
 1712      72617465 
 1712      20454343 
 1713 018e 20746865 	 .ascii " the public key\000"
 1713      20707562 
 1713      6C696320 
 1713      6B657900 
 1714              	.LC8:
 1715 019e 53746172 	 .ascii "Starting Generate Random Example\000"
 1715      74696E67 
 1715      2047656E 
 1715      65726174 
 1715      65205261 
 1716              	.LC9:
 1717 01bf 31205374 	 .ascii "1 Step: Generate 32 bytes random\000"
 1717      65703A20 
 1717      47656E65 
 1717      72617465 
 1717      20333220 
 1718              	.LC10:
 1719 01e0 53746172 	 .ascii "Starting generation of digest Example\000"
 1719      74696E67 
 1719      2067656E 
 1719      65726174 
 1719      696F6E20 
 1720              	.LC11:
 1721 0206 31205374 	 .ascii "1 Step: Generate hash of given user data \000"
 1721      65703A20 
 1721      47656E65 
 1721      72617465 
 1721      20686173 
 1722              	.LC12:
 1723 0230 53746172 	 .ascii "Starting Hash Example\000"
 1723      74696E67 
 1723      20486173 
 1723      68204578 
 1723      616D706C 
 1724              	.LC13:
 1725 0246 31205374 	 .ascii "1 Step: Hash given data with Start, Update and Fina"
 1725      65703A20 
 1725      48617368 
 1725      20676976 
 1725      656E2064 
 1726 0279 6C697A65 	 .ascii "lize calls\000"
 1726      2063616C 
 1726      6C7300
 1727              	.LC14:
 1728 0284 53746172 	 .ascii "Starting Protected Update Example\000"
 1728      74696E67 
 1728      2050726F 
 1728      74656374 
 1728      65642055 
 1729              	.LC15:
 1730 02a6 31205374 	 .ascii "1 Step: Update Metadata for the Object to be update"
 1730      65703A20 
 1730      55706461 
 1730      7465204D 
 1730      65746164 
 1731 02d9 6420616E 	 .ascii "d and the Trust Anchor used to verify the update\000"
 1731      64207468 
 1731      65205472 
 1731      75737420 
 1731      416E6368 
 1732              	.LC16:
 1733 030a 32205374 	 .ascii "2 Step: Write Trust Anchor used by the Trust Qi to "
 1733      65703A20 
 1733      57726974 
 1733      65205472 
 1733      75737420 
 1734 033d 76657269 	 .ascii "verify the update\000"
 1734      66792074 
 1734      68652075 
 1734      70646174 
 1734      6500
 1735              	.LC17:
 1736 034f 33205374 	 .ascii "3 Step: Start Protected update with prepared manife"
 1736      65703A20 
 1736      53746172 
 1736      74205072 
 1736      6F746563 
 1737 0382 73742061 	 .ascii "st and fragments\000"
 1737      6E642066 
 1737      7261676D 
 1737      656E7473 
 1737      00
 1738              	.LC18:
 1739 0393 53746172 	 .ascii "Starting Update Counter Example\000"
 1739      74696E67 
 1739      20557064 
 1739      61746520 
 1739      436F756E 
 1740              	.LC19:
 1741 03b3 31205374 	 .ascii "1 Step: Write Initial Counter Value\000"
 1741      65703A20 
 1741      57726974 
 1741      6520496E 
 1741      69746961 
 1742              	.LC20:
 1743 03d7 32205374 	 .ascii "2 Step: Increase Counter Object\000"
 1743      65703A20 
 1743      496E6372 
 1743      65617365 
 1743      20436F75 
 1744              	.LC21:
 1745 03f7 53746172 	 .ascii "Starting Hibernate and Restore Example\000"
 1745      74696E67 
 1745      20486962 
 1745      65726E61 
 1745      74652061 
 1746              	.LC22:
 1747 041e 31205374 	 .ascii "1 Step: Open Application on the security chip\000"
 1747      65703A20 
 1747      4F70656E 
 1747      20417070 
 1747      6C696361 
 1748              	.LC23:
 1749 044c 32205374 	 .ascii "2 Step: Pair the host and the security chip\000"
 1749      65703A20 
 1749      50616972 
 1749      20746865 
 1749      20686F73 
 1750              	.LC24:
 1751 0478 33205374 	 .ascii "3 Step: Select Protected I2C Connection\000"
 1751      65703A20 
 1751      53656C65 
 1751      63742050 
 1751      726F7465 
 1752              	.LC25:
 1753 04a0 34205374 	 .ascii "4 Step: Generate ECC NIST P-256 Key pair and store "
 1753      65703A20 
 1753      47656E65 
 1753      72617465 
 1753      20454343 
 1754 04d3 69742069 	 .ascii "it in Session Data Object, export the public key\000"
 1754      6E205365 
 1754      7373696F 
 1754      6E204461 
 1754      7461204F 
 1755              	.LC26:
 1756 0504 35205374 	 .ascii "5 Step: Check Security Event Counter and wait till "
 1756      65703A20 
 1756      43686563 
 1756      6B205365 
 1756      63757269 
 1757 0537 69742072 	 .ascii "it reaches 0\000"
 1757      65616368 
 1757      65732030 
 1757      00
 1758              	.LC27:
 1759 0544 36205374 	 .ascii "6 Step: Perform Close application with Hibernate pa"
 1759      65703A20 
 1759      50657266 
 1759      6F726D20 
 1759      436C6F73 
 1760 0577 72616D65 	 .ascii "rameter set to True\000"
 1760      74657220 
 1760      73657420 
 1760      746F2054 
 1760      72756500 
 1761              	.LC28:
 1762 058b 37205374 	 .ascii "7 Step: Open Application on the security chip\000"
 1762      65703A20 
 1762      4F70656E 
 1762      20417070 
 1762      6C696361 
 1763              	.LC29:
 1764 05b9 38205374 	 .ascii "8 Step: Sign prepared data with private key stored "
 1764      65703A20 
 1764      5369676E 
 1764      20707265 
 1764      70617265 
 1765 05ec 696E2053 	 .ascii "in Session Data Object\000"
 1765      65737369 
 1765      6F6E2044 
 1765      61746120 
 1765      4F626A65 
 1766              	.LC30:
 1767 0603 39205374 	 .ascii "9 Step: Verify the signature with the public key ge"
 1767      65703A20 
 1767      56657269 
 1767      66792074 
 1767      68652073 
 1768 0636 6E657261 	 .ascii "nerated previously\000"
 1768      74656420 
 1768      70726576 
 1768      696F7573 
 1768      6C7900
 1769              	.LC31:
 1770 0649 31302053 	 .ascii "10 Step: Close Application on the chip\000"
 1770      7465703A 
 1770      20436C6F 
 1770      73652041 
 1770      70706C69 
 1771              	.LC32:
 1772 0670 496D706F 	 .ascii "Important note: To continue with other examples you"
 1772      7274616E 
 1772      74206E6F 
 1772      74653A20 
 1772      546F2063 
 1773 06a3 206E6565 	 .ascii " need to call the init parameter once again\000"
 1773      6420746F 
 1773      2063616C 
 1773      6C207468 
 1773      6520696E 
 1774              	.LC33:
 1775 06cf 53746172 	 .ascii "Starting Pairing of Host and Trust Qi Example\000"
 1775      74696E67 
 1775      20506169 
 1775      72696E67 
 1775      206F6620 
 1776              	.LC34:
 1777 06fd 31205374 	 .ascii "1 Step: Read and Check existing Metadata for the Bi"
 1777      65703A20 
 1777      52656164 
 1777      20616E64 
 1777      20436865 
 1778 0730 6E64696E 	 .ascii "nding Secret\000"
 1778      67205365 
 1778      63726574 
 1778      00
 1779              	.LC35:
 1780 073d 32205374 	 .ascii "2 Step: Generate Random for the new Binding Secret\000"
 1780      65703A20 
 1780      47656E65 
 1780      72617465 
 1780      2052616E 
 1781              	.LC36:
 1782 0770 33205374 	 .ascii "3 Step: Write new Binding Secret\000"
 1782      65703A20 
 1782      57726974 
 1782      65206E65 
 1782      77204269 
 1783              	.LC37:
 1784 0791 34205374 	 .ascii "4 Step: Store new Binding Secret on the Host\000"
 1784      65703A20 
 1784      53746F72 
 1784      65206E65 
 1784      77204269 
 1785              	.LC38:
 1786 07be 53746172 	 .ascii "Starting reading of Coprocessor ID and displaying i"
 1786      74696E67 
 1786      20726561 
 1786      64696E67 
 1786      206F6620 
 1787 07f1 74277320 	 .ascii "t's individual components Example\000"
 1787      696E6469 
 1787      76696475 
 1787      616C2063 
 1787      6F6D706F 
 1788              	.LC39:
 1789 0813 31205374 	 .ascii "1 Step: Read Coprocessor UID from OID(0xE0C2) \000"
 1789      65703A20 
 1789      52656164 
 1789      20436F70 
 1789      726F6365 
 1790              	.LC40:
 1791 0842 53746172 	 .ascii "Starting Write Data/Metadata Example\000"
 1791      74696E67 
 1791      20577269 
 1791      74652044 
 1791      6174612F 
 1792              	.LC41:
 1793 0867 31205374 	 .ascii "1 Step: Write Sample Certificate in Trust Anchor Da"
 1793      65703A20 
 1793      57726974 
 1793      65205361 
 1793      6D706C65 
 1794 089a 7461204F 	 .ascii "ta Object \000"
 1794      626A6563 
 1794      742000
 1795              	.LC42:
 1796 08a5 32205374 	 .ascii "2 Step: Write new Metadata\000"
 1796      65703A20 
 1796      57726974 
 1796      65206E65 
 1796      77204D65 
 1797              	.LC43:
 1798 08c0 53746172 	 .ascii "Starting Read Data/Metadata Example\000"
 1798      74696E67 
 1798      20526561 
 1798      64204461 
 1798      74612F4D 
 1799              	.LC44:
 1800 08e4 31205374 	 .ascii "1 Step: Read Certificate \000"
 1800      65703A20 
 1800      52656164 
 1800      20436572 
 1800      74696669 
 1801              	.LC45:
 1802 08fe 32205374 	 .ascii "2 Step: Read Certificate Metadata\000"
 1802      65703A20 
 1802      52656164 
 1802      20436572 
 1802      74696669 
 1803              	.LC46:
 1804 0920 496E6974 	 .ascii "Initializing OPTIGA for example demonstration...\012"
 1804      69616C69 
 1804      7A696E67 
 1804      204F5054 
 1804      49474120 
 1805 0951 00       	 .ascii "\000"
 1806              	.LC47:
 1807 0952 5B6F7074 	 .ascii "[optiga example]  : \000"
 1807      69676120 
 1807      6578616D 
 1807      706C655D 
 1807      20203A20 
 1808              	.LC48:
 1809 0967 1B5B306D 	 .ascii "\033[0m\000"
 1809      00
 1810              	.LC49:
 1811 096c 496E6974 	 .ascii "Initializing OPTIGA completed...\012\012\000"
 1811      69616C69 
 1811      7A696E67 
 1811      204F5054 
 1811      49474120 
 1812              	.LC50:
 1813 098f 42656769 	 .ascii "Begin pairing of host and OPTIGA...\000"
 1813      6E207061 
 1813      6972696E 
 1813      67206F66 
 1813      20686F73 
 1814              	.LC51:
 1815 09b3 50616972 	 .ascii "Pairing of host and OPTIGA completed...\000"
 1815      696E6720 
 1815      6F662068 
 1815      6F737420 
 1815      616E6420 
 1816              	.LC52:
 1817 09db 53657474 	 .ascii "Setting current limitation to maximum...\000"
 1817      696E6720 
 1817      63757272 
 1817      656E7420 
 1817      6C696D69 
 1818              	.LC53:
 1819 0a04 53746172 	 .ascii "Starting OPTIGA example demonstration..\012\000"
 1819      74696E67 
 1819      204F5054 
 1819      49474120 
 1819      6578616D 
 1820              	.LC54:
 1821 0a2d 00       	 .ascii "\000"
 1822              	.LC55:
 1823 0a2e 20202020 	 .ascii "    usage                : optiga --<cmd>\000"
 1823      75736167 
 1823      65202020 
 1823      20202020 
 1823      20202020 
 1824              	.LC56:
 1825 0a58 68656C70 	 .ascii "help\000"
 1825      00
 1826              	.LC57:
 1827 0a5d 4578616D 	 .ascii "Example takes %d msec\000"
 1827      706C6520 
 1827      74616B65 
 1827      73202564 
 1827      206D7365 
 1828              	.LC58:
 1829 0a73 2400     	 .ascii "$\000"
 1830              	.LC59:
 1831 0a75 6F707469 	 .ascii "optiga --\000"
 1831      6761202D 
 1831      2D00
 1832              	.LC60:
 1833 0a7f 4E6F2065 	 .ascii "No example exists for this request\000"
 1833      78616D70 
 1833      6C652065 
 1833      78697374 
 1833      7320666F 
 1834              	.LC61:
 1835 0aa2 4E6F2065 	 .ascii "No example exists for this request chose below opti"
 1835      78616D70 
 1835      6C652065 
 1835      78697374 
 1835      7320666F 
 1836 0ad5 6F6E7300 	 .ascii "ons\000"
 1837              	.LC62:
 1838 0ad9 50726573 	 .ascii "Press any key to start optiga mini shell\000"
 1838      7320616E 
 1838      79206B65 
 1838      7920746F 
 1838      20737461 
 1839              	.LC63:
 1840 0b02 20202020 	 .ascii "    initialize optiga                        : opti"
 1840      696E6974 
 1840      69616C69 
 1840      7A65206F 
 1840      70746967 
 1841 0b35 6761202D 	 .ascii "ga --\000"
 1841      2D00
 1842              	.LC64:
 1843 0b3b 696E6974 	 .ascii "init\000"
 1843      00
 1844              	.LC65:
 1845 0b40 20202020 	 .ascii "    de-initialize optiga                     : opti"
 1845      64652D69 
 1845      6E697469 
 1845      616C697A 
 1845      65206F70 
 1846 0b73 6761202D 	 .ascii "ga --\000"
 1846      2D00
 1847              	.LC66:
 1848 0b79 6465696E 	 .ascii "deinit\000"
 1848      697400
 1849              	.LC67:
 1850 0b80 20202020 	 .ascii "    run all tests at once                    : opti"
 1850      72756E20 
 1850      616C6C20 
 1850      74657374 
 1850      73206174 
 1851 0bb3 6761202D 	 .ascii "ga --\000"
 1851      2D00
 1852              	.LC68:
 1853 0bb9 73656C66 	 .ascii "selftest\000"
 1853      74657374 
 1853      00
 1854              	.LC69:
 1855 0bc2 20202020 	 .ascii "    read data                                : opti"
 1855      72656164 
 1855      20646174 
 1855      61202020 
 1855      20202020 
 1856 0bf5 6761202D 	 .ascii "ga --\000"
 1856      2D00
 1857              	.LC70:
 1858 0bfb 72656164 	 .ascii "readdata\000"
 1858      64617461 
 1858      00
 1859              	.LC71:
 1860 0c04 20202020 	 .ascii "    write data                               : opti"
 1860      77726974 
 1860      65206461 
 1860      74612020 
 1860      20202020 
 1861 0c37 6761202D 	 .ascii "ga --\000"
 1861      2D00
 1862              	.LC72:
 1863 0c3d 77726974 	 .ascii "writedata\000"
 1863      65646174 
 1863      6100
 1864              	.LC73:
 1865 0c47 20202020 	 .ascii "    read coprocessor id                      : opti"
 1865      72656164 
 1865      20636F70 
 1865      726F6365 
 1865      73736F72 
 1866 0c7a 6761202D 	 .ascii "ga --\000"
 1866      2D00
 1867              	.LC74:
 1868 0c80 636F7072 	 .ascii "coprocid\000"
 1868      6F636964 
 1868      00
 1869              	.LC75:
 1870 0c89 20202020 	 .ascii "    binding host with optiga                 : opti"
 1870      62696E64 
 1870      696E6720 
 1870      686F7374 
 1870      20776974 
 1871 0cbc 6761202D 	 .ascii "ga --\000"
 1871      2D00
 1872              	.LC76:
 1873 0cc2 62696E64 	 .ascii "bind\000"
 1873      00
 1874              	.LC77:
 1875 0cc7 20202020 	 .ascii "    hibernate and restore                    : opti"
 1875      68696265 
 1875      726E6174 
 1875      6520616E 
 1875      64207265 
 1876 0cfa 6761202D 	 .ascii "ga --\000"
 1876      2D00
 1877              	.LC78:
 1878 0d00 68696265 	 .ascii "hibernate\000"
 1878      726E6174 
 1878      6500
 1879              	.LC79:
 1880 0d0a 20202020 	 .ascii "    update counter                           : opti"
 1880      75706461 
 1880      74652063 
 1880      6F756E74 
 1880      65722020 
 1881 0d3d 6761202D 	 .ascii "ga --\000"
 1881      2D00
 1882              	.LC80:
 1883 0d43 636F756E 	 .ascii "counter\000"
 1883      74657200 
 1884              	.LC81:
 1885 0d4b 20202020 	 .ascii "    protected update                         : opti"
 1885      70726F74 
 1885      65637465 
 1885      64207570 
 1885      64617465 
 1886 0d7e 6761202D 	 .ascii "ga --\000"
 1886      2D00
 1887              	.LC82:
 1888 0d84 70726F74 	 .ascii "protected\000"
 1888      65637465 
 1888      6400
 1889              	.LC83:
 1890 0d8e 20202020 	 .ascii "    hashing of data                          : opti"
 1890      68617368 
 1890      696E6720 
 1890      6F662064 
 1890      61746120 
 1891 0dc1 6761202D 	 .ascii "ga --\000"
 1891      2D00
 1892              	.LC84:
 1893 0dc7 68617368 	 .ascii "hash\000"
 1893      00
 1894              	.LC85:
 1895 0dcc 20202020 	 .ascii "    hash single function                     : opti"
 1895      68617368 
 1895      2073696E 
 1895      676C6520 
 1895      66756E63 
 1896 0dff 6761202D 	 .ascii "ga --\000"
 1896      2D00
 1897              	.LC86:
 1898 0e05 68617368 	 .ascii "hashsha256\000"
 1898      73686132 
 1898      353600
 1899              	.LC87:
 1900 0e10 20202020 	 .ascii "    random number generation                 : opti"
 1900      72616E64 
 1900      6F6D206E 
 1900      756D6265 
 1900      72206765 
 1901 0e43 6761202D 	 .ascii "ga --\000"
 1901      2D00
 1902              	.LC88:
 1903 0e49 72616E64 	 .ascii "random\000"
 1903      6F6D00
 1904              	.LC89:
 1905 0e50 20202020 	 .ascii "    ecc key pair generation                  : opti"
 1905      65636320 
 1905      6B657920 
 1905      70616972 
 1905      2067656E 
 1906 0e83 6761202D 	 .ascii "ga --\000"
 1906      2D00
 1907              	.LC90:
 1908 0e89 6563636B 	 .ascii "ecckeygen\000"
 1908      65796765 
 1908      6E00
 1909              	.LC91:
 1910 0e93 20202020 	 .ascii "    ecdsa sign                               : opti"
 1910      65636473 
 1910      61207369 
 1910      676E2020 
 1910      20202020 
 1911 0ec6 6761202D 	 .ascii "ga --\000"
 1911      2D00
 1912              	.LC92:
 1913 0ecc 65636473 	 .ascii "ecdsasign\000"
 1913      61736967 
 1913      6E00
 1914              	.LC93:
 1915 0ed6 20202020 	 .ascii "    ecdsa verify sign                        : opti"
 1915      65636473 
 1915      61207665 
 1915      72696679 
 1915      20736967 
 1916 0f09 6761202D 	 .ascii "ga --\000"
 1916      2D00
 1917              	.LC94:
 1918 0f0f 65636473 	 .ascii "ecdsaverify\000"
 1918      61766572 
 1918      69667900 
 1919              	 .section .bss.me_util,"aw",%nobits
 1920              	 .align 2
 1921              	 .set .LANCHOR1,.+0
 1924              	me_util:
 1925 0000 00000000 	 .space 4
 1926              	 .section .bss.optiga_lib_status,"aw",%nobits
 1927              	 .align 1
 1928              	 .set .LANCHOR0,.+0
 1931              	optiga_lib_status:
 1932 0000 0000     	 .space 2
 1933              	 .text
 1934              	.Letext0:
 1935              	 .file 2 "c:\\users\\yushev\\dave_4-4-2_32bit_2018-02-23\\dave-ide-4.4.2-32bit\\eclipse\\arm-gcc-49\\lib\\gcc\\arm-none-eabi\\4.9.3\\include\\stddef.h"
 1936              	 .file 3 "c:\\users\\yushev\\dave_4-4-2_32bit_2018-02-23\\dave-ide-4.4.2-32bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1937              	 .file 4 "c:\\users\\yushev\\dave_4-4-2_32bit_2018-02-23\\dave-ide-4.4.2-32bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1938              	 .file 5 "C:/Users/Yushev/git/optiga-trust-qi/projects/xmc4700_relax_kit/common/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 1939              	 .file 6 "C:/Users/Yushev/git/optiga-trust-qi/projects/xmc4700_relax_kit/common/Libraries/XMCLib/inc/xmc_usic.h"
 1940              	 .file 7 "C:/Users/Yushev/git/optiga-trust-qi/projects/xmc4700_relax_kit/common/Libraries/XMCLib/inc/xmc_usbd_regs.h"
 1941              	 .file 8 "C:/Users/Yushev/git/optiga-trust-qi/projects/xmc4700_relax_kit/common/Libraries/XMCLib/inc/xmc_usbd.h"
 1942              	 .file 9 "C:/Users/Yushev/git/optiga-trust-qi/projects/xmc4700_relax_kit/common/Dave/Generated/USBD/usbd.h"
 1943              	 .file 10 "c:\\users\\yushev\\git\\optiga-trust-qi\\projects\\xmc4700_relax_kit\\common\\dave\\generated\\usbd\\usb\\core\\endpoint.h"
 1944              	 .file 11 "c:\\users\\yushev\\git\\optiga-trust-qi\\projects\\xmc4700_relax_kit\\common\\dave\\generated\\usbd_vcom\\class_driver\\common\\cdc_class_common.h"
 1945              	 .file 12 "c:\\users\\yushev\\git\\optiga-trust-qi\\projects\\xmc4700_relax_kit\\common\\dave\\generated\\usbd_vcom\\class_driver\\device/cdc_class_device.h"
 1946              	 .file 13 "C:/Users/Yushev/git/optiga-trust-qi/optiga/include/optiga/common/optiga_lib_types.h"
 1947              	 .file 14 "C:/Users/Yushev/git/optiga-trust-qi/optiga/include/optiga/common/optiga_lib_common.h"
 1948              	 .file 15 "C:/Users/Yushev/git/optiga-trust-qi/optiga/include/optiga/cmd/optiga_cmd.h"
 1949              	 .file 16 "C:/Users/Yushev/git/optiga-trust-qi/optiga/include/optiga/optiga_util.h"
 1950              	 .file 17 "C:/Users/Yushev/git/optiga-trust-qi/optiga/include/optiga/pal/pal.h"
 1951              	 .file 18 "C:/Users/Yushev/git/optiga-trust-qi/optiga/include/optiga/pal/pal_logger.h"
 1952              	 .file 19 "C:/Users/Yushev/git/optiga-trust-qi/projects/xmc4700_relax_kit/common/Libraries/CMSIS/Include/core_cm4.h"
 1953              	 .file 20 "C:/Users/Yushev/git/optiga-trust-qi/projects/xmc4700_relax_kit/common/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 1954              	 .file 21 "C:/Users/Yushev/git/optiga-trust-qi/projects/xmc4700_relax_kit/common/Dave/Generated/USBD/usbd_extern.h"
 1955              	 .file 22 "C:/Users/Yushev/git/optiga-trust-qi/projects/xmc4700_relax_kit/common/Dave/Generated/USBD_VCOM/usbd_vcom_extern.h"
 1956              	 .file 23 "C:/Users/Yushev/git/optiga-trust-qi/optiga/include/optiga/common/optiga_lib_logger.h"
 1957              	 .file 24 "c:\\users\\yushev\\dave_4-4-2_32bit_2018-02-23\\dave-ide-4.4.2-32bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\string.h"
 1958              	 .file 25 "c:\\users\\yushev\\dave_4-4-2_32bit_2018-02-23\\dave-ide-4.4.2-32bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdio.h"
 1959              	 .file 26 "C:/Users/Yushev/git/optiga-trust-qi/optiga/include/optiga/pal/pal_os_timer.h"
 1960              	 .file 27 "C:/Users/Yushev/git/optiga-trust-qi/projects/xmc4700_relax_kit/common/Dave/Generated/USBD_VCOM/usbd_vcom.h"
DEFINED SYMBOLS
                            *ABS*:00000000 optiga_shell.c
    {standard input}:20     .text.optiga_util_callback:00000000 $t
    {standard input}:24     .text.optiga_util_callback:00000000 optiga_util_callback
    {standard input}:40     .text.optiga_util_callback:00000008 $d
    {standard input}:45     .text.optiga_shell_crypt_ecdsa_verify:00000000 $t
    {standard input}:49     .text.optiga_shell_crypt_ecdsa_verify:00000000 optiga_shell_crypt_ecdsa_verify
    {standard input}:90     .text.optiga_shell_crypt_ecdsa_verify:00000024 $d
    {standard input}:98     .text.optiga_shell_crypt_ecdsa_sign:00000000 $t
    {standard input}:102    .text.optiga_shell_crypt_ecdsa_sign:00000000 optiga_shell_crypt_ecdsa_sign
    {standard input}:143    .text.optiga_shell_crypt_ecdsa_sign:00000024 $d
    {standard input}:151    .text.optiga_shell_crypt_ecc_generate_keypair:00000000 $t
    {standard input}:155    .text.optiga_shell_crypt_ecc_generate_keypair:00000000 optiga_shell_crypt_ecc_generate_keypair
    {standard input}:196    .text.optiga_shell_crypt_ecc_generate_keypair:00000024 $d
    {standard input}:204    .text.optiga_shell_crypt_random:00000000 $t
    {standard input}:208    .text.optiga_shell_crypt_random:00000000 optiga_shell_crypt_random
    {standard input}:249    .text.optiga_shell_crypt_random:00000024 $d
    {standard input}:257    .text.optiga_shell_crypt_hash_data:00000000 $t
    {standard input}:261    .text.optiga_shell_crypt_hash_data:00000000 optiga_shell_crypt_hash_data
    {standard input}:302    .text.optiga_shell_crypt_hash_data:00000024 $d
    {standard input}:310    .text.optiga_shell_crypt_hash:00000000 $t
    {standard input}:314    .text.optiga_shell_crypt_hash:00000000 optiga_shell_crypt_hash
    {standard input}:355    .text.optiga_shell_crypt_hash:00000024 $d
    {standard input}:363    .text.optiga_shell_util_protected_update:00000000 $t
    {standard input}:367    .text.optiga_shell_util_protected_update:00000000 optiga_shell_util_protected_update
    {standard input}:420    .text.optiga_shell_util_protected_update:00000038 $d
    {standard input}:430    .text.optiga_shell_util_update_count:00000000 $t
    {standard input}:434    .text.optiga_shell_util_update_count:00000000 optiga_shell_util_update_count
    {standard input}:481    .text.optiga_shell_util_update_count:0000002c $d
    {standard input}:490    .text.optiga_shell_util_hibernate_restore:00000000 $t
    {standard input}:494    .text.optiga_shell_util_hibernate_restore:00000000 optiga_shell_util_hibernate_restore
    {standard input}:595    .text.optiga_shell_util_hibernate_restore:00000088 $d
    {standard input}:613    .text.optiga_shell_pair_host_optiga:00000000 $t
    {standard input}:617    .text.optiga_shell_pair_host_optiga:00000000 optiga_shell_pair_host_optiga
    {standard input}:676    .text.optiga_shell_pair_host_optiga:00000040 $d
    {standard input}:687    .text.optiga_shell_util_read_coprocessor_id:00000000 $t
    {standard input}:691    .text.optiga_shell_util_read_coprocessor_id:00000000 optiga_shell_util_read_coprocessor_id
    {standard input}:732    .text.optiga_shell_util_read_coprocessor_id:00000024 $d
    {standard input}:740    .text.optiga_shell_util_write_data:00000000 $t
    {standard input}:744    .text.optiga_shell_util_write_data:00000000 optiga_shell_util_write_data
    {standard input}:791    .text.optiga_shell_util_write_data:0000002c $d
    {standard input}:800    .text.optiga_shell_util_read_data:00000000 $t
    {standard input}:804    .text.optiga_shell_util_read_data:00000000 optiga_shell_util_read_data
    {standard input}:851    .text.optiga_shell_util_read_data:0000002c $d
    {standard input}:860    .text.optiga_shell_init:00000000 $t
    {standard input}:864    .text.optiga_shell_init:00000000 optiga_shell_init
    {standard input}:990    .text.optiga_shell_init:000000a0 $d
    {standard input}:1007   .text.optiga_shell_show_usage:00000000 $t
    {standard input}:1011   .text.optiga_shell_show_usage:00000000 optiga_shell_show_usage
    {standard input}:1062   .text.optiga_shell_show_usage:00000034 $d
    {standard input}:1070   .text.optiga_shell_deinit:00000000 $t
    {standard input}:1074   .text.optiga_shell_deinit:00000000 optiga_shell_deinit
    {standard input}:1144   .text.optiga_shell_deinit:00000034 $d
    {standard input}:1152   .text.print_performance_results:00000000 $t
    {standard input}:1157   .text.print_performance_results:00000000 print_performance_results
    {standard input}:1215   .text.print_performance_results:00000038 $d
    {standard input}:1223   .text.optiga_shell_selftest:00000000 $t
    {standard input}:1227   .text.optiga_shell_selftest:00000000 optiga_shell_selftest
    {standard input}:1300   .text.optiga_shell_selftest:00000054 $d
    {standard input}:1317   .text.optiga_shell_begin:00000000 $t
    {standard input}:1322   .text.optiga_shell_begin:00000000 optiga_shell_begin
    {standard input}:1552   .text.optiga_shell_begin:00000104 $d
    {standard input}:1566   .text.optiga_shell_wait_for_user:00000000 $t
    {standard input}:1571   .text.optiga_shell_wait_for_user:00000000 optiga_shell_wait_for_user
    {standard input}:1627   .text.optiga_shell_wait_for_user:00000038 $d
    {standard input}:1640   .data.optiga_cmds:00000000 optiga_cmds
    {standard input}:1924   .bss.me_util:00000000 me_util
    {standard input}:1636   .data.optiga_cmds:00000000 $d
    {standard input}:1920   .bss.me_util:00000000 $d
    {standard input}:1927   .bss.optiga_lib_status:00000000 $d
    {standard input}:1931   .bss.optiga_lib_status:00000000 optiga_lib_status
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
optiga_lib_print_message
example_optiga_crypt_ecdsa_verify
example_optiga_crypt_ecdsa_sign
example_optiga_crypt_ecc_generate_keypair
example_optiga_crypt_random
example_optiga_crypt_hash_data
example_optiga_crypt_hash
example_optiga_util_protected_update
example_optiga_util_update_count
example_optiga_util_hibernate_restore
example_pair_host_and_optiga_using_pre_shared_secret
example_read_coprocessor_id
example_optiga_util_write_data
example_optiga_util_read_data
optiga_util_create
optiga_util_open_application
optiga_util_write_data
optiga_lib_print_string_with_newline
strcmp
optiga_lib_print_string
optiga_util_close_application
optiga_util_destroy
pal_os_timer_get_time_in_milliseconds
sprintf
pal_os_timer_delay_in_milliseconds
pal_logger_read
strncmp
strlen
strcpy
pal_logger_write
logger_console
USBD_VCOM_BytesReceived
CDC_Device_USBTask
USBD_VCOM_cdc_interface
